//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   float4 EmitterSpawnInfoOffsets[2]; // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint UpdateStartInstance;          // Offset:  320 Size:     4
//   uint ShaderStageIndex;             // Offset:  324 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  328 Size:     4 [unused]
//   uint SpawnedInstances;             // Offset:  332 Size:     4
//   uint ComponentBufferSizeRead;      // Offset:  336 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  340 Size:     4
//   int NumEventsPerParticle;          // Offset:  344 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  348 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  352 Size:     4 [unused]
//   uint SimStart;                     // Offset:  356 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  360 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  364 Size:     4
//   uint SectionCount_Particles_StaticMesh;// Offset:  368 Size:     4
//   row_major float4x4 InstanceTransform_Particles_StaticMesh;// Offset:  384 Size:    64
//   row_major float4x4 InstanceTransformInverseTransposed_Particles_StaticMesh;// Offset:  448 Size:    64 [unused]
//   row_major float4x4 InstancePrevTransform_Particles_StaticMesh;// Offset:  512 Size:    64 [unused]
//   float InstanceInvDeltaTime_Particles_StaticMesh;// Offset:  576 Size:     4 [unused]
//   float4 InstanceWorldVelocity_Particles_StaticMesh;// Offset:  592 Size:    16 [unused]
//   uint AreaWeightedSamplingName_Particles_StaticMesh;// Offset:  608 Size:     4
//   uint NumTexCoordName_Particles_StaticMesh;// Offset:  612 Size:     4 [unused]
//   uint SectionCount_Particles_StaticMesh2;// Offset:  616 Size:     4
//   row_major float4x4 InstanceTransform_Particles_StaticMesh2;// Offset:  624 Size:    64
//   row_major float4x4 InstanceTransformInverseTransposed_Particles_StaticMesh2;// Offset:  688 Size:    64 [unused]
//   row_major float4x4 InstancePrevTransform_Particles_StaticMesh2;// Offset:  752 Size:    64 [unused]
//   float InstanceInvDeltaTime_Particles_StaticMesh2;// Offset:  816 Size:     4 [unused]
//   float4 InstanceWorldVelocity_Particles_StaticMesh2;// Offset:  832 Size:    16 [unused]
//   uint AreaWeightedSamplingName_Particles_StaticMesh2;// Offset:  848 Size:     4
//   uint NumTexCoordName_Particles_StaticMesh2;// Offset:  852 Size:     4 [unused]
//   uint SectionCount_Particles_StaticMesh3;// Offset:  856 Size:     4
//   row_major float4x4 InstanceTransform_Particles_StaticMesh3;// Offset:  864 Size:    64
//   row_major float4x4 InstanceTransformInverseTransposed_Particles_StaticMesh3;// Offset:  928 Size:    64 [unused]
//   row_major float4x4 InstancePrevTransform_Particles_StaticMesh3;// Offset:  992 Size:    64 [unused]
//   float InstanceInvDeltaTime_Particles_StaticMesh3;// Offset: 1056 Size:     4 [unused]
//   float4 InstanceWorldVelocity_Particles_StaticMesh3;// Offset: 1072 Size:    16 [unused]
//   uint AreaWeightedSamplingName_Particles_StaticMesh3;// Offset: 1088 Size:     4
//   uint NumTexCoordName_Particles_StaticMesh3;// Offset: 1092 Size:     4 [unused]
//   float MinTime_Color_ColorCurve;    // Offset: 1096 Size:     4
//   float MaxTime_Color_ColorCurve;    // Offset: 1100 Size:     4 [unused]
//   float InvTimeRange_Color_ColorCurve;// Offset: 1104 Size:     4
//   float MinTime_ConvergenceRate_Particles_Position_FloatCurve;// Offset: 1108 Size:     4
//   float MaxTime_ConvergenceRate_Particles_Position_FloatCurve;// Offset: 1112 Size:     4 [unused]
//   float InvTimeRange_ConvergenceRate_Particles_Position_FloatCurve;// Offset: 1116 Size:     4
//
// }
//
// cbuffer FEmitterParameters
// {
//
//   float Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:    0 Size:     4
//   float Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:    4 Size:     4
//   int Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:    8 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   12 Size:     4 [unused]
//   int Engine_System_TickCount;       // Offset:   16 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:   20 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:   24 Size:     4 [unused]
//   int Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:   28 Size:     4 [unused]
//   float4 Engine_Owner_Position;      // Offset:   32 Size:    16
//   float Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:   48 Size:     4
//   float Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:   52 Size:     4
//   int Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:   56 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   64 Size:    16 [unused]
//   float4 Constants_Emitter_InitializeParticle_SpriteSize;// Offset:   80 Size:    16
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   96 Size:    16 [unused]
//   float Emitter_Age;                 // Offset:  112 Size:     4
//   row_major float4x4 Engine_Owner_SystemLocalToWorld;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocal;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64
//   float Engine_DeltaTime;            // Offset:  384 Size:     4
//   float Constants_Emitter_Color_ScaleAlpha;// Offset:  388 Size:     4
//   float Emitter_AlphaScale;          // Offset:  392 Size:     4
//   float Constants_Emitter_FloatFromCurve001_ScaleCurve;// Offset:  396 Size:     4
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  400 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  404 Size:     4 [unused]
//   float Engine_Time;                 // Offset:  408 Size:     4 [unused]
//   float Engine_InverseDeltaTime;     // Offset:  412 Size:     4
//   int Engine_ExecutionCount;         // Offset:  416 Size:     4 [unused]
//   float Emitter_SpawnRate;           // Offset:  420 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:  424 Size:     4
//   float PREV_Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:  428 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:  432 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:  436 Size:     4 [unused]
//   int PREV_Emitter_RandomSeed;       // Offset:  440 Size:     4 [unused]
//   int PREV_Engine_System_TickCount;  // Offset:  444 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:  448 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:  452 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:  456 Size:     4 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  464 Size:    16
//   float PREV_Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:  480 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:  484 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:  488 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_Color;// Offset:  496 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_SpriteSize;// Offset:  512 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_MeshScale;// Offset:  528 Size:    16 [unused]
//   float PREV_Emitter_Age;            // Offset:  544 Size:     4
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorld;// Offset:  560 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocal;// Offset:  624 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset:  688 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset:  752 Size:    64 [unused]
//   float PREV_Engine_DeltaTime;       // Offset:  816 Size:     4 [unused]
//   float PREV_Constants_Emitter_Color_ScaleAlpha;// Offset:  820 Size:     4 [unused]
//   float PREV_Emitter_AlphaScale;     // Offset:  824 Size:     4 [unused]
//   float PREV_Constants_Emitter_FloatFromCurve001_ScaleCurve;// Offset:  828 Size:     4 [unused]
//   float PREV_Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  832 Size:     4 [unused]
//   float PREV_Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  836 Size:     4 [unused]
//   float PREV_Engine_Time;            // Offset:  840 Size:     4 [unused]
//   float PREV_Engine_InverseDeltaTime;// Offset:  844 Size:     4 [unused]
//   int PREV_Engine_ExecutionCount;    // Offset:  848 Size:     4 [unused]
//   float PREV_Emitter_SpawnRate;      // Offset:  852 Size:     4 [unused]
//   int PREV_Engine_Emitter_TotalSpawnedParticles;// Offset:  856 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// IndexBuffer_Particles_StaticMesh    texture    uint         buf             t2      1 
// VertexBuffer_Particles_StaticMesh    texture   float         buf             t3      1 
// SectionBuffer_Particles_StaticMesh    texture   uint4         buf             t4      1 
// TriangleBuffer_Particles_StaticMesh    texture   uint4         buf             t5      1 
// IndexBuffer_Particles_StaticMesh2    texture    uint         buf             t6      1 
// VertexBuffer_Particles_StaticMesh2    texture   float         buf             t7      1 
// SectionBuffer_Particles_StaticMesh2    texture   uint4         buf             t8      1 
// TriangleBuffer_Particles_StaticMesh2    texture   uint4         buf             t9      1 
// IndexBuffer_Particles_StaticMesh3    texture    uint         buf            t10      1 
// VertexBuffer_Particles_StaticMesh3    texture   float         buf            t11      1 
// SectionBuffer_Particles_StaticMesh3    texture   uint4         buf            t12      1 
// TriangleBuffer_Particles_StaticMesh3    texture   uint4         buf            t13      1 
// CurveLUT_Color_ColorCurve         texture   float         buf            t14      1 
// CurveLUT_ConvergenceRate_Particles_Position_FloatCurve    texture   float         buf            t15      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FEmitterParameters                cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[70], dynamicIndexed
dcl_constantbuffer CB1[35], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_buffer (float,float,float,float) t7
dcl_resource_buffer (uint,uint,uint,uint) t8
dcl_resource_buffer (uint,uint,uint,uint) t9
dcl_resource_buffer (uint,uint,uint,uint) t10
dcl_resource_buffer (float,float,float,float) t11
dcl_resource_buffer (uint,uint,uint,uint) t12
dcl_resource_buffer (uint,uint,uint,uint) t13
dcl_resource_buffer (float,float,float,float) t14
dcl_resource_buffer (float,float,float,float) t15
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadID.x
dcl_temps 10
dcl_thread_group 64, 1, 1
iadd r0.x, vThreadID.x, cb0[20].x
ieq r0.y, cb0[22].z, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].zzzz, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r1.x, r0.y, cb0[20].w
iadd r0.z, r1.x, cb0[20].x
ult r0.z, r0.x, r0.z
if_nz r0.z
  ult r0.z, r0.x, r0.y
  if_nz r0.z
    ld_indexable(buffer)(float,float,float,float) r0.z, r0.xxxx, t0.yzxw
    imad r2.xyzw, l(5, 6, 7, 9), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r0.w, r2.xxxx, t0.yzwx
    ld_indexable(buffer)(float,float,float,float) r1.y, r2.yyyy, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r1.z, r2.zzzz, t0.yzxw
    ishl r3.xyzw, cb0[21].xyyy, l(3, 1, 2, 3)
    iadd r1.w, r0.x, r3.x
    ld_indexable(buffer)(float,float,float,float) r2.x, r1.wwww, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r2.y, r2.wwww, t0.yxzw
    imad r4.xyzw, l(10, 12, 13, 14), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r2.z, r4.xxxx, t0.yzxw
    ld_indexable(buffer)(float,float,float,float) r5.x, r4.yyyy, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r5.y, r4.zzzz, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r5.z, r4.wwww, t0.yzxw
    imad r4.xyzw, l(18, 19, 20, 21), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r1.w, r4.xxxx, t0.yzwx
    ld_indexable(buffer)(float,float,float,float) r2.w, r4.yyyy, t0.yzwx
    ld_indexable(buffer)(float,float,float,float) r3.x, r4.zzzz, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r4.x, r4.wwww, t0.xyzw
    imad r6.xyzw, l(22, 23, 24, 25), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r4.y, r6.xxxx, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r4.z, r6.yyyy, t0.yzxw
    ld_indexable(buffer)(sint,sint,sint,sint) r4.w, r0.xxxx, t1.yzwx
    ld_indexable(buffer)(float,float,float,float) r6.x, r6.zzzz, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r6.y, r6.wwww, t0.yxzw
    imad r5.w, l(26), cb0[21].x, r0.x
    ld_indexable(buffer)(float,float,float,float) r6.z, r5.wwww, t0.yzxw
    add r0.z, r0.z, cb1[24].x
    max r5.w, r0.w, l(0.000010)
    add r6.w, r5.w, l(-0.000100)
    lt r6.w, r0.z, r6.w
    div r5.w, r0.z, r5.w
    add r7.x, r5.w, -cb0[68].z
    mul_sat r7.x, r7.x, cb0[69].x
    mul r7.y, r7.x, l(127.000000)
    round_ni r7.y, r7.y
    lt r7.z, r7.y, l(127.000000)
    add r7.w, r7.y, l(1.000000)
    mad r7.x, r7.x, l(127.000000), -r7.y
    mul r8.x, r7.y, l(4.000000)
    mul r7.w, r7.w, l(4.000000)
    movc r7.z, r7.z, r7.w, l(508.000000)
    ftou r7.w, r8.x
    ld_indexable(buffer)(float,float,float,float) r8.x, r7.wwww, t14.xyzw
    mad r9.xyz, r7.yyyy, l(4.000000, 4.000000, 4.000000, 0.000000), l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r9.xyz, r9.xyzx
    ld_indexable(buffer)(float,float,float,float) r8.y, r9.xxxx, t14.yxzw
    ld_indexable(buffer)(float,float,float,float) r8.z, r9.yyyy, t14.yzxw
    ld_indexable(buffer)(float,float,float,float) r8.w, r9.zzzz, t14.yzwx
    ftou r7.y, r7.z
    ld_indexable(buffer)(float,float,float,float) r9.x, r7.yyyy, t14.xyzw
    add r7.yzw, r7.zzzz, l(0.000000, 1.000000, 2.000000, 3.000000)
    ftou r7.yzw, r7.yyzw
    ld_indexable(buffer)(float,float,float,float) r9.y, r7.yyyy, t14.yxzw
    ld_indexable(buffer)(float,float,float,float) r9.z, r7.zzzz, t14.yzxw
    ld_indexable(buffer)(float,float,float,float) r9.w, r7.wwww, t14.yzwx
    add r9.xyzw, -r8.xyzw, r9.xyzw
    mad r7.xyzw, r7.xxxx, r9.xyzw, r8.xyzw
    mul r7.w, r7.w, cb1[24].y
    mul r7.w, r7.w, cb1[24].z
    add r8.x, r5.w, -cb0[69].y
    mul_sat r8.x, r8.x, cb0[69].w
    mul r8.y, r8.x, l(127.000000)
    round_ni r8.y, r8.y
    lt r8.z, r8.y, l(127.000000)
    add r8.w, r8.y, l(1.000000)
    mad r8.x, r8.x, l(127.000000), -r8.y
    ftou r8.y, r8.y
    ld_indexable(buffer)(float,float,float,float) r8.y, r8.yyyy, t15.yxzw
    ftou r8.w, r8.w
    movc r8.z, r8.z, r8.w, l(127)
    ld_indexable(buffer)(float,float,float,float) r8.z, r8.zzzz, t15.yzxw
    add r8.z, -r8.y, r8.z
    mad r8.x, r8.x, r8.z, r8.y
    mul r8.x, r8.x, cb1[24].w
    mul_sat r8.x, r8.x, cb1[24].x
    add r8.yzw, -r5.xxyz, r2.xxyz
    mad r5.xyz, r8.xxxx, r8.yzwy, r5.xyzx
    mad r5.xyz, r6.xyzx, cb1[24].xxxx, r5.xyzx
    ieq r6.w, r6.w, l(-1)
    if_nz r6.w
      imm_atomic_iadd r1.x, u2, cb0[22].w, l(1)
    endif 
    iadd r6.w, r1.x, cb0[20].x
    store_uav_typed u1.xyzw, r6.wwww, r0.zzzz
    iadd r0.z, r1.x, cb0[21].y
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r7.xxxx
    iadd r3.yzw, r1.xxxx, r3.yyzw
    iadd r3.yzw, r3.yyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r3.yyyy, r7.yyyy
    imad r8.xyz, l(3, 5, 6, 0), cb0[21].yyyy, r1.xxxx
    iadd r8.xyz, r8.xyzx, cb0[20].xxxx
    store_uav_typed u1.xyzw, r8.xxxx, r7.zzzz
    store_uav_typed u1.xyzw, r3.zzzz, r7.wwww
    store_uav_typed u1.xyzw, r8.yyyy, r0.wwww
    store_uav_typed u1.xyzw, r8.zzzz, r1.yyyy
    imad r7.xyzw, l(7, 9, 10, 11), cb0[21].yyyy, r1.xxxx
    iadd r7.xyzw, r7.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r7.xxxx, r1.zzzz
    store_uav_typed u1.xyzw, r3.wwww, r2.xxxx
    store_uav_typed u1.xyzw, r7.yyyy, r2.yyyy
    store_uav_typed u1.xyzw, r7.zzzz, r2.zzzz
    store_uav_typed u1.xyzw, r7.wwww, r5.wwww
    imad r7.xyzw, l(12, 13, 14, 15), cb0[21].yyyy, r1.xxxx
    iadd r7.xyzw, r7.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r7.xxxx, r5.xxxx
    store_uav_typed u1.xyzw, r7.yyyy, r5.yyyy
    store_uav_typed u1.xyzw, r7.zzzz, r5.zzzz
    store_uav_typed u1.xyzw, r7.wwww, r6.xxxx
    ishl r0.z, cb0[21].y, l(4)
    iadd r0.z, r1.x, r0.z
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r6.yyyy
    imad r5.xyzw, l(17, 18, 19, 20), cb0[21].yyyy, r1.xxxx
    iadd r5.xyzw, r5.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r5.xxxx, r6.zzzz
    store_uav_typed u1.xyzw, r5.yyyy, r1.wwww
    store_uav_typed u1.xyzw, r5.zzzz, r2.wwww
    store_uav_typed u1.xyzw, r5.wwww, r3.xxxx
    imad r2.xyzw, l(21, 22, 23, 24), cb0[21].yyyy, r1.xxxx
    iadd r2.xyzw, r2.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r2.xxxx, r4.xxxx
    store_uav_typed u1.xyzw, r2.yyyy, r4.yyyy
    store_uav_typed u1.xyzw, r2.zzzz, r4.zzzz
    store_uav_typed u0.xyzw, r6.wwww, r4.wwww
    store_uav_typed u1.xyzw, r2.wwww, r6.xxxx
    imad r0.zw, l(0, 0, 25, 26), cb0[21].yyyy, r1.xxxx
    iadd r0.zw, r0.zzzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r0.zzzz, r6.yyyy
    store_uav_typed u1.xyzw, r0.wwww, r6.zzzz
  else 
    imad r0.z, r0.x, l(0x59834000), cb0[9].z
    iadd r0.x, -r0.y, r0.x
    itof r0.y, r0.x
    ge r2.xyzw, r0.yyyy, cb0[10].xyzw
    and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
    dp4 r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
    ge r2.xyzw, r0.yyyy, cb0[11].xyzw
    and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
    dp4 r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
    ftoi r0.yw, r0.yyyw
    iadd r0.y, r0.y, r0.w
    iadd r0.w, r0.x, -cb0[r0.y + 12].w
    iadd r0.x, r0.x, cb1[26].z
    itof r0.w, r0.w
    mad r0.y, cb0[r0.y + 12].x, r0.w, cb0[r0.y + 12].y
    add r0.w, -r0.y, cb1[24].x
    mul r0.y, r0.y, cb1[25].w
    add r1.yzw, cb1[2].xxyz, -cb1[29].xxyz
    mad r1.yzw, r0.yyyy, r1.yyzw, cb1[29].xxyz
    add r2.x, cb1[7].x, -cb1[34].x
    mad r0.y, r0.y, r2.x, cb1[34].x
    add r2.x, -cb1[0].x, cb1[0].y
    mov r3.x, vThreadID.x
    mov r3.y, cb0[9].z
    imad r2.yz, r3.xxyx, l(0, 0x0019660d, 0x0019660d, 0), l(0, 0x3c6ef35f, 0x3c6ef35f, 0)
    imad r3.xyz, r2.yyyy, r2.yyyy, l(0x3c3c2745, 0x3c095b2b, 0x3beff51e, 0)
    imad r4.xyz, r2.zzzz, r3.xyzx, r2.yyyy
    imad r5.xyz, r3.xyzx, r4.xyzx, r2.zzzz
    imad r2.yzw, r4.xxyz, r5.xxyz, r2.yyyy
    imad r2.yzw, r4.xxyz, r2.yyzw, r3.xxyz
    ishr r2.yzw, r2.yyzw, l(0, 8, 8, 8)
    and r2.yzw, r2.yyzw, l(0, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r2.yzw, r2.yyzw
    mul r2.x, r2.x, r2.y
    mad r2.x, r2.x, l(0.000000), cb1[0].x
    add r2.y, -cb1[3].x, cb1[3].y
    mul r2.y, r2.y, r2.z
    mad r2.y, r2.y, l(0.000000), cb1[3].x
    mul r2.xz, r2.xxwx, l(360.000000, 0.000000, 0.000000, 0.000000)
    iadd r2.w, r0.z, l(0x00196612)
    iadd r0.z, r0.z, r2.w
    imad r2.w, r2.w, l(0x0019660d), l(0x3c6ef35f)
    ushr r3.x, r2.w, l(16)
    bfi r2.w, l(16), l(16), r2.w, r3.x
    imad r3.x, l(0xbf793ca1), r2.w, l(0x596c3c88)
    imad r3.y, r2.w, r3.x, l(0xbf793ca1)
    imad r2.w, r3.x, r3.y, r2.w
    imad r2.w, r3.y, r2.w, r3.x
    utof r2.w, r2.w
    mul r2.w, r2.w, l(0.000000)
    utof r3.x, cb0[23].x
    mul r2.w, r2.w, r3.x
    ftou r2.w, r2.w
    iadd r3.x, cb0[23].x, l(-1)
    umin r2.w, r2.w, r3.x
    ld_indexable(buffer)(uint,uint,uint,uint) r3.xyzw, r2.wwww, t4.xyzw
    iadd r2.w, r0.z, l(0x00196612)
    iadd r0.z, r0.z, r2.w
    imad r2.w, r2.w, l(0x0019660d), l(0x3c6ef35f)
    ushr r4.x, r2.w, l(16)
    bfi r2.w, l(16), l(16), r2.w, r4.x
    imad r4.x, l(0xbf793ca1), r2.w, l(0x596c3c88)
    imad r4.y, r2.w, r4.x, l(0xbf793ca1)
    imad r2.w, r4.x, r4.y, r2.w
    imad r2.w, r4.y, r2.w, r4.x
    utof r2.w, r2.w
    mul r2.w, r2.w, l(0.000000)
    lt r2.w, r3.z, r2.w
    if_nz r2.w
      ld_indexable(buffer)(uint,uint,uint,uint) r3.xy, r3.wwww, t4.xyzw
    endif 
    iadd r2.w, r0.z, l(0x00196612)
    iadd r0.z, r0.z, r2.w
    imad r2.w, r2.w, l(0x0019660d), l(0x3c6ef35f)
    ushr r3.z, r2.w, l(16)
    bfi r2.w, l(16), l(16), r2.w, r3.z
    imad r3.z, l(0xbf793ca1), r2.w, l(0x596c3c88)
    imad r3.w, r2.w, r3.z, l(0xbf793ca1)
    imad r2.w, r3.z, r3.w, r2.w
    imad r2.w, r3.w, r2.w, r3.z
    utof r2.w, r2.w
    mul r2.w, r2.w, l(0.000000)
    if_z cb0[38].x
      utof r3.z, r3.y
      mul r3.z, r2.w, r3.z
      ftou r3.z, r3.z
      iadd r3.w, r3.y, l(-1)
      umin r3.z, r3.w, r3.z
      iadd r3.z, r3.z, r3.x
    else 
      utof r3.w, r3.y
      mul r2.w, r2.w, r3.w
      ftou r2.w, r2.w
      iadd r3.y, r3.y, l(-1)
      umin r2.w, r2.w, r3.y
      iadd r3.y, r2.w, r3.x
      ld_indexable(buffer)(uint,uint,uint,uint) r3.yw, r3.yyyy, t5.zxwy
      iadd r4.x, r0.z, l(0x00196612)
      iadd r0.z, r0.z, r4.x
      imad r4.x, r4.x, l(0x0019660d), l(0x3c6ef35f)
      ushr r4.y, r4.x, l(16)
      bfi r4.x, l(16), l(16), r4.x, r4.y
      imad r4.y, l(0xbf793ca1), r4.x, l(0x596c3c88)
      imad r4.z, r4.x, r4.y, l(0xbf793ca1)
      imad r4.x, r4.y, r4.z, r4.x
      imad r4.x, r4.z, r4.x, r4.y
      utof r4.x, r4.x
      mul r4.x, r4.x, l(0.000000)
      lt r3.y, r3.y, r4.x
      movc r2.w, r3.y, r3.w, r2.w
      iadd r3.z, r2.w, r3.x
    endif 
    iadd r2.w, r0.z, l(0x00196612)
    iadd r0.z, r0.z, r2.w
    imad r2.w, r2.w, l(0x0019660d), l(0x3c6ef35f)
    ushr r3.x, r2.w, l(16)
    bfi r2.w, l(16), l(16), r2.w, r3.x
    imad r3.x, l(0xbf793ca1), r2.w, l(0x596c3c88)
    imad r3.y, r2.w, r3.x, l(0xbf793ca1)
    imad r2.w, r3.x, r3.y, r2.w
    imad r2.w, r3.y, r2.w, r3.x
    utof r2.w, r2.w
    mul r2.w, r2.w, l(0.000000)
    iadd r3.x, r0.z, l(0x00196612)
    iadd r0.z, r0.z, r3.x
    imad r3.x, r3.x, l(0x0019660d), l(0x3c6ef35f)
    ushr r3.y, r3.x, l(16)
    bfi r3.x, l(16), l(16), r3.x, r3.y
    imad r3.y, l(0xbf793ca1), r3.x, l(0x596c3c88)
    imad r3.w, r3.x, r3.y, l(0xbf793ca1)
    imad r3.x, r3.y, r3.w, r3.x
    imad r3.x, r3.w, r3.x, r3.y
    utof r3.x, r3.x
    mul r3.y, r3.x, l(0.000000)
    sqrt r2.w, r2.w
    add r3.w, -r2.w, l(1.000000)
    mad r3.x, -r3.x, l(0.000000), l(1.000000)
    mul r3.x, r2.w, r3.x
    mul r2.w, r2.w, r3.y
    imul null, r3.y, r3.z, l(3)
    ld_indexable(buffer)(uint,uint,uint,uint) r3.y, r3.yyyy, t2.yxzw
    imul null, r4.x, r3.y, l(3)
    imad r4.yz, r3.zzzz, l(0, 3, 3, 0), l(0, 1, 2, 0)
    ld_indexable(buffer)(uint,uint,uint,uint) r3.z, r4.yyyy, t2.yzxw
    imul null, r4.y, r3.z, l(3)
    ld_indexable(buffer)(uint,uint,uint,uint) r4.z, r4.zzzz, t2.yzxw
    imul null, r4.w, r4.z, l(3)
    ld_indexable(buffer)(float,float,float,float) r5.x, r4.xxxx, t3.xyzw
    imad r6.xy, r3.yyyy, l(3, 3, 0, 0), l(1, 2, 0, 0)
    ld_indexable(buffer)(float,float,float,float) r5.y, r6.xxxx, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r5.z, r6.yyyy, t3.yzxw
    ld_indexable(buffer)(float,float,float,float) r6.x, r4.yyyy, t3.xyzw
    imad r3.yz, r3.zzzz, l(0, 3, 3, 0), l(0, 1, 2, 0)
    ld_indexable(buffer)(float,float,float,float) r6.y, r3.yyyy, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r6.z, r3.zzzz, t3.yzxw
    ld_indexable(buffer)(float,float,float,float) r4.x, r4.wwww, t3.xywz
    imad r3.yz, r4.zzzz, l(0, 3, 3, 0), l(0, 1, 2, 0)
    ld_indexable(buffer)(float,float,float,float) r4.y, r3.yyyy, t3.yxwz
    ld_indexable(buffer)(float,float,float,float) r4.w, r3.zzzz, t3.yzwx
    mul r3.xyz, r3.xxxx, r6.xyzx
    mad r3.xyz, r5.xyzx, r3.wwww, r3.xyzx
    mad r3.xyz, r4.xywx, r2.wwww, r3.xyzx
    mul r4.xyz, r3.yyyy, cb0[25].xyzx
    mad r3.xyw, r3.xxxx, cb0[24].xyxz, r4.xyxz
    mad r3.xyz, r3.zzzz, cb0[26].xyzx, r3.xywx
    add r3.xyz, r3.xyzx, cb0[27].xyzx
    mul r2.w, r3.y, cb1[21].z
    mad r2.w, r3.x, cb1[20].z, r2.w
    mad r2.w, r3.z, cb1[22].z, r2.w
    add r2.w, r2.w, cb1[23].z
    mul_sat r3.w, r0.y, l(0.500000)
    mul r3.w, r3.w, l(200.000000)
    lt r2.w, r2.w, r3.w
    movc r3.xyz, r2.wwww, r3.xyzx, r1.yzwy
    iadd r2.w, r0.z, l(0x00196612)
    iadd r0.z, r0.z, r2.w
    imad r2.w, r2.w, l(0x0019660d), l(0x3c6ef35f)
    ushr r3.w, r2.w, l(16)
    bfi r2.w, l(16), l(16), r2.w, r3.w
    imad r3.w, l(0xbf793ca1), r2.w, l(0x596c3c88)
    imad r4.x, r2.w, r3.w, l(0xbf793ca1)
    imad r2.w, r3.w, r4.x, r2.w
    imad r2.w, r4.x, r2.w, r3.w
    utof r2.w, r2.w
    mul r2.w, r2.w, l(0.000000)
    utof r3.w, cb0[38].z
    mul r2.w, r2.w, r3.w
    ftou r2.w, r2.w
    iadd r3.w, cb0[38].z, l(-1)
    umin r2.w, r2.w, r3.w
    ld_indexable(buffer)(uint,uint,uint,uint) r4.xyzw, r2.wwww, t8.xyzw
    iadd r2.w, r0.z, l(0x00196612)
    iadd r0.z, r0.z, r2.w
    imad r2.w, r2.w, l(0x0019660d), l(0x3c6ef35f)
    ushr r3.w, r2.w, l(16)
    bfi r2.w, l(16), l(16), r2.w, r3.w
    imad r3.w, l(0xbf793ca1), r2.w, l(0x596c3c88)
    imad r5.x, r2.w, r3.w, l(0xbf793ca1)
    imad r2.w, r3.w, r5.x, r2.w
    imad r2.w, r5.x, r2.w, r3.w
    utof r2.w, r2.w
    mul r2.w, r2.w, l(0.000000)
    lt r2.w, r4.z, r2.w
    if_nz r2.w
      ld_indexable(buffer)(uint,uint,uint,uint) r4.xy, r4.wwww, t8.xyzw
    endif 
    iadd r2.w, r0.z, l(0x00196612)
    iadd r0.z, r0.z, r2.w
    imad r2.w, r2.w, l(0x0019660d), l(0x3c6ef35f)
    ushr r3.w, r2.w, l(16)
    bfi r2.w, l(16), l(16), r2.w, r3.w
    imad r3.w, l(0xbf793ca1), r2.w, l(0x596c3c88)
    imad r4.z, r2.w, r3.w, l(0xbf793ca1)
    imad r2.w, r3.w, r4.z, r2.w
    imad r2.w, r4.z, r2.w, r3.w
    utof r2.w, r2.w
    mul r2.w, r2.w, l(0.000000)
    if_z cb0[53].x
      utof r3.w, r4.y
      mul r3.w, r2.w, r3.w
      ftou r3.w, r3.w
      iadd r4.z, r4.y, l(-1)
      umin r3.w, r3.w, r4.z
      iadd r3.w, r3.w, r4.x
    else 
      utof r4.z, r4.y
      mul r2.w, r2.w, r4.z
      ftou r2.w, r2.w
      iadd r4.y, r4.y, l(-1)
      umin r2.w, r2.w, r4.y
      iadd r4.y, r2.w, r4.x
      ld_indexable(buffer)(uint,uint,uint,uint) r4.yz, r4.yyyy, t9.zxyw
      iadd r4.w, r0.z, l(0x00196612)
      iadd r0.z, r0.z, r4.w
      imad r4.w, r4.w, l(0x0019660d), l(0x3c6ef35f)
      ushr r5.x, r4.w, l(16)
      bfi r4.w, l(16), l(16), r4.w, r5.x
      imad r5.x, l(0xbf793ca1), r4.w, l(0x596c3c88)
      imad r5.y, r4.w, r5.x, l(0xbf793ca1)
      imad r4.w, r5.x, r5.y, r4.w
      imad r4.w, r5.y, r4.w, r5.x
      utof r4.w, r4.w
      mul r4.w, r4.w, l(0.000000)
      lt r4.y, r4.y, r4.w
      movc r2.w, r4.y, r4.z, r2.w
      iadd r3.w, r2.w, r4.x
    endif 
    iadd r2.w, r0.z, l(0x00196612)
    iadd r0.z, r0.z, r2.w
    imad r2.w, r2.w, l(0x0019660d), l(0x3c6ef35f)
    ushr r4.x, r2.w, l(16)
    bfi r2.w, l(16), l(16), r2.w, r4.x
    imad r4.x, l(0xbf793ca1), r2.w, l(0x596c3c88)
    imad r4.y, r2.w, r4.x, l(0xbf793ca1)
    imad r2.w, r4.x, r4.y, r2.w
    imad r2.w, r4.y, r2.w, r4.x
    utof r2.w, r2.w
    mul r2.w, r2.w, l(0.000000)
    iadd r4.x, r0.z, l(0x00196612)
    iadd r0.z, r0.z, r4.x
    imad r4.x, r4.x, l(0x0019660d), l(0x3c6ef35f)
    ushr r4.y, r4.x, l(16)
    bfi r4.x, l(16), l(16), r4.x, r4.y
    imad r4.y, l(0xbf793ca1), r4.x, l(0x596c3c88)
    imad r4.z, r4.x, r4.y, l(0xbf793ca1)
    imad r4.x, r4.y, r4.z, r4.x
    imad r4.x, r4.z, r4.x, r4.y
    utof r4.x, r4.x
    mul r4.y, r4.x, l(0.000000)
    sqrt r2.w, r2.w
    add r4.z, -r2.w, l(1.000000)
    mad r4.x, -r4.x, l(0.000000), l(1.000000)
    mul r4.x, r2.w, r4.x
    mul r2.w, r2.w, r4.y
    imul null, r4.y, r3.w, l(3)
    ld_indexable(buffer)(uint,uint,uint,uint) r4.y, r4.yyyy, t6.yxzw
    imul null, r4.w, r4.y, l(3)
    imad r5.xy, r3.wwww, l(3, 3, 0, 0), l(1, 2, 0, 0)
    ld_indexable(buffer)(uint,uint,uint,uint) r3.w, r5.xxxx, t6.yzwx
    imul null, r5.x, r3.w, l(3)
    ld_indexable(buffer)(uint,uint,uint,uint) r5.y, r5.yyyy, t6.yxzw
    imul null, r5.z, r5.y, l(3)
    ld_indexable(buffer)(float,float,float,float) r6.x, r4.wwww, t7.xyzw
    imad r4.yw, r4.yyyy, l(0, 3, 0, 3), l(0, 1, 0, 2)
    ld_indexable(buffer)(float,float,float,float) r6.y, r4.yyyy, t7.yxzw
    ld_indexable(buffer)(float,float,float,float) r6.z, r4.wwww, t7.yzxw
    ld_indexable(buffer)(float,float,float,float) r7.x, r5.xxxx, t7.xyzw
    imad r4.yw, r3.wwww, l(0, 3, 0, 3), l(0, 1, 0, 2)
    ld_indexable(buffer)(float,float,float,float) r7.y, r4.yyyy, t7.yxzw
    ld_indexable(buffer)(float,float,float,float) r7.z, r4.wwww, t7.yzxw
    ld_indexable(buffer)(float,float,float,float) r5.x, r5.zzzz, t7.xwyz
    imad r4.yw, r5.yyyy, l(0, 3, 0, 3), l(0, 1, 0, 2)
    ld_indexable(buffer)(float,float,float,float) r5.z, r4.yyyy, t7.ywxz
    ld_indexable(buffer)(float,float,float,float) r5.w, r4.wwww, t7.ywzx
    mul r4.xyw, r4.xxxx, r7.xyxz
    mad r4.xyz, r6.xyzx, r4.zzzz, r4.xywx
    mad r4.xyz, r5.xzwx, r2.wwww, r4.xyzx
    mul r5.xyz, r4.yyyy, cb0[40].xyzx
    mad r4.xyw, r4.xxxx, cb0[39].xyxz, r5.xyxz
    mad r4.xyz, r4.zzzz, cb0[41].xyzx, r4.xywx
    add r4.xyz, r4.xyzx, cb0[42].xyzx
    lt r5.xy, l(3.000000, 6.000000, 0.000000, 0.000000), r0.yyyy
    add r5.zw, r0.yyyy, l(0.000000, 0.000000, -3.000000, -6.000000)
    and r5.xy, r5.zwzz, r5.xyxx
    mov_sat r5.xy, r5.xyxx
    add r4.xyz, -r3.xyzx, r4.xyzx
    mad r3.xyz, r5.xxxx, r4.xyzx, r3.xyzx
    iadd r0.y, r0.z, l(0x00196612)
    iadd r0.z, r0.y, r0.z
    imad r0.y, r0.y, l(0x0019660d), l(0x3c6ef35f)
    ushr r2.w, r0.y, l(16)
    bfi r0.y, l(16), l(16), r0.y, r2.w
    imad r2.w, l(0xbf793ca1), r0.y, l(0x596c3c88)
    imad r3.w, r0.y, r2.w, l(0xbf793ca1)
    imad r0.y, r2.w, r3.w, r0.y
    imad r0.y, r3.w, r0.y, r2.w
    utof r0.y, r0.y
    mul r0.y, r0.y, l(0.000000)
    utof r2.w, cb0[53].z
    mul r0.y, r0.y, r2.w
    ftou r0.y, r0.y
    iadd r2.w, cb0[53].z, l(-1)
    umin r0.y, r0.y, r2.w
    ld_indexable(buffer)(uint,uint,uint,uint) r4.xyzw, r0.yyyy, t12.xyzw
    iadd r0.y, r0.z, l(0x00196612)
    iadd r0.z, r0.y, r0.z
    imad r0.y, r0.y, l(0x0019660d), l(0x3c6ef35f)
    ushr r2.w, r0.y, l(16)
    bfi r0.y, l(16), l(16), r0.y, r2.w
    imad r2.w, l(0xbf793ca1), r0.y, l(0x596c3c88)
    imad r3.w, r0.y, r2.w, l(0xbf793ca1)
    imad r0.y, r2.w, r3.w, r0.y
    imad r0.y, r3.w, r0.y, r2.w
    utof r0.y, r0.y
    mul r0.y, r0.y, l(0.000000)
    lt r0.y, r4.z, r0.y
    if_nz r0.y
      ld_indexable(buffer)(uint,uint,uint,uint) r4.xy, r4.wwww, t12.xyzw
    endif 
    iadd r0.y, r0.z, l(0x00196612)
    iadd r0.z, r0.y, r0.z
    imad r0.y, r0.y, l(0x0019660d), l(0x3c6ef35f)
    ushr r2.w, r0.y, l(16)
    bfi r0.y, l(16), l(16), r0.y, r2.w
    imad r2.w, l(0xbf793ca1), r0.y, l(0x596c3c88)
    imad r3.w, r0.y, r2.w, l(0xbf793ca1)
    imad r0.y, r2.w, r3.w, r0.y
    imad r0.y, r3.w, r0.y, r2.w
    utof r0.y, r0.y
    mul r0.y, r0.y, l(0.000000)
    if_z cb0[68].x
      utof r2.w, r4.y
      mul r2.w, r0.y, r2.w
      ftou r2.w, r2.w
      iadd r3.w, r4.y, l(-1)
      umin r2.w, r2.w, r3.w
      iadd r2.w, r2.w, r4.x
    else 
      utof r3.w, r4.y
      mul r0.y, r0.y, r3.w
      ftou r0.y, r0.y
      iadd r3.w, r4.y, l(-1)
      umin r0.y, r0.y, r3.w
      iadd r3.w, r0.y, r4.x
      ld_indexable(buffer)(uint,uint,uint,uint) r4.yz, r3.wwww, t13.zxyw
      iadd r3.w, r0.z, l(0x00196612)
      iadd r0.z, r0.z, r3.w
      imad r3.w, r3.w, l(0x0019660d), l(0x3c6ef35f)
      ushr r4.w, r3.w, l(16)
      bfi r3.w, l(16), l(16), r3.w, r4.w
      imad r4.w, l(0xbf793ca1), r3.w, l(0x596c3c88)
      imad r5.x, r3.w, r4.w, l(0xbf793ca1)
      imad r3.w, r4.w, r5.x, r3.w
      imad r3.w, r5.x, r3.w, r4.w
      utof r3.w, r3.w
      mul r3.w, r3.w, l(0.000000)
      lt r3.w, r4.y, r3.w
      movc r0.y, r3.w, r4.z, r0.y
      iadd r2.w, r0.y, r4.x
    endif 
    iadd r0.y, r0.z, l(0x00196612)
    iadd r0.z, r0.y, r0.z
    imad r0.y, r0.y, l(0x0019660d), l(0x3c6ef35f)
    ushr r3.w, r0.y, l(16)
    bfi r0.y, l(16), l(16), r0.y, r3.w
    imad r3.w, l(0xbf793ca1), r0.y, l(0x596c3c88)
    imad r4.x, r0.y, r3.w, l(0xbf793ca1)
    imad r0.y, r3.w, r4.x, r0.y
    imad r0.y, r4.x, r0.y, r3.w
    utof r0.y, r0.y
    mul r0.y, r0.y, l(0.000000)
    imad r0.z, r0.z, l(0x0019660d), l(0x54264e49)
    ushr r3.w, r0.z, l(16)
    bfi r0.z, l(16), l(16), r0.z, r3.w
    imad r3.w, l(0xbf793ca1), r0.z, l(0x596c3c88)
    imad r4.x, r0.z, r3.w, l(0xbf793ca1)
    imad r0.z, r3.w, r4.x, r0.z
    imad r0.z, r4.x, r0.z, r3.w
    utof r0.z, r0.z
    mul r3.w, r0.z, l(0.000000)
    sqrt r0.y, r0.y
    add r4.x, -r0.y, l(1.000000)
    mad r0.z, -r0.z, l(0.000000), l(1.000000)
    mul r0.z, r0.z, r0.y
    mul r0.y, r0.y, r3.w
    imul null, r3.w, r2.w, l(3)
    ld_indexable(buffer)(uint,uint,uint,uint) r3.w, r3.wwww, t10.yzwx
    imul null, r4.y, r3.w, l(3)
    imad r4.zw, r2.wwww, l(0, 0, 3, 3), l(0, 0, 1, 2)
    ld_indexable(buffer)(uint,uint,uint,uint) r2.w, r4.zzzz, t10.yzwx
    imul null, r4.z, r2.w, l(3)
    ld_indexable(buffer)(uint,uint,uint,uint) r4.w, r4.wwww, t10.yzwx
    imul null, r5.x, r4.w, l(3)
    ld_indexable(buffer)(float,float,float,float) r6.x, r4.yyyy, t11.xyzw
    imad r5.zw, r3.wwww, l(0, 0, 3, 3), l(0, 0, 1, 2)
    ld_indexable(buffer)(float,float,float,float) r6.y, r5.zzzz, t11.yxzw
    ld_indexable(buffer)(float,float,float,float) r6.z, r5.wwww, t11.yzxw
    ld_indexable(buffer)(float,float,float,float) r7.x, r4.zzzz, t11.xyzw
    imad r4.yz, r2.wwww, l(0, 3, 3, 0), l(0, 1, 2, 0)
    ld_indexable(buffer)(float,float,float,float) r7.y, r4.yyyy, t11.yxzw
    ld_indexable(buffer)(float,float,float,float) r7.z, r4.zzzz, t11.yzxw
    ld_indexable(buffer)(float,float,float,float) r5.x, r5.xxxx, t11.xwyz
    imad r4.yz, r4.wwww, l(0, 3, 3, 0), l(0, 1, 2, 0)
    ld_indexable(buffer)(float,float,float,float) r5.z, r4.yyyy, t11.ywxz
    ld_indexable(buffer)(float,float,float,float) r5.w, r4.zzzz, t11.ywzx
    mul r4.yzw, r0.zzzz, r7.xxyz
    mad r4.xyz, r6.xyzx, r4.xxxx, r4.yzwy
    mad r4.xyz, r5.xzwx, r0.yyyy, r4.xyzx
    mul r5.xzw, r4.yyyy, cb0[55].xxyz
    mad r4.xyw, r4.xxxx, cb0[54].xyxz, r5.xzxw
    mad r4.xyz, r4.zzzz, cb0[56].xyzx, r4.xywx
    add r4.xyz, r4.xyzx, cb0[57].xyzx
    add r4.xyz, -r3.xyzx, r4.xyzx
    mad r3.xyz, r5.yyyy, r4.xyzx, r3.xyzx
    max r0.y, r2.y, l(0.000010)
    add r0.z, r0.y, l(-0.000100)
    lt r0.z, r0.w, r0.z
    div r0.y, r0.w, r0.y
    add r2.w, r0.y, -cb0[68].z
    mul_sat r2.w, r2.w, cb0[69].x
    mul r3.w, r2.w, l(127.000000)
    round_ni r3.w, r3.w
    lt r4.x, r3.w, l(127.000000)
    add r4.y, r3.w, l(1.000000)
    mad r2.w, r2.w, l(127.000000), -r3.w
    mul r4.z, r3.w, l(4.000000)
    mul r4.y, r4.y, l(4.000000)
    movc r4.x, r4.x, r4.y, l(508.000000)
    ftou r4.y, r4.z
    ld_indexable(buffer)(float,float,float,float) r5.x, r4.yyyy, t14.xyzw
    mad r4.yzw, r3.wwww, l(0.000000, 4.000000, 4.000000, 4.000000), l(0.000000, 1.000000, 2.000000, 3.000000)
    ftou r4.yzw, r4.yyzw
    ld_indexable(buffer)(float,float,float,float) r5.y, r4.yyyy, t14.yxzw
    ld_indexable(buffer)(float,float,float,float) r5.z, r4.zzzz, t14.yzxw
    ld_indexable(buffer)(float,float,float,float) r5.w, r4.wwww, t14.yzwx
    ftou r3.w, r4.x
    ld_indexable(buffer)(float,float,float,float) r6.x, r3.wwww, t14.xyzw
    add r4.xyz, r4.xxxx, l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r4.xyz, r4.xyzx
    ld_indexable(buffer)(float,float,float,float) r6.y, r4.xxxx, t14.yxzw
    ld_indexable(buffer)(float,float,float,float) r6.z, r4.yyyy, t14.yzxw
    ld_indexable(buffer)(float,float,float,float) r6.w, r4.zzzz, t14.yzwx
    add r4.xyzw, -r5.xyzw, r6.xyzw
    mad r4.xyzw, r2.wwww, r4.xyzw, r5.xyzw
    mul r2.w, r4.w, cb1[24].y
    mul r2.w, r2.w, cb1[24].z
    add r3.w, r0.y, -cb0[69].y
    mul_sat r3.w, r3.w, cb0[69].w
    mul r4.w, r3.w, l(127.000000)
    round_ni r4.w, r4.w
    lt r5.x, r4.w, l(127.000000)
    add r5.y, r4.w, l(1.000000)
    mad r3.w, r3.w, l(127.000000), -r4.w
    ftou r4.w, r4.w
    ld_indexable(buffer)(float,float,float,float) r4.w, r4.wwww, t15.yzwx
    ftou r5.y, r5.y
    movc r5.x, r5.x, r5.y, l(127)
    ld_indexable(buffer)(float,float,float,float) r5.x, r5.xxxx, t15.xyzw
    add r5.x, -r4.w, r5.x
    mad r3.w, r3.w, r5.x, r4.w
    mul r3.w, r3.w, cb1[24].w
    mul_sat r3.w, r0.w, r3.w
    add r5.xyz, -r1.yzwy, r3.xyzx
    mad r1.yzw, r3.wwww, r5.xxyz, r1.yyzw
    ieq r0.z, r0.z, l(-1)
    if_nz r0.z
      imm_atomic_iadd r1.x, u2, cb0[22].w, l(1)
    endif 
    iadd r0.z, r1.x, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r0.wwww
    iadd r0.w, r1.x, cb0[21].y
    iadd r0.w, r0.w, cb0[20].x
    store_uav_typed u1.xyzw, r0.wwww, r4.xxxx
    ishl r5.xyzw, cb0[21].yyyy, l(1, 2, 3, 4)
    iadd r5.xyzw, r1.xxxx, r5.xyzw
    iadd r5.xyzw, r5.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r5.xxxx, r4.yyyy
    imad r6.xyzw, l(3, 5, 6, 7), cb0[21].yyyy, r1.xxxx
    iadd r6.xyzw, r6.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r6.xxxx, r4.zzzz
    store_uav_typed u1.xyzw, r5.yyyy, r2.wwww
    store_uav_typed u1.xyzw, r6.yyyy, r2.yyyy
    store_uav_typed u1.xyzw, r6.zzzz, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r6.wwww, r2.zzzz
    store_uav_typed u1.xyzw, r5.zzzz, r3.xxxx
    imad r4.xyzw, l(9, 10, 11, 12), cb0[21].yyyy, r1.xxxx
    iadd r4.xyzw, r4.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r4.xxxx, r3.yyyy
    store_uav_typed u1.xyzw, r4.yyyy, r3.zzzz
    store_uav_typed u1.xyzw, r4.zzzz, r0.yyyy
    store_uav_typed u1.xyzw, r4.wwww, r1.yyyy
    imad r3.xyzw, l(13, 14, 15, 17), cb0[21].yyyy, r1.xxxx
    iadd r3.xyzw, r3.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r3.xxxx, r1.zzzz
    store_uav_typed u1.xyzw, r3.yyyy, r1.wwww
    store_uav_typed u1.xyzw, r3.zzzz, l(0,0,0,0)
    store_uav_typed u1.xyzw, r5.wwww, l(0,0,0,0)
    store_uav_typed u1.xyzw, r3.wwww, l(0,0,0,0)
    imad r3.xyzw, l(18, 19, 20, 21), cb0[21].yyyy, r1.xxxx
    iadd r3.xyzw, r3.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r3.xxxx, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r3.yyyy, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r3.zzzz, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r3.wwww, r2.xxxx
    imad r2.xyzw, l(22, 23, 24, 25), cb0[21].yyyy, r1.xxxx
    iadd r2.xyzw, r2.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r2.xxxx, cb1[5].xxxx
    store_uav_typed u1.xyzw, r2.yyyy, cb1[5].yyyy
    store_uav_typed u0.xyzw, r0.zzzz, r0.xxxx
    store_uav_typed u1.xyzw, r2.zzzz, l(0,0,0,0)
    store_uav_typed u1.xyzw, r2.wwww, l(0,0,0,0)
    imad r0.x, l(26), cb0[21].y, r1.x
    iadd r0.x, r0.x, cb0[20].x
    store_uav_typed u1.xyzw, r0.xxxx, l(0,0,0,0)
  endif 
endif 
ret 
// Approximately 679 instruction slots used
