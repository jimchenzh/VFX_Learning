//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   float4 EmitterSpawnInfoOffsets[2]; // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint UpdateStartInstance;          // Offset:  320 Size:     4
//   uint ShaderStageIndex;             // Offset:  324 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  328 Size:     4 [unused]
//   uint SpawnedInstances;             // Offset:  332 Size:     4
//   uint ComponentBufferSizeRead;      // Offset:  336 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  340 Size:     4
//   int NumEventsPerParticle;          // Offset:  344 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  348 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  352 Size:     4 [unused]
//   uint SimStart;                     // Offset:  356 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  360 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  364 Size:     4
//   float MinTime_LatheProfile;        // Offset:  368 Size:     4 [unused]
//   float MaxTime_LatheProfile;        // Offset:  372 Size:     4 [unused]
//   float InvTimeRange_LatheProfile;   // Offset:  376 Size:     4 [unused]
//   float2 Dimensions_TEXTURE_VAR;     // Offset:  384 Size:     8 [unused]
//   float MinTime_Color_ColorCurve;    // Offset:  392 Size:     4
//   float MaxTime_Color_ColorCurve;    // Offset:  396 Size:     4 [unused]
//   float InvTimeRange_Color_ColorCurve;// Offset:  400 Size:     4
//   float MinTime_ConvergenceRate_Particles_Position_FloatCurve;// Offset:  404 Size:     4
//   float MaxTime_ConvergenceRate_Particles_Position_FloatCurve;// Offset:  408 Size:     4 [unused]
//   float InvTimeRange_ConvergenceRate_Particles_Position_FloatCurve;// Offset:  412 Size:     4
//
// }
//
// cbuffer FEmitterParameters
// {
//
//   float Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:    0 Size:     4
//   float Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:    4 Size:     4
//   int Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:    8 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   12 Size:     4 [unused]
//   int Engine_System_TickCount;       // Offset:   16 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:   20 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:   24 Size:     4 [unused]
//   int Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:   28 Size:     4 [unused]
//   float4 Engine_Owner_Position;      // Offset:   32 Size:    16
//   float Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:   48 Size:     4
//   float Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:   52 Size:     4
//   int Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:   56 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   64 Size:    16 [unused]
//   float4 Constants_Emitter_InitializeParticle_SpriteSize;// Offset:   80 Size:    16
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   96 Size:    16 [unused]
//   int Constants_Emitter_CylinderLocation_RandomSeed;// Offset:  112 Size:     4 [unused]
//   float Constants_Emitter_CylinderLocation_CylinderHeight;// Offset:  116 Size:     4
//   float Constants_Emitter_CylinderLocation_CylinderRadius;// Offset:  120 Size:     4
//   float Constants_Emitter_CylinderLocation_SurfaceOnlyBandThickness;// Offset:  124 Size:     4
//   float4 Constants_Emitter_CylinderLocation_Offset;// Offset:  128 Size:    16
//   float4 Constants_Emitter_CylinderLocation_NonUniformScale;// Offset:  144 Size:    16
//   row_major float4x4 Engine_Owner_SystemWorldToLocalTransposed;// Offset:  160 Size:    64
//   row_major float4x4 Engine_Owner_SystemLocalToWorldTransposed;// Offset:  224 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  288 Size:    64
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  352 Size:    64
//   float4 Constants_Emitter_UniformRangedVector2D_Minimum;// Offset:  416 Size:    16
//   float4 Constants_Emitter_UniformRangedVector2D_Maximum;// Offset:  432 Size:    16
//   int Constants_Emitter_UniformRangedVector2D_RandomSeed;// Offset:  448 Size:     4 [unused]
//   float Engine_DeltaTime;            // Offset:  452 Size:     4
//   float Constants_Emitter_Color_ScaleAlpha;// Offset:  456 Size:     4
//   float Emitter_AlphaScale;          // Offset:  460 Size:     4
//   float Constants_Emitter_RecreateCameraProjection_Fov;// Offset:  464 Size:     4
//   float4 Constants_Emitter_RecreateCameraProjection_RightVector;// Offset:  480 Size:    16
//   float4 Constants_Emitter_RecreateCameraProjection_UpVector;// Offset:  496 Size:    16
//   float4 Constants_Emitter_RecreateCameraProjection_ForwardVector;// Offset:  512 Size:    16
//   float Constants_Emitter_AdjustCameraProjection_OffsetDistance;// Offset:  528 Size:     4
//   float Constants_Emitter_AdjustCameraProjection_Angle;// Offset:  532 Size:     4
//   float4 Constants_Emitter_AdjustCameraProjection_Scale;// Offset:  544 Size:    16
//   float4 Constants_Emitter_AdjustCameraProjection_OffsetDirection;// Offset:  560 Size:    16
//   row_major float4x4 Engine_Owner_SystemLocalToWorld;// Offset:  576 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocal;// Offset:  640 Size:    64 [unused]
//   float Constants_Emitter_FloatFromCurve001_ScaleCurve;// Offset:  704 Size:     4
//   float Engine_Time;                 // Offset:  708 Size:     4 [unused]
//   float Engine_InverseDeltaTime;     // Offset:  712 Size:     4
//   int Engine_ExecutionCount;         // Offset:  716 Size:     4 [unused]
//   float Emitter_SpawnRate;           // Offset:  720 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:  724 Size:     4
//   float PREV_Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:  728 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:  732 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:  736 Size:     4 [unused]
//   int PREV_Emitter_RandomSeed;       // Offset:  740 Size:     4 [unused]
//   int PREV_Engine_System_TickCount;  // Offset:  744 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:  748 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:  752 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:  756 Size:     4 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  768 Size:    16
//   float PREV_Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:  784 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:  788 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:  792 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_Color;// Offset:  800 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_SpriteSize;// Offset:  816 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_MeshScale;// Offset:  832 Size:    16 [unused]
//   int PREV_Constants_Emitter_CylinderLocation_RandomSeed;// Offset:  848 Size:     4 [unused]
//   float PREV_Constants_Emitter_CylinderLocation_CylinderHeight;// Offset:  852 Size:     4 [unused]
//   float PREV_Constants_Emitter_CylinderLocation_CylinderRadius;// Offset:  856 Size:     4 [unused]
//   float PREV_Constants_Emitter_CylinderLocation_SurfaceOnlyBandThickness;// Offset:  860 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_CylinderLocation_Offset;// Offset:  864 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_CylinderLocation_NonUniformScale;// Offset:  880 Size:    16 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalTransposed;// Offset:  896 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldTransposed;// Offset:  960 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset: 1024 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset: 1088 Size:    64 [unused]
//   float4 PREV_Constants_Emitter_UniformRangedVector2D_Minimum;// Offset: 1152 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_UniformRangedVector2D_Maximum;// Offset: 1168 Size:    16 [unused]
//   int PREV_Constants_Emitter_UniformRangedVector2D_RandomSeed;// Offset: 1184 Size:     4 [unused]
//   float PREV_Engine_DeltaTime;       // Offset: 1188 Size:     4 [unused]
//   float PREV_Constants_Emitter_Color_ScaleAlpha;// Offset: 1192 Size:     4 [unused]
//   float PREV_Emitter_AlphaScale;     // Offset: 1196 Size:     4 [unused]
//   float PREV_Constants_Emitter_RecreateCameraProjection_Fov;// Offset: 1200 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_RecreateCameraProjection_RightVector;// Offset: 1216 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_RecreateCameraProjection_UpVector;// Offset: 1232 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_RecreateCameraProjection_ForwardVector;// Offset: 1248 Size:    16 [unused]
//   float PREV_Constants_Emitter_AdjustCameraProjection_OffsetDistance;// Offset: 1264 Size:     4 [unused]
//   float PREV_Constants_Emitter_AdjustCameraProjection_Angle;// Offset: 1268 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_AdjustCameraProjection_Scale;// Offset: 1280 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_AdjustCameraProjection_OffsetDirection;// Offset: 1296 Size:    16 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorld;// Offset: 1312 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocal;// Offset: 1376 Size:    64 [unused]
//   float PREV_Constants_Emitter_FloatFromCurve001_ScaleCurve;// Offset: 1440 Size:     4 [unused]
//   float PREV_Engine_Time;            // Offset: 1444 Size:     4 [unused]
//   float PREV_Engine_InverseDeltaTime;// Offset: 1448 Size:     4 [unused]
//   int PREV_Engine_ExecutionCount;    // Offset: 1452 Size:     4 [unused]
//   float PREV_Emitter_SpawnRate;      // Offset: 1456 Size:     4 [unused]
//   int PREV_Engine_Emitter_TotalSpawnedParticles;// Offset: 1460 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// CurveLUT_Color_ColorCurve         texture   float         buf             t2      1 
// CurveLUT_ConvergenceRate_Particles_Position_FloatCurve    texture   float         buf             t3      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FEmitterParameters                cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], dynamicIndexed
dcl_constantbuffer CB1[49], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadID.x
dcl_temps 11
dcl_thread_group 64, 1, 1
iadd r0.x, vThreadID.x, cb0[20].x
ieq r0.y, cb0[22].z, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].zzzz, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r1.x, r0.y, cb0[20].w
iadd r0.z, r1.x, cb0[20].x
ult r0.z, r0.x, r0.z
if_nz r0.z
  ult r0.z, r0.x, r0.y
  if_nz r0.z
    ld_indexable(buffer)(float,float,float,float) r0.z, r0.xxxx, t0.yzxw
    imad r2.xyzw, l(5, 6, 7, 9), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r0.w, r2.xxxx, t0.yzwx
    ld_indexable(buffer)(float,float,float,float) r1.y, r2.yyyy, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r1.z, r2.zzzz, t0.yzxw
    ld_indexable(buffer)(float,float,float,float) r2.x, r2.wwww, t0.xyzw
    imad r3.xyzw, l(10, 11, 15, 17), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r2.y, r3.xxxx, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r2.z, r3.yyyy, t0.yzxw
    ld_indexable(buffer)(float,float,float,float) r1.w, r3.zzzz, t0.yzwx
    ishl r4.xyzw, cb0[21].xyyy, l(4, 1, 2, 3)
    iadd r2.w, r0.x, r4.x
    ld_indexable(buffer)(float,float,float,float) r2.w, r2.wwww, t0.yzwx
    ld_indexable(buffer)(float,float,float,float) r3.x, r3.wwww, t0.xyzw
    imad r5.xyzw, l(18, 19, 20, 21), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r3.y, r5.xxxx, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r3.z, r5.yyyy, t0.yzxw
    ld_indexable(buffer)(float,float,float,float) r3.w, r5.zzzz, t0.yzwx
    ld_indexable(buffer)(sint,sint,sint,sint) r4.x, r0.xxxx, t1.xyzw
    ld_indexable(buffer)(float,float,float,float) r5.x, r5.wwww, t0.xyzw
    imad r5.z, l(22), cb0[21].x, r0.x
    ld_indexable(buffer)(float,float,float,float) r5.z, r5.zzzz, t0.yzxw
    add r0.z, r0.z, cb1[28].y
    max r5.w, r0.w, l(0.000010)
    add r6.x, r5.w, l(-0.000100)
    lt r6.x, r0.z, r6.x
    div r5.w, r0.z, r5.w
    add r6.y, r5.w, -cb0[24].z
    mul_sat r6.y, r6.y, cb0[25].x
    mul r6.z, r6.y, l(127.000000)
    round_ni r6.z, r6.z
    lt r6.w, r6.z, l(127.000000)
    add r7.x, r6.z, l(1.000000)
    mad r6.y, r6.y, l(127.000000), -r6.z
    mul r7.y, r6.z, l(4.000000)
    mul r7.x, r7.x, l(4.000000)
    movc r6.w, r6.w, r7.x, l(508.000000)
    ftou r7.x, r7.y
    ld_indexable(buffer)(float,float,float,float) r7.x, r7.xxxx, t2.xyzw
    mad r8.xyz, r6.zzzz, l(4.000000, 4.000000, 4.000000, 0.000000), l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r8.xyz, r8.xyzx
    ld_indexable(buffer)(float,float,float,float) r7.y, r8.xxxx, t2.yxzw
    ld_indexable(buffer)(float,float,float,float) r7.z, r8.yyyy, t2.yzxw
    ld_indexable(buffer)(float,float,float,float) r7.w, r8.zzzz, t2.yzwx
    ftou r6.z, r6.w
    ld_indexable(buffer)(float,float,float,float) r8.x, r6.zzzz, t2.xyzw
    add r9.xyz, r6.wwww, l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r9.xyz, r9.xyzx
    ld_indexable(buffer)(float,float,float,float) r8.y, r9.xxxx, t2.yxzw
    ld_indexable(buffer)(float,float,float,float) r8.z, r9.yyyy, t2.yzxw
    ld_indexable(buffer)(float,float,float,float) r8.w, r9.zzzz, t2.yzwx
    add r8.xyzw, -r7.xyzw, r8.xyzw
    mad r7.xyzw, r6.yyyy, r8.xyzw, r7.xyzw
    mul r6.y, r7.w, cb1[28].z
    mul r6.y, r6.y, cb1[28].w
    mov r5.y, -r5.z
    add r6.zw, r5.xxxy, l(0.000000, 0.000000, -0.500000, 0.500000)
    mul r5.y, cb1[29].x, l(0.008727)
    sincos r8.x, r9.x, r5.y
    div r5.y, r8.x, r9.x
    mul r6.zw, r5.yyyy, r6.zzzw
    add r6.zw, r6.zzzw, r6.zzzw
    min r8.xy, |r6.zwzz|, l(1.000000, 1.000000, 0.000000, 0.000000)
    max r8.zw, |r6.zzzw|, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r8.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r8.zzzw
    mul r8.xy, r8.zwzz, r8.xyxx
    mul r8.zw, r8.xxxy, r8.xxxy
    mad r9.xy, r8.zwzz, l(0.020835, 0.020835, 0.000000, 0.000000), l(-0.085133, -0.085133, 0.000000, 0.000000)
    mad r9.xy, r8.zwzz, r9.xyxx, l(0.180141, 0.180141, 0.000000, 0.000000)
    mad r9.xy, r8.zwzz, r9.xyxx, l(-0.330299, -0.330299, 0.000000, 0.000000)
    mad r8.zw, r8.zzzw, r9.xxxy, l(0.000000, 0.000000, 0.999866, 0.999866)
    mul r9.xy, r8.zwzz, r8.xyxx
    lt r9.zw, l(0.000000, 0.000000, 1.000000, 1.000000), |r6.zzzw|
    mad r9.xy, r9.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(1.570796, 1.570796, 0.000000, 0.000000)
    and r9.xy, r9.zwzz, r9.xyxx
    mad r8.xy, r8.xyxx, r8.zwzz, r9.xyxx
    min r6.zw, r6.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    lt r6.zw, r6.zzzw, -r6.zzzw
    movc r6.zw, r6.zzzw, -r8.xxxy, r8.xxxy
    mul r6.zw, r6.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    sincos r8.x, r9.x, r6.z
    div r5.y, r8.x, r9.x
    sincos r8.x, r9.x, r6.w
    div r6.z, r8.x, r9.x
    mul r8.xyz, r6.zzzz, cb1[31].xyzx
    mad r8.xyz, r5.yyyy, cb1[30].xyzx, r8.xyzx
    add r8.xyz, r8.xyzx, cb1[32].xyzx
    add r8.xyz, r8.xyzx, cb1[2].xyzx
    mad r8.xyz, -cb1[35].xyzx, cb1[33].xxxx, r8.xyzx
    mul r9.xyz, r8.yyyy, cb1[23].xyzx
    mad r8.xyw, r8.xxxx, cb1[22].xyxz, r9.xyxz
    mad r8.xyz, r8.zzzz, cb1[24].xyzx, r8.xywx
    add r8.xyz, r8.xyzx, cb1[25].xyzx
    mul r5.y, cb1[33].y, l(0.017453)
    sincos r9.x, r10.x, r5.y
    div r5.y, r9.x, r10.x
    mul r5.y, r5.y, cb1[33].x
    div r8.xyz, r8.xyzx, r5.yyyy
    mul r8.xyz, r8.xyzx, cb1[34].xyzx
    mul r9.xyz, r8.yyyy, cb1[19].xyzx
    mad r8.xyw, r8.xxxx, cb1[18].xyxz, r9.xyxz
    mad r8.xyz, r8.zzzz, cb1[20].xyzx, r8.xywx
    add r8.xyz, r8.xyzx, cb1[21].xyzx
    add r5.y, r5.w, -cb0[25].y
    mul_sat r5.y, r5.y, cb0[25].w
    mul r6.z, r5.y, l(127.000000)
    round_ni r6.z, r6.z
    lt r6.w, r6.z, l(127.000000)
    add r7.w, r6.z, l(1.000000)
    mad r5.y, r5.y, l(127.000000), -r6.z
    ftou r6.z, r6.z
    ld_indexable(buffer)(float,float,float,float) r6.z, r6.zzzz, t3.yzxw
    ftou r7.w, r7.w
    movc r6.w, r6.w, r7.w, l(127)
    ld_indexable(buffer)(float,float,float,float) r6.w, r6.wwww, t3.yzwx
    add r6.w, -r6.z, r6.w
    mad r5.y, r5.y, r6.w, r6.z
    mul r5.y, r5.y, cb1[44].x
    mul_sat r5.y, r5.y, cb1[28].y
    add r9.xyz, -r2.xyzx, r8.xyzx
    mad r2.xyz, r5.yyyy, r9.xyzx, r2.xyzx
    ieq r5.y, r6.x, l(-1)
    if_nz r5.y
      imm_atomic_iadd r1.x, u2, cb0[22].w, l(1)
    endif 
    iadd r5.y, r1.x, cb0[20].x
    store_uav_typed u1.xyzw, r5.yyyy, r0.zzzz
    iadd r0.z, r1.x, cb0[21].y
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r7.xxxx
    iadd r4.yzw, r1.xxxx, r4.yyzw
    iadd r4.yzw, r4.yyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r4.yyyy, r7.yyyy
    imad r6.xzw, l(3, 0, 5, 6), cb0[21].yyyy, r1.xxxx
    iadd r6.xzw, r6.xxzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r6.xxxx, r7.zzzz
    store_uav_typed u1.xyzw, r4.zzzz, r6.yyyy
    store_uav_typed u1.xyzw, r6.zzzz, r0.wwww
    store_uav_typed u1.xyzw, r6.wwww, r1.yyyy
    imad r6.xyzw, l(7, 9, 10, 11), cb0[21].yyyy, r1.xxxx
    iadd r6.xyzw, r6.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r6.xxxx, r1.zzzz
    store_uav_typed u1.xyzw, r4.wwww, r5.wwww
    store_uav_typed u1.xyzw, r6.yyyy, r2.xxxx
    store_uav_typed u1.xyzw, r6.zzzz, r2.yyyy
    store_uav_typed u1.xyzw, r6.wwww, r2.zzzz
    imad r6.xyzw, l(12, 13, 14, 15), cb0[21].yyyy, r1.xxxx
    iadd r6.xyzw, r6.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r6.xxxx, r8.xxxx
    store_uav_typed u1.xyzw, r6.yyyy, r8.yyyy
    store_uav_typed u1.xyzw, r6.zzzz, r8.zzzz
    store_uav_typed u1.xyzw, r6.wwww, r1.wwww
    ishl r0.z, cb0[21].y, l(4)
    iadd r0.z, r1.x, r0.z
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r2.wwww
    imad r2.xyzw, l(17, 18, 19, 20), cb0[21].yyyy, r1.xxxx
    iadd r2.xyzw, r2.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r2.xxxx, r3.xxxx
    store_uav_typed u1.xyzw, r2.yyyy, r3.yyyy
    store_uav_typed u1.xyzw, r2.zzzz, r3.zzzz
    store_uav_typed u1.xyzw, r2.wwww, r3.wwww
    store_uav_typed u0.xyzw, r5.yyyy, r4.xxxx
    imad r0.zw, l(0, 0, 21, 22), cb0[21].yyyy, r1.xxxx
    iadd r0.zw, r0.zzzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r0.zzzz, r5.xxxx
    store_uav_typed u1.xyzw, r0.wwww, r5.zzzz
  else 
    iadd r0.x, -r0.y, r0.x
    itof r0.y, r0.x
    ge r2.xyzw, r0.yyyy, cb0[10].xyzw
    and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
    dp4 r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
    ge r2.xyzw, r0.yyyy, cb0[11].xyzw
    and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
    dp4 r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
    ftoi r0.yz, r0.yyzy
    iadd r0.y, r0.y, r0.z
    iadd r0.z, r0.x, -cb0[r0.y + 12].w
    iadd r0.x, r0.x, cb1[45].y
    itof r0.z, r0.z
    mad r0.y, cb0[r0.y + 12].x, r0.z, cb0[r0.y + 12].y
    add r0.z, -r0.y, cb1[28].y
    mul r0.y, r0.y, cb1[44].z
    add r1.yzw, cb1[2].xxyz, -cb1[48].xxyz
    mad r1.yzw, r0.yyyy, r1.yyzw, cb1[48].xxyz
    add r0.y, -cb1[0].x, cb1[0].y
    imul null, r2.x, vThreadID.x, l(0x0019660d)
    imul null, r2.y, cb0[9].z, l(0x0019660d)
    iadd r2.xy, r2.xyxx, l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r3.xyzw, r2.xxxx, r2.xxxx, l(0x3c3c2745, 0x3c095b2b, 0x3beff51e, 0x3bd68f11)
    imad r4.xyzw, r2.yyyy, r3.xyzw, r2.xxxx
    imad r5.xyzw, r3.xyzw, r4.xyzw, r2.yyyy
    imad r6.xyzw, r4.xyzw, r5.xyzw, r2.xxxx
    imad r3.xyzw, r4.xywz, r6.xywz, r3.xywz
    ishr r4.xyz, r3.xywx, l(8, 8, 8, 0)
    and r4.xyz, r4.xyzx, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0)
    utof r4.xyz, r4.xyzx
    mul r0.y, r0.y, r4.x
    mad r0.y, r0.y, l(0.000000), cb1[0].x
    mul r0.y, r0.y, l(360.000000)
    add r0.w, -cb1[3].x, cb1[3].y
    mul r0.w, r0.w, r4.y
    mad r0.w, r0.w, l(0.000000), cb1[3].x
    mul r2.z, r4.z, l(0.000000)
    imad r3.w, r5.w, r3.z, r4.w
    ishr r3.xy, r3.zwzz, l(8, 8, 0, 0)
    and r3.xy, r3.xyxx, l(0x00ffffff, 0x00ffffff, 0, 0)
    utof r3.xy, r3.xyxx
    mad r3.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000), l(0.000000, 0.000000, 0.000000, -1.000000)
    sincos r4.x, r5.x, r3.z
    mad r2.w, -r3.w, r3.w, l(1.000000)
    sqrt r2.w, r2.w
    mul r3.x, r2.w, r5.x
    mul r3.y, r2.w, r4.x
    imad r4.xy, r2.xxxx, r2.xxxx, l(0x3ba3c2f7, 0x3b8a5cea, 0, 0)
    imad r4.zw, r2.yyyy, r4.xxxy, r2.xxxx
    imad r2.yw, r4.xxxy, r4.zzzw, r2.yyyy
    imad r5.xy, r4.zwzz, r2.ywyy, r2.xxxx
    imad r5.xy, r4.zwzz, r5.xyxx, r4.xyxx
    imad r4.xy, r2.ywyy, r5.xyxx, r4.zwzz
    imad r4.z, r5.x, r4.x, r2.y
    ishr r2.xy, r4.xzxx, l(8, 8, 0, 0)
    and r2.xy, r2.xyxx, l(0x00ffffff, 0x00ffffff, 0, 0)
    utof r2.xy, r2.xyxx
    mad r6.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000), l(0.000000, -1.000000, 0.000000, 0.000000)
    mul r2.x, r6.x, l(6.283185)
    sincos r2.x, r4.x, r2.x
    mov r6.z, r2.x
    mov r6.w, r4.x
    mul r2.xyw, r6.zwzy, cb1[7].zzzy
    mul r3.xyz, r3.xywx, cb1[7].wwww
    mul r3.xyz, r3.xyzx, l(1.000000, 1.000000, 0.000000, 0.000000)
    mad r2.xyw, r2.xyxw, l(1.000000, 1.000000, 0.000000, 1.000000), r3.xyxz
    add r1.yzw, r1.yyzw, cb1[8].xxyz
    mul r2.xyw, r2.xyxw, cb1[9].xyxz
    mul r3.xyz, r2.yyyy, cb1[11].xyzx
    mad r3.xyz, r2.xxxx, cb1[10].xyzx, r3.xyzx
    mad r2.xyw, r2.wwww, cb1[12].xyxz, r3.xyxz
    add r1.yzw, r1.yyzw, r2.xxyw
    add r2.xy, -cb1[26].xyxx, cb1[27].xyxx
    mov r5.z, r4.y
    ishr r3.xy, r5.yzyy, l(8, 8, 0, 0)
    and r3.xy, r3.xyxx, l(0x00ffffff, 0x00ffffff, 0, 0)
    utof r3.xy, r3.xyxx
    mul r2.xy, r2.xyxx, r3.xyxx
    mad r3.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000), cb1[26].xyxx
    max r2.x, r0.w, l(0.000010)
    add r2.y, r2.x, l(-0.000100)
    lt r2.y, r0.z, r2.y
    div r2.x, r0.z, r2.x
    add r2.w, r2.x, -cb0[24].z
    mul_sat r2.w, r2.w, cb0[25].x
    mul r3.w, r2.w, l(127.000000)
    round_ni r3.w, r3.w
    lt r4.x, r3.w, l(127.000000)
    add r4.y, r3.w, l(1.000000)
    mad r2.w, r2.w, l(127.000000), -r3.w
    mul r4.z, r3.w, l(4.000000)
    mul r4.y, r4.y, l(4.000000)
    movc r4.x, r4.x, r4.y, l(508.000000)
    ftou r4.y, r4.z
    ld_indexable(buffer)(float,float,float,float) r5.x, r4.yyyy, t2.xyzw
    mad r4.yzw, r3.wwww, l(0.000000, 4.000000, 4.000000, 4.000000), l(0.000000, 1.000000, 2.000000, 3.000000)
    ftou r4.yzw, r4.yyzw
    ld_indexable(buffer)(float,float,float,float) r5.y, r4.yyyy, t2.yxzw
    ld_indexable(buffer)(float,float,float,float) r5.z, r4.zzzz, t2.yzxw
    ld_indexable(buffer)(float,float,float,float) r5.w, r4.wwww, t2.yzwx
    ftou r3.w, r4.x
    ld_indexable(buffer)(float,float,float,float) r6.x, r3.wwww, t2.xyzw
    add r4.xyz, r4.xxxx, l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r4.xyz, r4.xyzx
    ld_indexable(buffer)(float,float,float,float) r6.y, r4.xxxx, t2.yxzw
    ld_indexable(buffer)(float,float,float,float) r6.z, r4.yyyy, t2.yzxw
    ld_indexable(buffer)(float,float,float,float) r6.w, r4.zzzz, t2.yzwx
    add r4.xyzw, -r5.xyzw, r6.xyzw
    mad r4.xyzw, r2.wwww, r4.xyzw, r5.xyzw
    mul r2.w, r4.w, cb1[28].z
    mul r2.w, r2.w, cb1[28].w
    mov r3.z, -r3.y
    add r3.zw, r3.xxxz, l(0.000000, 0.000000, -0.500000, 0.500000)
    mul r4.w, cb1[29].x, l(0.008727)
    sincos r5.x, r6.x, r4.w
    div r4.w, r5.x, r6.x
    mul r3.zw, r3.zzzw, r4.wwww
    add r3.zw, r3.zzzw, r3.zzzw
    min r5.xy, |r3.zwzz|, l(1.000000, 1.000000, 0.000000, 0.000000)
    max r5.zw, |r3.zzzw|, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r5.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r5.zzzw
    mul r5.xy, r5.zwzz, r5.xyxx
    mul r5.zw, r5.xxxy, r5.xxxy
    mad r6.xy, r5.zwzz, l(0.020835, 0.020835, 0.000000, 0.000000), l(-0.085133, -0.085133, 0.000000, 0.000000)
    mad r6.xy, r5.zwzz, r6.xyxx, l(0.180141, 0.180141, 0.000000, 0.000000)
    mad r6.xy, r5.zwzz, r6.xyxx, l(-0.330299, -0.330299, 0.000000, 0.000000)
    mad r5.zw, r5.zzzw, r6.xxxy, l(0.000000, 0.000000, 0.999866, 0.999866)
    mul r6.xy, r5.zwzz, r5.xyxx
    lt r6.zw, l(0.000000, 0.000000, 1.000000, 1.000000), |r3.zzzw|
    mad r6.xy, r6.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(1.570796, 1.570796, 0.000000, 0.000000)
    and r6.xy, r6.zwzz, r6.xyxx
    mad r5.xy, r5.xyxx, r5.zwzz, r6.xyxx
    min r3.zw, r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    lt r3.zw, r3.zzzw, -r3.zzzw
    movc r3.zw, r3.zzzw, -r5.xxxy, r5.xxxy
    mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    sincos r5.x, r6.x, r3.z
    div r3.z, r5.x, r6.x
    sincos r5.x, r6.x, r3.w
    div r3.w, r5.x, r6.x
    mul r5.xyz, r3.wwww, cb1[31].xyzx
    mad r5.xyz, r3.zzzz, cb1[30].xyzx, r5.xyzx
    add r5.xyz, r5.xyzx, cb1[32].xyzx
    add r5.xyz, r5.xyzx, cb1[2].xyzx
    mad r5.xyz, -cb1[35].xyzx, cb1[33].xxxx, r5.xyzx
    mul r6.xyz, r5.yyyy, cb1[23].xyzx
    mad r5.xyw, r5.xxxx, cb1[22].xyxz, r6.xyxz
    mad r5.xyz, r5.zzzz, cb1[24].xyzx, r5.xywx
    add r5.xyz, r5.xyzx, cb1[25].xyzx
    mul r3.z, cb1[33].y, l(0.017453)
    sincos r6.x, r7.x, r3.z
    div r3.z, r6.x, r7.x
    mul r3.z, r3.z, cb1[33].x
    div r5.xyz, r5.xyzx, r3.zzzz
    mul r5.xyz, r5.xyzx, cb1[34].xyzx
    mul r6.xyz, r5.yyyy, cb1[19].xyzx
    mad r5.xyw, r5.xxxx, cb1[18].xyxz, r6.xyxz
    mad r5.xyz, r5.zzzz, cb1[20].xyzx, r5.xywx
    add r5.xyz, r5.xyzx, cb1[21].xyzx
    add r3.z, r2.x, -cb0[25].y
    mul_sat r3.z, r3.z, cb0[25].w
    mul r3.w, r3.z, l(127.000000)
    round_ni r3.w, r3.w
    lt r4.w, r3.w, l(127.000000)
    add r5.w, r3.w, l(1.000000)
    mad r3.z, r3.z, l(127.000000), -r3.w
    ftou r3.w, r3.w
    ld_indexable(buffer)(float,float,float,float) r3.w, r3.wwww, t3.yzwx
    ftou r5.w, r5.w
    movc r4.w, r4.w, r5.w, l(127)
    ld_indexable(buffer)(float,float,float,float) r4.w, r4.wwww, t3.yzwx
    add r4.w, -r3.w, r4.w
    mad r3.z, r3.z, r4.w, r3.w
    mul r3.z, r3.z, cb1[44].x
    mul_sat r3.z, r0.z, r3.z
    add r6.xyz, -r1.yzwy, r5.xyzx
    mad r1.yzw, r3.zzzz, r6.xxyz, r1.yyzw
    ieq r2.y, r2.y, l(-1)
    if_nz r2.y
      imm_atomic_iadd r1.x, u2, cb0[22].w, l(1)
    endif 
    iadd r2.y, r1.x, cb0[20].x
    store_uav_typed u1.xyzw, r2.yyyy, r0.zzzz
    iadd r0.z, r1.x, cb0[21].y
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r4.xxxx
    ishl r6.xyzw, cb0[21].yyyy, l(1, 2, 3, 4)
    iadd r6.xyzw, r1.xxxx, r6.xyzw
    iadd r6.xyzw, r6.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r6.xxxx, r4.yyyy
    imad r7.xyzw, l(3, 5, 6, 7), cb0[21].yyyy, r1.xxxx
    iadd r7.xyzw, r7.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r7.xxxx, r4.zzzz
    store_uav_typed u1.xyzw, r6.yyyy, r2.wwww
    store_uav_typed u1.xyzw, r7.yyyy, r0.wwww
    store_uav_typed u1.xyzw, r7.zzzz, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r7.wwww, r2.zzzz
    store_uav_typed u1.xyzw, r6.zzzz, r2.xxxx
    imad r4.xyzw, l(9, 10, 11, 12), cb0[21].yyyy, r1.xxxx
    iadd r4.xyzw, r4.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r4.xxxx, r1.yyyy
    store_uav_typed u1.xyzw, r4.yyyy, r1.zzzz
    store_uav_typed u1.xyzw, r4.zzzz, r1.wwww
    store_uav_typed u1.xyzw, r4.wwww, r5.xxxx
    imad r4.xyzw, l(13, 14, 15, 17), cb0[21].yyyy, r1.xxxx
    iadd r4.xyzw, r4.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r4.xxxx, r5.yyyy
    store_uav_typed u1.xyzw, r4.yyyy, r5.zzzz
    store_uav_typed u1.xyzw, r4.zzzz, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r6.wwww, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r4.wwww, l(1.000000,1.000000,1.000000,1.000000)
    imad r4.xyzw, l(18, 19, 20, 21), cb0[21].yyyy, r1.xxxx
    iadd r4.xyzw, r4.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r4.xxxx, r0.yyyy
    store_uav_typed u1.xyzw, r4.yyyy, cb1[5].xxxx
    store_uav_typed u1.xyzw, r4.zzzz, cb1[5].yyyy
    store_uav_typed u0.xyzw, r2.yyyy, r0.xxxx
    store_uav_typed u1.xyzw, r4.wwww, r3.xxxx
    imad r0.x, l(22), cb0[21].y, r1.x
    iadd r0.x, r0.x, cb0[20].x
    store_uav_typed u1.xyzw, r0.xxxx, r3.yyyy
  endif 
endif 
ret 
// Approximately 402 instruction slots used
