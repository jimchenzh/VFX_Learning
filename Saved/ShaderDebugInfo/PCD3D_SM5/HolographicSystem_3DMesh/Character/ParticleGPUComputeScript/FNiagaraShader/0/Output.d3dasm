//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   int4 EmitterSpawnInfoOffsets[2];   // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint SpawnedInstances;             // Offset:  320 Size:     4
//   uint UpdateStartInstance;          // Offset:  324 Size:     4
//   int DefaultSimulationStageIndex;   // Offset:  328 Size:     4 [unused]
//   int SimulationStageIndex;          // Offset:  332 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  336 Size:     4 [unused]
//   uint ComponentBufferSizeRead;      // Offset:  340 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  344 Size:     4
//   int NumEventsPerParticle;          // Offset:  348 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  352 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  356 Size:     4 [unused]
//   uint SimStart;                     // Offset:  360 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  364 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  368 Size:     4
//   float MinTime_Emitter_LatheProfile;// Offset:  372 Size:     4 [unused]
//   float MaxTime_Emitter_LatheProfile;// Offset:  376 Size:     4 [unused]
//   float InvTimeRange_Emitter_LatheProfile;// Offset:  380 Size:     4 [unused]
//   float CurveLUTNumMinusOne_Emitter_LatheProfile;// Offset:  384 Size:     4 [unused]
//   uint UseColorBuffer_Particles_StaticMesh;// Offset:  388 Size:     4 [unused]
//   uint SectionCount_Particles_StaticMesh;// Offset:  392 Size:     4
//   row_major float4x4 InstanceTransform_Particles_StaticMesh;// Offset:  400 Size:    64
//   row_major float4x4 InstanceTransformInverseTransposed_Particles_StaticMesh;// Offset:  464 Size:    64 [unused]
//   row_major float4x4 InstancePrevTransform_Particles_StaticMesh;// Offset:  528 Size:    64 [unused]
//   float InstanceInvDeltaTime_Particles_StaticMesh;// Offset:  592 Size:     4 [unused]
//   float4 InstanceWorldVelocity_Particles_StaticMesh;// Offset:  608 Size:    16 [unused]
//   uint AreaWeightedSamplingName_Particles_StaticMesh;// Offset:  624 Size:     4
//   uint NumTexCoordName_Particles_StaticMesh;// Offset:  628 Size:     4 [unused]
//   uint UseColorBuffer_Particles_StaticMesh2;// Offset:  632 Size:     4 [unused]
//   uint SectionCount_Particles_StaticMesh2;// Offset:  636 Size:     4
//   row_major float4x4 InstanceTransform_Particles_StaticMesh2;// Offset:  640 Size:    64
//   row_major float4x4 InstanceTransformInverseTransposed_Particles_StaticMesh2;// Offset:  704 Size:    64 [unused]
//   row_major float4x4 InstancePrevTransform_Particles_StaticMesh2;// Offset:  768 Size:    64 [unused]
//   float InstanceInvDeltaTime_Particles_StaticMesh2;// Offset:  832 Size:     4 [unused]
//   float4 InstanceWorldVelocity_Particles_StaticMesh2;// Offset:  848 Size:    16 [unused]
//   uint AreaWeightedSamplingName_Particles_StaticMesh2;// Offset:  864 Size:     4
//   uint NumTexCoordName_Particles_StaticMesh2;// Offset:  868 Size:     4 [unused]
//   uint UseColorBuffer_Particles_StaticMesh3;// Offset:  872 Size:     4 [unused]
//   uint SectionCount_Particles_StaticMesh3;// Offset:  876 Size:     4
//   row_major float4x4 InstanceTransform_Particles_StaticMesh3;// Offset:  880 Size:    64
//   row_major float4x4 InstanceTransformInverseTransposed_Particles_StaticMesh3;// Offset:  944 Size:    64 [unused]
//   row_major float4x4 InstancePrevTransform_Particles_StaticMesh3;// Offset: 1008 Size:    64 [unused]
//   float InstanceInvDeltaTime_Particles_StaticMesh3;// Offset: 1072 Size:     4 [unused]
//   float4 InstanceWorldVelocity_Particles_StaticMesh3;// Offset: 1088 Size:    16 [unused]
//   uint AreaWeightedSamplingName_Particles_StaticMesh3;// Offset: 1104 Size:     4
//   uint NumTexCoordName_Particles_StaticMesh3;// Offset: 1108 Size:     4 [unused]
//   uint UseColorBuffer_Emitter_Particles_StaticMesh001;// Offset: 1112 Size:     4 [unused]
//   uint SectionCount_Emitter_Particles_StaticMesh001;// Offset: 1116 Size:     4 [unused]
//   row_major float4x4 InstanceTransform_Emitter_Particles_StaticMesh001;// Offset: 1120 Size:    64 [unused]
//   row_major float4x4 InstanceTransformInverseTransposed_Emitter_Particles_StaticMesh001;// Offset: 1184 Size:    64 [unused]
//   row_major float4x4 InstancePrevTransform_Emitter_Particles_StaticMesh001;// Offset: 1248 Size:    64 [unused]
//   float InstanceInvDeltaTime_Emitter_Particles_StaticMesh001;// Offset: 1312 Size:     4 [unused]
//   float4 InstanceWorldVelocity_Emitter_Particles_StaticMesh001;// Offset: 1328 Size:    16 [unused]
//   uint AreaWeightedSamplingName_Emitter_Particles_StaticMesh001;// Offset: 1344 Size:     4 [unused]
//   uint NumTexCoordName_Emitter_Particles_StaticMesh001;// Offset: 1348 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraGlobalParameters
// {
//
//   float Engine_DeltaTime;            // Offset:    0 Size:     4
//   float Engine_InverseDeltaTime;     // Offset:    4 Size:     4
//   float Engine_Time;                 // Offset:    8 Size:     4 [unused]
//   float Engine_RealTime;             // Offset:   12 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraOwnerParameters
// {
//
//   row_major float4x4 Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64
//   float4 Engine_Owner_Rotation;      // Offset:  384 Size:    16 [unused]
//   float4 Engine_Owner_Position;      // Offset:  400 Size:    16
//   float4 Engine_Owner_Velocity;      // Offset:  416 Size:    16 [unused]
//   float4 Engine_Owner_SystemXAxis;   // Offset:  432 Size:    16 [unused]
//   float4 Engine_Owner_SystemYAxis;   // Offset:  448 Size:    16 [unused]
//   float4 Engine_Owner_SystemZAxis;   // Offset:  464 Size:    16 [unused]
//   float4 Engine_Owner_Scale;         // Offset:  480 Size:    16 [unused]
//
// }
//
// cbuffer FNiagaraEmitterParameters
// {
//
//   int Engine_Emitter_NumParticles;   // Offset:    0 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:    4 Size:     4
//   float Engine_Emitter_SpawnCountScale;// Offset:    8 Size:     4 [unused]
//   float Emitter_Age;                 // Offset:   12 Size:     4
//   int Emitter_RandomSeed;            // Offset:   16 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_0; // Offset:   20 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_1; // Offset:   24 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_2; // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraExternalParameters
// {
//
//   float Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:    0 Size:     4
//   float Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:    4 Size:     4
//   int Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:    8 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:   12 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:   16 Size:     4 [unused]
//   int Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:   20 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:   24 Size:     4
//   float Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:   28 Size:     4
//   int Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:   32 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   48 Size:    16
//   float4 Constants_Emitter_InitializeParticle_SpriteSize;// Offset:   64 Size:    16
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   80 Size:    16 [unused]
//   int Constants_Emitter_CylinderLocation_RandomSeed;// Offset:   96 Size:     4 [unused]
//   float Constants_Emitter_CylinderLocation_CylinderHeight;// Offset:  100 Size:     4 [unused]
//   float Constants_Emitter_CylinderLocation_CylinderRadius;// Offset:  104 Size:     4 [unused]
//   float Constants_Emitter_CylinderLocation_SurfaceOnlyBandThickness;// Offset:  108 Size:     4 [unused]
//   float4 Constants_Emitter_CylinderLocation_Offset;// Offset:  112 Size:    16 [unused]
//   float4 Constants_Emitter_CylinderLocation_NonUniformScale;// Offset:  128 Size:    16 [unused]
//   int Constants_Emitter_CylinderLocation_SpawnGroupMask;// Offset:  144 Size:     4 [unused]
//   float Emitter_SpawnRate;           // Offset:  148 Size:     4 [unused]
//
// }
//
// cbuffer PREV_FNiagaraOwnerParameters
// {
//
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 PREV_Engine_Owner_Rotation; // Offset:  384 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  400 Size:    16
//   float4 PREV_Engine_Owner_Velocity; // Offset:  416 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemXAxis;// Offset:  432 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemYAxis;// Offset:  448 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemZAxis;// Offset:  464 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Scale;    // Offset:  480 Size:    16 [unused]
//
// }
//
// cbuffer PREV_FNiagaraEmitterParameters
// {
//
//   int PREV_Engine_Emitter_NumParticles;// Offset:    0 Size:     4 [unused]
//   int PREV_Engine_Emitter_TotalSpawnedParticles;// Offset:    4 Size:     4 [unused]
//   float PREV_Engine_Emitter_SpawnCountScale;// Offset:    8 Size:     4 [unused]
//   float PREV_Emitter_Age;            // Offset:   12 Size:     4
//   int PREV_Emitter_RandomSeed;       // Offset:   16 Size:     4 [unused]
//   int PREV_Engine_Emitter_PaddingInt32_0;// Offset:   20 Size:     4 [unused]
//   int PREV_Engine_Emitter_PaddingInt32_1;// Offset:   24 Size:     4 [unused]
//   int PREV_Engine_Emitter_PaddingInt32_2;// Offset:   28 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// IndexBuffer_Particles_StaticMesh    texture    uint         buf             t2      1 
// VertexBuffer_Particles_StaticMesh    texture   float         buf             t3      1 
// SectionBuffer_Particles_StaticMesh    texture   uint4         buf             t4      1 
// TriangleBuffer_Particles_StaticMesh    texture   uint4         buf             t5      1 
// IndexBuffer_Particles_StaticMesh2    texture    uint         buf             t6      1 
// VertexBuffer_Particles_StaticMesh2    texture   float         buf             t7      1 
// SectionBuffer_Particles_StaticMesh2    texture   uint4         buf             t8      1 
// TriangleBuffer_Particles_StaticMesh2    texture   uint4         buf             t9      1 
// IndexBuffer_Particles_StaticMesh3    texture    uint         buf            t10      1 
// VertexBuffer_Particles_StaticMesh3    texture   float         buf            t11      1 
// SectionBuffer_Particles_StaticMesh3    texture   uint4         buf            t12      1 
// TriangleBuffer_Particles_StaticMesh3    texture   uint4         buf            t13      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FNiagaraGlobalParameters          cbuffer      NA          NA            cb1      1 
// FNiagaraOwnerParameters           cbuffer      NA          NA            cb2      1 
// FNiagaraEmitterParameters         cbuffer      NA          NA            cb3      1 
// FNiagaraExternalParameters        cbuffer      NA          NA            cb4      1 
// PREV_FNiagaraOwnerParameters      cbuffer      NA          NA            cb5      1 
// PREV_FNiagaraEmitterParameters    cbuffer      NA          NA            cb6      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[70], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[26], immediateIndexed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_constantbuffer CB4[5], immediateIndexed
dcl_constantbuffer CB5[26], immediateIndexed
dcl_constantbuffer CB6[1], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (uint,uint,uint,uint) t4
dcl_resource_buffer (uint,uint,uint,uint) t5
dcl_resource_buffer (uint,uint,uint,uint) t6
dcl_resource_buffer (float,float,float,float) t7
dcl_resource_buffer (uint,uint,uint,uint) t8
dcl_resource_buffer (uint,uint,uint,uint) t9
dcl_resource_buffer (uint,uint,uint,uint) t10
dcl_resource_buffer (float,float,float,float) t11
dcl_resource_buffer (uint,uint,uint,uint) t12
dcl_resource_buffer (uint,uint,uint,uint) t13
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadIDInGroup.x
dcl_input vThreadID.x
dcl_temps 13
dcl_tgsm_structured g0, 4, 32
dcl_tgsm_structured g1, 4, 8
dcl_tgsm_structured g2, 4, 2
dcl_tgsm_raw g3, 4
dcl_thread_group 32, 1, 1
iadd r0.x, vThreadID.x, cb0[20].y
ieq r0.y, cb0[22].w, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].wwww, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r0.z, r0.y, cb0[20].x
iadd r0.z, r0.z, cb0[20].y
ult r0.zw, r0.xxxx, r0.zzzy
and r0.w, r0.z, r0.w
if_nz r0.w
  ld_indexable(buffer)(float,float,float,float) r0.w, r0.xxxx, t0.yzwx
  iadd r1.x, r0.x, cb0[21].y
  ld_indexable(buffer)(float,float,float,float) r1.x, r1.xxxx, t0.xyzw
  ishl r2.xyzw, cb0[21].yyyy, l(1, 2, 3, 4)
  iadd r2.xyzw, r0.xxxx, r2.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.y, r2.xxxx, t0.yxzw
  imad r3.xyzw, l(3, 5, 6, 7), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r1.z, r3.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r1.w, r2.yyyy, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r2.x, r3.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r2.y, r3.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r3.x, r3.wwww, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r2.z, r2.zzzz, t0.yzxw
  imad r4.xyzw, l(9, 10, 12, 13), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r3.y, r4.xxxx, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r3.z, r4.yyyy, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r4.x, r4.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.y, r4.wwww, t0.yxzw
  imad r5.xyzw, l(14, 15, 17, 18), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r4.z, r5.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r3.w, r5.yyyy, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r2.w, r2.wwww, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r4.w, r5.zzzz, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r5.x, r5.wwww, t0.xyzw
  imad r5.yz, l(0, 19, 20, 0), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r5.y, r5.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r5.z, r5.zzzz, t0.yzxw
  ld_indexable(buffer)(sint,sint,sint,sint) r5.w, r0.xxxx, t1.yzwx
  add r0.w, r0.w, cb1[0].x
  max r6.x, r2.x, l(0.000010)
  add r6.y, r6.x, l(-0.000100)
  lt r6.y, r0.w, r6.y
  div r6.x, r0.w, r6.x
else 
  uge r6.z, r0.x, r0.y
  and r0.z, r0.z, r6.z
  if_nz r0.z
    imad r0.z, r0.x, l(0x59834000), cb0[9].z
    iadd r0.x, -r0.y, r0.x
    ige r7.xyzw, r0.xxxx, cb0[10].xyzw
    and r7.xyzw, r7.xyzw, l(1, 1, 1, 1)
    iadd r0.y, r7.y, r7.x
    iadd r0.y, r7.z, r0.y
    iadd r0.y, r7.w, r0.y
    ige r7.xyzw, r0.xxxx, cb0[11].xyzw
    and r7.xyzw, r7.xyzw, l(1, 1, 1, 1)
    iadd r6.z, r7.y, r7.x
    iadd r6.z, r7.z, r6.z
    iadd r6.z, r7.w, r6.z
    iadd r0.y, r0.y, r6.z
    iadd r0.x, r0.x, -cb0[r0.y + 12].w
    iadd r5.w, r0.x, cb3[0].y
    itof r0.x, r0.x
    mad r0.x, cb0[r0.y + 12].x, r0.x, cb0[r0.y + 12].y
    add r0.w, -r0.x, cb1[0].x
    mul r0.x, r0.x, cb1[0].y
    add r7.xyz, cb2[25].xyzx, -cb5[25].xyzx
    mad r7.xyz, r0.xxxx, r7.xyzx, cb5[25].xyzx
    add r0.y, cb3[0].w, -cb6[0].w
    mad r0.x, r0.x, r0.y, cb6[0].w
    add r0.y, -cb4[0].x, cb4[0].y
    mov r8.x, vThreadID.x
    mov r8.y, cb0[9].z
    imad r6.zw, r8.xxxy, l(0, 0, 0x0019660d, 0x0019660d), l(0, 0, 0x3c6ef35f, 0x3c6ef35f)
    imad r8.xyz, r6.zzzz, r6.zzzz, l(0x3c3c2745, 0x3c095b2b, 0x3beff51e, 0)
    imad r9.xyz, r6.wwww, r8.xyzx, r6.zzzz
    imad r10.xyz, r8.xyzx, r9.xyzx, r6.wwww
    imad r10.xyz, r9.xyzx, r10.xyzx, r6.zzzz
    imad r8.xyz, r9.xyzx, r10.xyzx, r8.xyzx
    ishr r8.xyz, r8.xyzx, l(8, 8, 8, 0)
    and r8.xyz, r8.xyzx, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0)
    utof r8.xyz, r8.xyzx
    mul r0.y, r0.y, r8.x
    mad r0.y, r0.y, l(0.000000), cb4[0].x
    mul r5.x, r0.y, l(360.000000)
    add r0.y, -cb4[1].z, cb4[1].w
    mul r0.y, r0.y, r8.y
    mad r2.x, r0.y, l(0.000000), cb4[1].z
    mul r3.x, r8.z, l(0.000000)
    ieq r0.y, cb0[24].z, l(0)
    if_z cb0[24].z
      mov r6.zw, l(0,0,-1,0)
      mov r7.w, l(0)
      mov r8.x, l(0)
    endif 
    if_z r0.y
      iadd r8.y, r0.z, l(0x00196612)
      iadd r8.z, r0.z, r8.y
      imad r8.y, r8.y, l(0x0019660d), l(0x3c6ef35f)
      ushr r8.w, r8.y, l(16)
      bfi r8.y, l(16), l(16), r8.y, r8.w
      imad r8.w, l(0xbf793ca1), r8.y, l(0x596c3c88)
      imad r9.x, r8.y, r8.w, l(0xbf793ca1)
      imad r8.y, r8.w, r9.x, r8.y
      imad r8.y, r9.x, r8.y, r8.w
      utof r8.y, r8.y
      mul r8.y, r8.y, l(0.000000)
      utof r8.w, cb0[24].z
      mul r8.y, r8.w, r8.y
      ftou r8.y, r8.y
      iadd r8.w, cb0[24].z, l(-1)
      umin r8.y, r8.w, r8.y
      ld_indexable(buffer)(uint,uint,uint,uint) r9.xyzw, r8.yyyy, t4.xyzw
      iadd r8.y, r8.z, l(0x00196612)
      iadd r8.z, r8.y, r8.z
      imad r8.y, r8.y, l(0x0019660d), l(0x3c6ef35f)
      ushr r8.w, r8.y, l(16)
      bfi r8.y, l(16), l(16), r8.y, r8.w
      imad r8.w, l(0xbf793ca1), r8.y, l(0x596c3c88)
      imad r10.x, r8.y, r8.w, l(0xbf793ca1)
      imad r8.y, r8.w, r10.x, r8.y
      imad r8.y, r10.x, r8.y, r8.w
      utof r8.y, r8.y
      mul r8.y, r8.y, l(0.000000)
      lt r8.y, r9.z, r8.y
      if_nz r8.y
        ld_indexable(buffer)(uint,uint,uint,uint) r9.xy, r9.wwww, t4.xyzw
      endif 
      iadd r8.y, r8.z, l(0x00196612)
      iadd r8.z, r8.y, r8.z
      imad r8.y, r8.y, l(0x0019660d), l(0x3c6ef35f)
      ushr r8.w, r8.y, l(16)
      bfi r8.y, l(16), l(16), r8.y, r8.w
      imad r8.w, l(0xbf793ca1), r8.y, l(0x596c3c88)
      imad r9.z, r8.y, r8.w, l(0xbf793ca1)
      imad r8.y, r8.w, r9.z, r8.y
      imad r8.y, r9.z, r8.y, r8.w
      utof r8.y, r8.y
      mul r8.y, r8.y, l(0.000000)
      if_z cb0[39].x
        utof r8.w, r9.y
        mul r8.w, r8.w, r8.y
        ftou r8.w, r8.w
        iadd r9.z, r9.y, l(-1)
        umin r8.w, r8.w, r9.z
        iadd r6.z, r8.w, r9.x
      else 
        utof r8.w, r9.y
        mul r8.y, r8.w, r8.y
        ftou r8.y, r8.y
        iadd r8.w, r9.y, l(-1)
        umin r8.y, r8.w, r8.y
        iadd r8.w, r8.y, r9.x
        ld_indexable(buffer)(uint,uint,uint,uint) r9.yz, r8.wwww, t5.zxyw
        iadd r8.w, r8.z, l(0x00196612)
        iadd r8.z, r8.w, r8.z
        imad r8.w, r8.w, l(0x0019660d), l(0x3c6ef35f)
        ushr r9.w, r8.w, l(16)
        bfi r8.w, l(16), l(16), r8.w, r9.w
        imad r9.w, l(0xbf793ca1), r8.w, l(0x596c3c88)
        imad r10.x, r8.w, r9.w, l(0xbf793ca1)
        imad r8.w, r9.w, r10.x, r8.w
        imad r8.w, r10.x, r8.w, r9.w
        utof r8.w, r8.w
        mul r8.w, r8.w, l(0.000000)
        lt r8.w, r9.y, r8.w
        movc r8.y, r8.w, r9.z, r8.y
        iadd r6.z, r8.y, r9.x
      endif 
      iadd r8.y, r8.z, l(0x00196612)
      iadd r8.z, r8.y, r8.z
      imad r8.y, r8.y, l(0x0019660d), l(0x3c6ef35f)
      ushr r8.w, r8.y, l(16)
      bfi r8.y, l(16), l(16), r8.y, r8.w
      imad r8.w, l(0xbf793ca1), r8.y, l(0x596c3c88)
      imad r9.x, r8.y, r8.w, l(0xbf793ca1)
      imad r8.y, r8.w, r9.x, r8.y
      imad r8.y, r9.x, r8.y, r8.w
      utof r8.y, r8.y
      iadd r8.w, r8.z, l(0x00196612)
      iadd r0.z, r8.w, r8.z
      imad r8.z, r8.w, l(0x0019660d), l(0x3c6ef35f)
      ushr r8.w, r8.z, l(16)
      bfi r8.z, l(16), l(16), r8.z, r8.w
      imad r8.w, l(0xbf793ca1), r8.z, l(0x596c3c88)
      imad r9.x, r8.z, r8.w, l(0xbf793ca1)
      imad r8.z, r8.w, r9.x, r8.z
      imad r8.z, r9.x, r8.z, r8.w
      utof r8.z, r8.z
      mul r8.yw, r8.yyyz, l(0.000000, 0.000000, 0.000000, 0.000000)
      sqrt r8.y, r8.y
      add r6.w, -r8.y, l(1.000000)
      mad r8.z, -r8.z, l(0.000000), l(1.000000)
      mul r7.w, r8.z, r8.y
      mul r8.x, r8.y, r8.w
    endif 
    if_z cb0[24].z
      mov r8.yzw, cb0[28].xxyz
    endif 
    if_z r0.y
      imul null, r0.y, r6.z, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r0.y, r0.yyyy, t2.yxzw
      imul null, r9.x, r0.y, l(3)
      imad r9.yz, r6.zzzz, l(0, 3, 3, 0), l(0, 1, 2, 0)
      ld_indexable(buffer)(uint,uint,uint,uint) r6.z, r9.yyyy, t2.yzxw
      imul null, r9.y, r6.z, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r9.z, r9.zzzz, t2.yzxw
      imul null, r9.w, r9.z, l(3)
      ld_indexable(buffer)(float,float,float,float) r10.x, r9.xxxx, t3.xyzw
      imad r11.xy, r0.yyyy, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(float,float,float,float) r10.y, r11.xxxx, t3.yxzw
      ld_indexable(buffer)(float,float,float,float) r10.z, r11.yyyy, t3.yzxw
      ld_indexable(buffer)(float,float,float,float) r11.x, r9.yyyy, t3.xyzw
      imad r9.xy, r6.zzzz, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(float,float,float,float) r11.y, r9.xxxx, t3.yxzw
      ld_indexable(buffer)(float,float,float,float) r11.z, r9.yyyy, t3.yzxw
      ld_indexable(buffer)(float,float,float,float) r9.x, r9.wwww, t3.xywz
      imad r12.xy, r9.zzzz, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(float,float,float,float) r9.y, r12.xxxx, t3.yxwz
      ld_indexable(buffer)(float,float,float,float) r9.w, r12.yyyy, t3.yzwx
      mul r11.xyz, r7.wwww, r11.xyzx
      mad r10.xyz, r10.xyzx, r6.wwww, r11.xyzx
      mad r9.xyz, r9.xywx, r8.xxxx, r10.xyzx
      mul r10.xyz, r9.yyyy, cb0[26].xyzx
      mad r9.xyw, r9.xxxx, cb0[25].xyxz, r10.xyxz
      mad r9.xyz, r9.zzzz, cb0[27].xyzx, r9.xywx
      add r8.yzw, r9.xxyz, cb0[28].xxyz
    endif 
    mul r0.y, r8.z, cb2[21].z
    mad r0.y, r8.y, cb2[20].z, r0.y
    mad r0.y, r8.w, cb2[22].z, r0.y
    add r0.y, r0.y, cb2[23].z
    mul_sat r6.z, r0.x, l(0.500000)
    mul r6.z, r6.z, l(200.000000)
    lt r0.y, r0.y, r6.z
    movc r7.xyz, r0.yyyy, r8.yzwy, r7.xyzx
    ieq r0.y, cb0[39].w, l(0)
    if_z cb0[39].w
      mov r6.zw, l(0,0,-1,0)
      mov r7.w, l(0)
      mov r8.x, l(0)
    endif 
    if_z r0.y
      iadd r8.y, r0.z, l(0x00196612)
      iadd r8.z, r0.z, r8.y
      imad r8.y, r8.y, l(0x0019660d), l(0x3c6ef35f)
      ushr r8.w, r8.y, l(16)
      bfi r8.y, l(16), l(16), r8.y, r8.w
      imad r8.w, l(0xbf793ca1), r8.y, l(0x596c3c88)
      imad r9.x, r8.y, r8.w, l(0xbf793ca1)
      imad r8.y, r8.w, r9.x, r8.y
      imad r8.y, r9.x, r8.y, r8.w
      utof r8.y, r8.y
      mul r8.y, r8.y, l(0.000000)
      utof r8.w, cb0[39].w
      mul r8.y, r8.w, r8.y
      ftou r8.y, r8.y
      iadd r8.w, cb0[39].w, l(-1)
      umin r8.y, r8.w, r8.y
      ld_indexable(buffer)(uint,uint,uint,uint) r9.xyzw, r8.yyyy, t8.xyzw
      iadd r8.y, r8.z, l(0x00196612)
      iadd r8.z, r8.y, r8.z
      imad r8.y, r8.y, l(0x0019660d), l(0x3c6ef35f)
      ushr r8.w, r8.y, l(16)
      bfi r8.y, l(16), l(16), r8.y, r8.w
      imad r8.w, l(0xbf793ca1), r8.y, l(0x596c3c88)
      imad r10.x, r8.y, r8.w, l(0xbf793ca1)
      imad r8.y, r8.w, r10.x, r8.y
      imad r8.y, r10.x, r8.y, r8.w
      utof r8.y, r8.y
      mul r8.y, r8.y, l(0.000000)
      lt r8.y, r9.z, r8.y
      if_nz r8.y
        ld_indexable(buffer)(uint,uint,uint,uint) r9.xy, r9.wwww, t8.xyzw
      endif 
      iadd r8.y, r8.z, l(0x00196612)
      iadd r8.z, r8.y, r8.z
      imad r8.y, r8.y, l(0x0019660d), l(0x3c6ef35f)
      ushr r8.w, r8.y, l(16)
      bfi r8.y, l(16), l(16), r8.y, r8.w
      imad r8.w, l(0xbf793ca1), r8.y, l(0x596c3c88)
      imad r9.z, r8.y, r8.w, l(0xbf793ca1)
      imad r8.y, r8.w, r9.z, r8.y
      imad r8.y, r9.z, r8.y, r8.w
      utof r8.y, r8.y
      mul r8.y, r8.y, l(0.000000)
      if_z cb0[54].x
        utof r8.w, r9.y
        mul r8.w, r8.w, r8.y
        ftou r8.w, r8.w
        iadd r9.z, r9.y, l(-1)
        umin r8.w, r8.w, r9.z
        iadd r6.z, r8.w, r9.x
      else 
        utof r8.w, r9.y
        mul r8.y, r8.w, r8.y
        ftou r8.y, r8.y
        iadd r8.w, r9.y, l(-1)
        umin r8.y, r8.w, r8.y
        iadd r8.w, r8.y, r9.x
        ld_indexable(buffer)(uint,uint,uint,uint) r9.yz, r8.wwww, t9.zxyw
        iadd r8.w, r8.z, l(0x00196612)
        iadd r8.z, r8.w, r8.z
        imad r8.w, r8.w, l(0x0019660d), l(0x3c6ef35f)
        ushr r9.w, r8.w, l(16)
        bfi r8.w, l(16), l(16), r8.w, r9.w
        imad r9.w, l(0xbf793ca1), r8.w, l(0x596c3c88)
        imad r10.x, r8.w, r9.w, l(0xbf793ca1)
        imad r8.w, r9.w, r10.x, r8.w
        imad r8.w, r10.x, r8.w, r9.w
        utof r8.w, r8.w
        mul r8.w, r8.w, l(0.000000)
        lt r8.w, r9.y, r8.w
        movc r8.y, r8.w, r9.z, r8.y
        iadd r6.z, r8.y, r9.x
      endif 
      iadd r8.y, r8.z, l(0x00196612)
      iadd r8.z, r8.y, r8.z
      imad r8.y, r8.y, l(0x0019660d), l(0x3c6ef35f)
      ushr r8.w, r8.y, l(16)
      bfi r8.y, l(16), l(16), r8.y, r8.w
      imad r8.w, l(0xbf793ca1), r8.y, l(0x596c3c88)
      imad r9.x, r8.y, r8.w, l(0xbf793ca1)
      imad r8.y, r8.w, r9.x, r8.y
      imad r8.y, r9.x, r8.y, r8.w
      utof r8.y, r8.y
      iadd r8.w, r8.z, l(0x00196612)
      iadd r0.z, r8.w, r8.z
      imad r8.z, r8.w, l(0x0019660d), l(0x3c6ef35f)
      ushr r8.w, r8.z, l(16)
      bfi r8.z, l(16), l(16), r8.z, r8.w
      imad r8.w, l(0xbf793ca1), r8.z, l(0x596c3c88)
      imad r9.x, r8.z, r8.w, l(0xbf793ca1)
      imad r8.z, r8.w, r9.x, r8.z
      imad r8.z, r9.x, r8.z, r8.w
      utof r8.z, r8.z
      mul r8.yw, r8.yyyz, l(0.000000, 0.000000, 0.000000, 0.000000)
      sqrt r8.y, r8.y
      add r6.w, -r8.y, l(1.000000)
      mad r8.z, -r8.z, l(0.000000), l(1.000000)
      mul r7.w, r8.z, r8.y
      mul r8.x, r8.y, r8.w
    endif 
    if_z cb0[39].w
      mov r8.yzw, cb0[43].xxyz
    endif 
    if_z r0.y
      imul null, r0.y, r6.z, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r0.y, r0.yyyy, t6.yxzw
      imul null, r9.x, r0.y, l(3)
      imad r9.yz, r6.zzzz, l(0, 3, 3, 0), l(0, 1, 2, 0)
      ld_indexable(buffer)(uint,uint,uint,uint) r6.z, r9.yyyy, t6.yzxw
      imul null, r9.y, r6.z, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r9.z, r9.zzzz, t6.yzxw
      imul null, r9.w, r9.z, l(3)
      ld_indexable(buffer)(float,float,float,float) r10.x, r9.xxxx, t7.xyzw
      imad r11.xy, r0.yyyy, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(float,float,float,float) r10.y, r11.xxxx, t7.yxzw
      ld_indexable(buffer)(float,float,float,float) r10.z, r11.yyyy, t7.yzxw
      ld_indexable(buffer)(float,float,float,float) r11.x, r9.yyyy, t7.xyzw
      imad r9.xy, r6.zzzz, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(float,float,float,float) r11.y, r9.xxxx, t7.yxzw
      ld_indexable(buffer)(float,float,float,float) r11.z, r9.yyyy, t7.yzxw
      ld_indexable(buffer)(float,float,float,float) r9.x, r9.wwww, t7.xywz
      imad r12.xy, r9.zzzz, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(float,float,float,float) r9.y, r12.xxxx, t7.yxwz
      ld_indexable(buffer)(float,float,float,float) r9.w, r12.yyyy, t7.yzwx
      mul r11.xyz, r7.wwww, r11.xyzx
      mad r10.xyz, r10.xyzx, r6.wwww, r11.xyzx
      mad r9.xyz, r9.xywx, r8.xxxx, r10.xyzx
      mul r10.xyz, r9.yyyy, cb0[41].xyzx
      mad r9.xyw, r9.xxxx, cb0[40].xyxz, r10.xyxz
      mad r9.xyz, r9.zzzz, cb0[42].xyzx, r9.xywx
      add r8.yzw, r9.xxyz, cb0[43].xxyz
    endif 
    lt r6.zw, l(0.000000, 0.000000, 3.000000, 6.000000), r0.xxxx
    add r0.xy, r0.xxxx, l(-3.000000, -6.000000, 0.000000, 0.000000)
    and r0.xy, r0.xyxx, r6.zwzz
    mov_sat r0.xy, r0.xyxx
    add r8.xyz, -r7.xyzx, r8.yzwy
    mad r7.xyz, r0.xxxx, r8.xyzx, r7.xyzx
    ieq r0.x, cb0[54].w, l(0)
    if_z cb0[54].w
      mov r6.zw, l(0,0,-1,0)
      mov r7.w, l(0)
      mov r8.x, l(0)
    endif 
    if_z r0.x
      iadd r8.y, r0.z, l(0x00196612)
      iadd r0.z, r0.z, r8.y
      imad r8.y, r8.y, l(0x0019660d), l(0x3c6ef35f)
      ushr r8.z, r8.y, l(16)
      bfi r8.y, l(16), l(16), r8.y, r8.z
      imad r8.z, l(0xbf793ca1), r8.y, l(0x596c3c88)
      imad r8.w, r8.y, r8.z, l(0xbf793ca1)
      imad r8.y, r8.z, r8.w, r8.y
      imad r8.y, r8.w, r8.y, r8.z
      utof r8.y, r8.y
      mul r8.y, r8.y, l(0.000000)
      utof r8.z, cb0[54].w
      mul r8.y, r8.z, r8.y
      ftou r8.y, r8.y
      iadd r8.z, cb0[54].w, l(-1)
      umin r8.y, r8.z, r8.y
      ld_indexable(buffer)(uint,uint,uint,uint) r9.xyzw, r8.yyyy, t12.xyzw
      iadd r8.y, r0.z, l(0x00196612)
      iadd r0.z, r0.z, r8.y
      imad r8.y, r8.y, l(0x0019660d), l(0x3c6ef35f)
      ushr r8.z, r8.y, l(16)
      bfi r8.y, l(16), l(16), r8.y, r8.z
      imad r8.z, l(0xbf793ca1), r8.y, l(0x596c3c88)
      imad r8.w, r8.y, r8.z, l(0xbf793ca1)
      imad r8.y, r8.z, r8.w, r8.y
      imad r8.y, r8.w, r8.y, r8.z
      utof r8.y, r8.y
      mul r8.y, r8.y, l(0.000000)
      lt r8.y, r9.z, r8.y
      if_nz r8.y
        ld_indexable(buffer)(uint,uint,uint,uint) r9.xy, r9.wwww, t12.xyzw
      endif 
      iadd r8.y, r0.z, l(0x00196612)
      iadd r0.z, r0.z, r8.y
      imad r8.y, r8.y, l(0x0019660d), l(0x3c6ef35f)
      ushr r8.z, r8.y, l(16)
      bfi r8.y, l(16), l(16), r8.y, r8.z
      imad r8.z, l(0xbf793ca1), r8.y, l(0x596c3c88)
      imad r8.w, r8.y, r8.z, l(0xbf793ca1)
      imad r8.y, r8.z, r8.w, r8.y
      imad r8.y, r8.w, r8.y, r8.z
      utof r8.y, r8.y
      mul r8.y, r8.y, l(0.000000)
      if_z cb0[69].x
        utof r8.z, r9.y
        mul r8.z, r8.z, r8.y
        ftou r8.z, r8.z
        iadd r8.w, r9.y, l(-1)
        umin r8.z, r8.w, r8.z
        iadd r6.z, r8.z, r9.x
      else 
        utof r8.z, r9.y
        mul r8.y, r8.z, r8.y
        ftou r8.y, r8.y
        iadd r8.z, r9.y, l(-1)
        umin r8.y, r8.z, r8.y
        iadd r8.z, r8.y, r9.x
        ld_indexable(buffer)(uint,uint,uint,uint) r8.zw, r8.zzzz, t13.zwxy
        iadd r9.y, r0.z, l(0x00196612)
        iadd r0.z, r0.z, r9.y
        imad r9.y, r9.y, l(0x0019660d), l(0x3c6ef35f)
        ushr r9.z, r9.y, l(16)
        bfi r9.y, l(16), l(16), r9.y, r9.z
        imad r9.z, l(0xbf793ca1), r9.y, l(0x596c3c88)
        imad r9.w, r9.y, r9.z, l(0xbf793ca1)
        imad r9.y, r9.z, r9.w, r9.y
        imad r9.y, r9.w, r9.y, r9.z
        utof r9.y, r9.y
        mul r9.y, r9.y, l(0.000000)
        lt r8.z, r8.z, r9.y
        movc r8.y, r8.z, r8.w, r8.y
        iadd r6.z, r8.y, r9.x
      endif 
      iadd r8.y, r0.z, l(0x00196612)
      iadd r0.z, r0.z, r8.y
      imad r8.y, r8.y, l(0x0019660d), l(0x3c6ef35f)
      ushr r8.z, r8.y, l(16)
      bfi r8.y, l(16), l(16), r8.y, r8.z
      imad r8.z, l(0xbf793ca1), r8.y, l(0x596c3c88)
      imad r8.w, r8.y, r8.z, l(0xbf793ca1)
      imad r8.y, r8.z, r8.w, r8.y
      imad r8.y, r8.w, r8.y, r8.z
      utof r8.y, r8.y
      mul r8.y, r8.y, l(0.000000)
      imad r0.z, r0.z, l(0x0019660d), l(0x54264e49)
      ushr r8.z, r0.z, l(16)
      bfi r0.z, l(16), l(16), r0.z, r8.z
      imad r8.z, l(0xbf793ca1), r0.z, l(0x596c3c88)
      imad r8.w, r0.z, r8.z, l(0xbf793ca1)
      imad r0.z, r8.z, r8.w, r0.z
      imad r0.z, r8.w, r0.z, r8.z
      utof r0.z, r0.z
      mul r8.z, r0.z, l(0.000000)
      sqrt r8.y, r8.y
      add r6.w, -r8.y, l(1.000000)
      mad r0.z, -r0.z, l(0.000000), l(1.000000)
      mul r7.w, r0.z, r8.y
      mul r8.x, r8.y, r8.z
    endif 
    if_z cb0[54].w
      mov r8.yzw, cb0[58].xxyz
    endif 
    if_z r0.x
      imul null, r0.x, r6.z, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r0.x, r0.xxxx, t10.xyzw
      imul null, r0.z, r0.x, l(3)
      imad r9.xy, r6.zzzz, l(3, 3, 0, 0), l(1, 2, 0, 0)
      ld_indexable(buffer)(uint,uint,uint,uint) r6.z, r9.xxxx, t10.yzxw
      imul null, r9.x, r6.z, l(3)
      ld_indexable(buffer)(uint,uint,uint,uint) r9.y, r9.yyyy, t10.yxzw
      imul null, r9.z, r9.y, l(3)
      ld_indexable(buffer)(float,float,float,float) r10.x, r0.zzzz, t11.xyzw
      imad r0.xz, r0.xxxx, l(3, 0, 3, 0), l(1, 0, 2, 0)
      ld_indexable(buffer)(float,float,float,float) r10.y, r0.xxxx, t11.yxzw
      ld_indexable(buffer)(float,float,float,float) r10.z, r0.zzzz, t11.yzxw
      ld_indexable(buffer)(float,float,float,float) r11.x, r9.xxxx, t11.xyzw
      imad r0.xz, r6.zzzz, l(3, 0, 3, 0), l(1, 0, 2, 0)
      ld_indexable(buffer)(float,float,float,float) r11.y, r0.xxxx, t11.yxzw
      ld_indexable(buffer)(float,float,float,float) r11.z, r0.zzzz, t11.yzxw
      ld_indexable(buffer)(float,float,float,float) r9.x, r9.zzzz, t11.xwyz
      imad r0.xz, r9.yyyy, l(3, 0, 3, 0), l(1, 0, 2, 0)
      ld_indexable(buffer)(float,float,float,float) r9.z, r0.xxxx, t11.ywxz
      ld_indexable(buffer)(float,float,float,float) r9.w, r0.zzzz, t11.ywzx
      mul r11.xyz, r7.wwww, r11.xyzx
      mad r10.xyz, r10.xyzx, r6.wwww, r11.xyzx
      mad r9.xyz, r9.xzwx, r8.xxxx, r10.xyzx
      mul r10.xyz, r9.yyyy, cb0[56].xyzx
      mad r9.xyw, r9.xxxx, cb0[55].xyxz, r10.xyxz
      mad r9.xyz, r9.zzzz, cb0[57].xyzx, r9.xywx
      add r8.yzw, r9.xxyz, cb0[58].xxyz
    endif 
    add r8.xyz, -r7.xyzx, r8.yzwy
    mad r4.xyz, r0.yyyy, r8.xyzx, r7.xyzx
    max r0.x, r2.x, l(0.000010)
    add r0.y, r0.x, l(-0.000100)
    lt r6.y, r0.w, r0.y
    div r6.x, r0.w, r0.x
    mov r1.xyzw, cb4[3].xyzw
    mov r2.z, r4.x
    mov r3.yz, r4.yyzy
    mov r3.w, l(1.000000)
    mov r2.yw, l(0,1.000000,0,1.000000)
    mov r4.w, l(1.000000)
    mov r5.yz, cb4[4].xxyx
  else 
    mov r0.w, l(0)
    mov r1.xyzw, l(0,0,0,0)
    mov r3.xyzw, l(0,0,0,0)
    mov r2.xyzw, l(0,0,0,0)
    mov r4.xyzw, l(0,0,0,0)
    mov r5.xyzw, l(0,0,0,0)
    mov r6.xy, l(0,0,0,0)
  endif 
endif 
and r0.x, r6.y, l(1)
store_structured g0.x, vThreadIDInGroup.x, l(0), r0.x
sync_g_t
and r0.yz, vThreadIDInGroup.xxxx, l(0, 3, 15, 0)
if_z r0.y
  iadd r7.xyz, vThreadIDInGroup.xxxx, l(1, 2, 3, 0)
  ld_structured r0.y, r7.x, l(0), g0.xxxx
  iadd r0.y, r0.y, r0.x
  ld_structured r6.z, r7.y, l(0), g0.xxxx
  iadd r6.z, r0.y, r6.z
  ld_structured r6.w, r7.z, l(0), g0.xxxx
  iadd r6.w, r6.w, r6.z
  store_structured g0.x, vThreadIDInGroup.x, l(0), l(0)
  store_structured g0.x, r7.x, l(0), r0.x
  store_structured g0.x, r7.y, l(0), r0.y
  store_structured g0.x, r7.z, l(0), r6.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  store_structured g1.x, r0.x, l(0), r6.w
endif 
sync_g_t
if_z r0.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  ld_structured r0.y, r0.x, l(0), g1.xxxx
  iadd r7.xyz, r0.xxxx, l(1, 2, 3, 0)
  ld_structured r0.z, r7.x, l(0), g1.xxxx
  iadd r0.z, r0.z, r0.y
  ld_structured r6.z, r7.y, l(0), g1.xxxx
  iadd r6.z, r0.z, r6.z
  ld_structured r6.w, r7.z, l(0), g1.xxxx
  iadd r6.w, r6.w, r6.z
  store_structured g1.x, r0.x, l(0), l(0)
  store_structured g1.x, r7.x, l(0), r0.y
  store_structured g1.x, r7.y, l(0), r0.z
  store_structured g1.x, r7.z, l(0), r6.z
  ushr r0.x, r0.x, l(2)
  store_structured g2.x, r0.x, l(0), r6.w
endif 
sync_g_t
if_z vThreadIDInGroup.x
  ld_structured r0.x, l(0), l(0), g2.xxxx
  ld_structured r0.y, l(1), l(0), g2.xxxx
  iadd r0.y, r0.y, r0.x
  store_structured g2.x, l(0), l(0), l(0)
  store_structured g2.x, l(1), l(0), r0.x
  imm_atomic_iadd r7.x, u2, cb0[23].x, r0.y
  store_raw g3.x, l(0), r7.x
endif 
sync_g_t
if_nz r6.y
  ld_raw r0.x, l(0), g3.xxxx
  ushr r0.yz, vThreadIDInGroup.xxxx, l(0, 4, 2, 0)
  ld_structured r0.y, r0.y, l(0), g2.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, r0.z, l(0), g1.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, vThreadIDInGroup.x, l(0), g0.xxxx
  iadd r0.x, r0.y, r0.x
  iadd r0.y, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r0.wwww
  iadd r0.z, r0.x, cb0[21].z
  iadd r0.z, r0.z, cb0[20].y
  store_uav_typed u1.xyzw, r0.zzzz, r1.xxxx
  ishl r7.xyzw, cb0[21].zzzz, l(1, 2, 3, 4)
  iadd r7.xyzw, r0.xxxx, r7.xyzw
  iadd r7.xyzw, r7.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r7.xxxx, r1.yyyy
  imad r8.xyzw, l(3, 5, 6, 7), cb0[21].zzzz, r0.xxxx
  iadd r8.xyzw, r8.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r8.xxxx, r1.zzzz
  store_uav_typed u1.xyzw, r7.yyyy, r1.wwww
  store_uav_typed u1.xyzw, r8.yyyy, r2.xxxx
  store_uav_typed u1.xyzw, r8.zzzz, r2.yyyy
  store_uav_typed u1.xyzw, r8.wwww, r3.xxxx
  store_uav_typed u1.xyzw, r7.zzzz, r2.zzzz
  imad r1.xyzw, l(9, 10, 11, 12), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r3.yyyy
  store_uav_typed u1.xyzw, r1.yyyy, r3.zzzz
  store_uav_typed u1.xyzw, r1.zzzz, r6.xxxx
  store_uav_typed u1.xyzw, r1.wwww, r4.xxxx
  imad r1.xyzw, l(13, 14, 15, 17), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r4.yyyy
  store_uav_typed u1.xyzw, r1.yyyy, r4.zzzz
  store_uav_typed u1.xyzw, r1.zzzz, r3.wwww
  store_uav_typed u1.xyzw, r7.wwww, r2.wwww
  store_uav_typed u1.xyzw, r1.wwww, r4.wwww
  imad r0.xzw, l(18, 0, 19, 20), cb0[21].zzzz, r0.xxxx
  iadd r0.xzw, r0.xxzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r0.xxxx, r5.xxxx
  store_uav_typed u1.xyzw, r0.zzzz, r5.yyyy
  store_uav_typed u1.xyzw, r0.wwww, r5.zzzz
  store_uav_typed u0.xyzw, r0.yyyy, r5.wwww
endif 
ret 
// Approximately 636 instruction slots used
