//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4 [unused]
//   float4 EmitterSpawnInfoOffsets[2]; // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint UpdateStartInstance;          // Offset:  320 Size:     4
//   uint ShaderStageIndex;             // Offset:  324 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  328 Size:     4 [unused]
//   uint SpawnedInstances;             // Offset:  332 Size:     4
//   uint ComponentBufferSizeRead;      // Offset:  336 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  340 Size:     4
//   int NumEventsPerParticle;          // Offset:  344 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  348 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  352 Size:     4 [unused]
//   uint SimStart;                     // Offset:  356 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  360 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  364 Size:     4
//
// }
//
// cbuffer FEmitterParameters
// {
//
//   float4 Engine_Owner_Position;      // Offset:    0 Size:    16
//   float Constants_Emitter_InitializeRibbon_Lifetime;// Offset:   16 Size:     4
//   float4 Constants_Emitter_InitializeRibbon_Color;// Offset:   32 Size:    16
//   float Constants_Emitter_InitializeRibbon_Mass;// Offset:   48 Size:     4
//   float Constants_Emitter_InitializeRibbon_RibbonWidth;// Offset:   52 Size:     4
//   float Constants_Emitter_InitializeRibbon_RibbonTwist;// Offset:   56 Size:     4 [unused]
//   float Engine_DeltaTime;            // Offset:   60 Size:     4
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:   64 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:   68 Size:     4 [unused]
//   float Engine_Time;                 // Offset:   72 Size:     4 [unused]
//   float Engine_InverseDeltaTime;     // Offset:   76 Size:     4
//   int Engine_ExecutionCount;         // Offset:   80 Size:     4 [unused]
//   float Emitter_SpawnRate;           // Offset:   84 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:   88 Size:     4
//   int Emitter_RandomSeed;            // Offset:   92 Size:     4 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:   96 Size:    16
//   float PREV_Constants_Emitter_InitializeRibbon_Lifetime;// Offset:  112 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_InitializeRibbon_Color;// Offset:  128 Size:    16 [unused]
//   float PREV_Constants_Emitter_InitializeRibbon_Mass;// Offset:  144 Size:     4 [unused]
//   float PREV_Constants_Emitter_InitializeRibbon_RibbonWidth;// Offset:  148 Size:     4 [unused]
//   float PREV_Constants_Emitter_InitializeRibbon_RibbonTwist;// Offset:  152 Size:     4 [unused]
//   float PREV_Engine_DeltaTime;       // Offset:  156 Size:     4 [unused]
//   float PREV_Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  160 Size:     4 [unused]
//   float PREV_Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  164 Size:     4 [unused]
//   float PREV_Engine_Time;            // Offset:  168 Size:     4 [unused]
//   float PREV_Engine_InverseDeltaTime;// Offset:  172 Size:     4 [unused]
//   int PREV_Engine_ExecutionCount;    // Offset:  176 Size:     4 [unused]
//   float PREV_Emitter_SpawnRate;      // Offset:  180 Size:     4 [unused]
//   int PREV_Engine_Emitter_TotalSpawnedParticles;// Offset:  184 Size:     4 [unused]
//   int PREV_Emitter_RandomSeed;       // Offset:  188 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FEmitterParameters                cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[23], dynamicIndexed
dcl_constantbuffer CB1[7], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadID.x
dcl_temps 8
dcl_thread_group 64, 1, 1
iadd r0.x, vThreadID.x, cb0[20].x
ieq r0.y, cb0[22].z, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].zzzz, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r1.x, r0.y, cb0[20].w
iadd r0.z, r1.x, cb0[20].x
ult r0.z, r0.x, r0.z
if_nz r0.z
  ult r0.z, r0.x, r0.y
  if_nz r0.z
    ld_indexable(buffer)(float,float,float,float) r0.z, r0.xxxx, t0.yzxw
    iadd r0.w, r0.x, cb0[21].x
    ld_indexable(buffer)(float,float,float,float) r1.y, r0.wwww, t0.yxzw
    ishl r2.xyzw, cb0[21].xxxx, l(1, 2, 3, 4)
    iadd r2.xyzw, r0.xxxx, r2.xyzw
    ld_indexable(buffer)(float,float,float,float) r1.z, r2.xxxx, t0.yzxw
    imad r3.xyzw, l(3, 5, 6, 9), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r1.w, r3.xxxx, t0.yzwx
    ld_indexable(buffer)(float,float,float,float) r2.y, r2.yyyy, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r3.x, r3.yyyy, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r3.y, r3.zzzz, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r4.x, r2.zzzz, t0.xyzw
    ld_indexable(buffer)(float,float,float,float) r4.y, r3.wwww, t0.yxzw
    imad r5.xyzw, l(10, 14, 15, 17), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r4.z, r5.xxxx, t0.yzxw
    ld_indexable(buffer)(float,float,float,float) r2.z, r5.yyyy, t0.yzxw
    ld_indexable(buffer)(sint,sint,sint,sint) r3.z, r0.xxxx, t1.yzxw
    ld_indexable(buffer)(sint,sint,sint,sint) r0.w, r0.wwww, t1.yzwx
    ld_indexable(buffer)(float,float,float,float) r3.w, r5.zzzz, t0.yzwx
    ld_indexable(buffer)(float,float,float,float) r2.w, r2.wwww, t0.yzwx
    ld_indexable(buffer)(sint,sint,sint,sint) r2.x, r2.xxxx, t1.xyzw
    ld_indexable(buffer)(float,float,float,float) r5.x, r5.wwww, t0.xyzw
    imad r6.xy, l(18, 19, 0, 0), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r5.y, r6.xxxx, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r5.z, r6.yyyy, t0.yzxw
    add r0.z, r0.z, cb1[3].w
    max r4.w, r3.x, l(0.000010)
    add r5.w, r4.w, l(-0.000100)
    lt r5.w, r0.z, r5.w
    div r4.w, r0.z, r4.w
    mad r4.xyz, r5.xyzx, cb1[3].wwww, r4.xyzx
    ieq r5.w, r5.w, l(-1)
    if_nz r5.w
      imm_atomic_iadd r1.x, u2, cb0[22].w, l(1)
    endif 
    iadd r5.w, r1.x, cb0[20].x
    store_uav_typed u1.xyzw, r5.wwww, r0.zzzz
    iadd r0.z, r1.x, cb0[21].y
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r1.yyyy
    ishl r6.xyzw, cb0[21].yyyy, l(1, 2, 3, 4)
    iadd r6.xyzw, r1.xxxx, r6.xyzw
    iadd r6.xyzw, r6.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r6.xxxx, r1.zzzz
    imad r1.yz, l(0, 3, 5, 0), cb0[21].yyyy, r1.xxxx
    iadd r1.yz, r1.yyzy, cb0[20].xxxx
    store_uav_typed u1.xyzw, r1.yyyy, r1.wwww
    store_uav_typed u1.xyzw, r6.yyyy, r2.yyyy
    store_uav_typed u1.xyzw, r1.zzzz, r3.xxxx
    imad r7.xyzw, l(6, 7, 9, 10), cb0[21].yyyy, r1.xxxx
    iadd r7.xyzw, r7.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r7.xxxx, r3.yyyy
    store_uav_typed u1.xyzw, r7.yyyy, r4.wwww
    store_uav_typed u1.xyzw, r6.zzzz, r4.xxxx
    store_uav_typed u1.xyzw, r7.zzzz, r4.yyyy
    store_uav_typed u1.xyzw, r7.wwww, r4.zzzz
    imad r4.xyzw, l(11, 12, 13, 14), cb0[21].yyyy, r1.xxxx
    iadd r4.xyzw, r4.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r4.xxxx, r5.xxxx
    store_uav_typed u1.xyzw, r4.yyyy, r5.yyyy
    store_uav_typed u1.xyzw, r4.zzzz, r5.zzzz
    store_uav_typed u1.xyzw, r4.wwww, r2.zzzz
    store_uav_typed u0.xyzw, r5.wwww, r3.zzzz
    store_uav_typed u0.xyzw, r0.zzzz, r0.wwww
    imad r4.xyzw, l(15, 17, 18, 19), cb0[21].yyyy, r1.xxxx
    iadd r4.xyzw, r4.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r4.xxxx, r3.wwww
    store_uav_typed u1.xyzw, r6.wwww, r2.wwww
    store_uav_typed u0.xyzw, r6.xxxx, r2.xxxx
    store_uav_typed u1.xyzw, r4.yyyy, r5.xxxx
    store_uav_typed u1.xyzw, r4.zzzz, r5.yyyy
    store_uav_typed u1.xyzw, r4.wwww, r5.zzzz
  else 
    iadd r0.x, -r0.y, r0.x
    itof r0.y, r0.x
    ge r2.xyzw, r0.yyyy, cb0[10].xyzw
    and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
    dp4 r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
    ge r2.xyzw, r0.yyyy, cb0[11].xyzw
    and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
    dp4 r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
    ftoi r0.yz, r0.yyzy
    iadd r0.y, r0.y, r0.z
    iadd r0.z, r0.x, -cb0[r0.y + 12].w
    iadd r0.x, r0.x, cb1[5].z
    itof r0.z, r0.z
    mad r0.y, cb0[r0.y + 12].x, r0.z, cb0[r0.y + 12].y
    add r0.z, -r0.y, cb1[3].w
    mul r0.y, r0.y, cb1[4].w
    add r1.yzw, cb1[0].xxyz, -cb1[6].xxyz
    mad r1.yzw, r0.yyyy, r1.yyzw, cb1[6].xxyz
    max r0.y, cb1[1].x, l(0.000010)
    add r0.w, r0.y, l(-0.000100)
    lt r0.w, r0.z, r0.w
    div r0.y, r0.z, r0.y
    ieq r0.w, r0.w, l(-1)
    if_nz r0.w
      imm_atomic_iadd r1.x, u2, cb0[22].w, l(1)
    endif 
    iadd r0.w, r1.x, cb0[20].x
    store_uav_typed u1.xyzw, r0.wwww, r0.zzzz
    iadd r0.z, r1.x, cb0[21].y
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, cb1[2].xxxx
    ishl r2.xyzw, cb0[21].yyyy, l(1, 2, 3, 4)
    iadd r2.xyzw, r1.xxxx, r2.xyzw
    iadd r2.xyzw, r2.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r2.xxxx, cb1[2].yyyy
    imad r3.xyzw, l(3, 5, 6, 7), cb0[21].yyyy, r1.xxxx
    iadd r3.xyzw, r3.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r3.xxxx, cb1[2].zzzz
    store_uav_typed u1.xyzw, r2.yyyy, cb1[2].wwww
    store_uav_typed u1.xyzw, r3.yyyy, cb1[1].xxxx
    store_uav_typed u1.xyzw, r3.zzzz, cb1[3].xxxx
    store_uav_typed u1.xyzw, r3.wwww, r0.yyyy
    store_uav_typed u1.xyzw, r2.zzzz, r1.yyyy
    imad r3.xyzw, l(9, 10, 11, 12), cb0[21].yyyy, r1.xxxx
    iadd r3.xyzw, r3.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r3.xxxx, r1.zzzz
    store_uav_typed u1.xyzw, r3.yyyy, r1.wwww
    store_uav_typed u1.xyzw, r3.zzzz, l(0,0,0,0)
    store_uav_typed u1.xyzw, r3.wwww, l(0,0,0,0)
    imad r3.xyzw, l(13, 14, 15, 17), cb0[21].yyyy, r1.xxxx
    iadd r3.xyzw, r3.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r3.xxxx, l(0,0,0,0)
    store_uav_typed u1.xyzw, r3.yyyy, l(0,0,0,0)
    store_uav_typed u0.xyzw, r0.wwww, l(0,0,0,0)
    store_uav_typed u0.xyzw, r0.zzzz, l(0,0,0,0)
    store_uav_typed u1.xyzw, r3.zzzz, l(0,0,0,0)
    store_uav_typed u1.xyzw, r2.wwww, cb1[3].yyyy
    store_uav_typed u0.xyzw, r2.xxxx, r0.xxxx
    store_uav_typed u1.xyzw, r3.wwww, l(0,0,0,0)
    imad r0.xy, l(18, 19, 0, 0), cb0[21].yyyy, r1.xxxx
    iadd r0.xy, r0.xyxx, cb0[20].xxxx
    store_uav_typed u1.xyzw, r0.xxxx, l(0,0,0,0)
    store_uav_typed u1.xyzw, r0.yyyy, l(0,0,0,0)
  endif 
endif 
ret 
// Approximately 149 instruction slots used
