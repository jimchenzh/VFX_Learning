//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   int4 EmitterSpawnInfoOffsets[2];   // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint SpawnedInstances;             // Offset:  320 Size:     4
//   uint UpdateStartInstance;          // Offset:  324 Size:     4
//   int DefaultSimulationStageIndex;   // Offset:  328 Size:     4 [unused]
//   int SimulationStageIndex;          // Offset:  332 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  336 Size:     4 [unused]
//   uint ComponentBufferSizeRead;      // Offset:  340 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  344 Size:     4
//   int NumEventsPerParticle;          // Offset:  348 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  352 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  356 Size:     4 [unused]
//   uint SimStart;                     // Offset:  360 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  364 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  368 Size:     4
//   float MinTime_Emitter_LatheProfile;// Offset:  372 Size:     4 [unused]
//   float MaxTime_Emitter_LatheProfile;// Offset:  376 Size:     4 [unused]
//   float InvTimeRange_Emitter_LatheProfile;// Offset:  380 Size:     4 [unused]
//   float CurveLUTNumMinusOne_Emitter_LatheProfile;// Offset:  384 Size:     4 [unused]
//   float2 Dimensions_Emitter_TEXTURE_VAR;// Offset:  388 Size:     8 [unused]
//   float MinTime_Emitter_Color_ColorCurve;// Offset:  396 Size:     4
//   float MaxTime_Emitter_Color_ColorCurve;// Offset:  400 Size:     4 [unused]
//   float InvTimeRange_Emitter_Color_ColorCurve;// Offset:  404 Size:     4
//   float CurveLUTNumMinusOne_Emitter_Color_ColorCurve;// Offset:  408 Size:     4
//   float MinTime_Emitter_ConvergenceRate_Particles_Position_FloatCurve;// Offset:  412 Size:     4
//   float MaxTime_Emitter_ConvergenceRate_Particles_Position_FloatCurve;// Offset:  416 Size:     4 [unused]
//   float InvTimeRange_Emitter_ConvergenceRate_Particles_Position_FloatCurve;// Offset:  420 Size:     4
//   float CurveLUTNumMinusOne_Emitter_ConvergenceRate_Particles_Position_FloatCurve;// Offset:  424 Size:     4
//
// }
//
// cbuffer FNiagaraGlobalParameters
// {
//
//   float Engine_DeltaTime;            // Offset:    0 Size:     4
//   float Engine_InverseDeltaTime;     // Offset:    4 Size:     4
//   float Engine_Time;                 // Offset:    8 Size:     4 [unused]
//   float Engine_RealTime;             // Offset:   12 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraOwnerParameters
// {
//
//   row_major float4x4 Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64
//   row_major float4x4 Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64
//   float4 Engine_Owner_Rotation;      // Offset:  384 Size:    16 [unused]
//   float4 Engine_Owner_Position;      // Offset:  400 Size:    16
//   float4 Engine_Owner_Velocity;      // Offset:  416 Size:    16 [unused]
//   float4 Engine_Owner_SystemXAxis;   // Offset:  432 Size:    16 [unused]
//   float4 Engine_Owner_SystemYAxis;   // Offset:  448 Size:    16 [unused]
//   float4 Engine_Owner_SystemZAxis;   // Offset:  464 Size:    16 [unused]
//   float4 Engine_Owner_Scale;         // Offset:  480 Size:    16 [unused]
//
// }
//
// cbuffer FNiagaraEmitterParameters
// {
//
//   int Engine_Emitter_NumParticles;   // Offset:    0 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:    4 Size:     4
//   float Engine_Emitter_SpawnCountScale;// Offset:    8 Size:     4 [unused]
//   float Emitter_Age;                 // Offset:   12 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   16 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_0; // Offset:   20 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_1; // Offset:   24 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_2; // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraExternalParameters
// {
//
//   float Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:    0 Size:     4
//   float Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:    4 Size:     4
//   int Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:    8 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:   12 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:   16 Size:     4 [unused]
//   int Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:   20 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:   24 Size:     4
//   float Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:   28 Size:     4
//   int Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:   32 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   48 Size:    16 [unused]
//   float4 Constants_Emitter_InitializeParticle_SpriteSize;// Offset:   64 Size:    16
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   80 Size:    16 [unused]
//   int Constants_Emitter_CylinderLocation_RandomSeed;// Offset:   96 Size:     4 [unused]
//   float Constants_Emitter_CylinderLocation_CylinderHeight;// Offset:  100 Size:     4
//   float Constants_Emitter_CylinderLocation_CylinderRadius;// Offset:  104 Size:     4
//   float Constants_Emitter_CylinderLocation_SurfaceOnlyBandThickness;// Offset:  108 Size:     4
//   float4 Constants_Emitter_CylinderLocation_Offset;// Offset:  112 Size:    16
//   float4 Constants_Emitter_CylinderLocation_NonUniformScale;// Offset:  128 Size:    16
//   int Constants_Emitter_CylinderLocation_SpawnGroupMask;// Offset:  144 Size:     4 [unused]
//   float4 Constants_Emitter_UniformRangedVector2D_Minimum;// Offset:  160 Size:    16
//   float4 Constants_Emitter_UniformRangedVector2D_Maximum;// Offset:  176 Size:    16
//   int Constants_Emitter_UniformRangedVector2D_RandomSeed;// Offset:  192 Size:     4 [unused]
//   float Constants_Emitter_Color_ScaleAlpha;// Offset:  196 Size:     4
//   float Emitter_AlphaScale;          // Offset:  200 Size:     4
//   float Constants_Emitter_RecreateCameraProjection_Fov;// Offset:  204 Size:     4
//   float4 Constants_Emitter_RecreateCameraProjection_RenderTargetResolution;// Offset:  208 Size:    16
//   float4 Constants_Emitter_RecreateCameraProjection_RightVector;// Offset:  224 Size:    16
//   float4 Constants_Emitter_RecreateCameraProjection_UpVector;// Offset:  240 Size:    16
//   float4 Constants_Emitter_RecreateCameraProjection_ForwardVector;// Offset:  256 Size:    16
//   float Constants_Emitter_AdjustCameraProjection_OffsetDistance;// Offset:  272 Size:     4
//   float Constants_Emitter_AdjustCameraProjection_Angle;// Offset:  276 Size:     4
//   float4 Constants_Emitter_AdjustCameraProjection_Scale;// Offset:  288 Size:    16
//   float4 Constants_Emitter_AdjustCameraProjection_OffsetDirection;// Offset:  304 Size:    16
//   float Constants_Emitter_FloatFromCurve001_ScaleCurve;// Offset:  320 Size:     4
//   float Emitter_SpawnRate;           // Offset:  324 Size:     4 [unused]
//
// }
//
// cbuffer PREV_FNiagaraOwnerParameters
// {
//
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 PREV_Engine_Owner_Rotation; // Offset:  384 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  400 Size:    16
//   float4 PREV_Engine_Owner_Velocity; // Offset:  416 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemXAxis;// Offset:  432 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemYAxis;// Offset:  448 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemZAxis;// Offset:  464 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Scale;    // Offset:  480 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Sampler_Emitter_TEXTURE_VAR       sampler      NA          NA             s0      1 
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// Texture_Emitter_TEXTURE_VAR       texture  float4          2d             t2      1 
// CurveLUT_Emitter_Color_ColorCurve    texture   float         buf             t3      1 
// CurveLUT_Emitter_ConvergenceRate_Particles_Position_FloatCurve    texture   float         buf             t4      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FNiagaraGlobalParameters          cbuffer      NA          NA            cb1      1 
// FNiagaraOwnerParameters           cbuffer      NA          NA            cb2      1 
// FNiagaraEmitterParameters         cbuffer      NA          NA            cb3      1 
// FNiagaraExternalParameters        cbuffer      NA          NA            cb4      1 
// PREV_FNiagaraOwnerParameters      cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[27], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[26], immediateIndexed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_constantbuffer CB4[21], immediateIndexed
dcl_constantbuffer CB5[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadIDInGroup.x
dcl_input vThreadID.x
dcl_temps 13
dcl_tgsm_structured g0, 4, 32
dcl_tgsm_structured g1, 4, 8
dcl_tgsm_structured g2, 4, 2
dcl_tgsm_raw g3, 4
dcl_thread_group 32, 1, 1
iadd r0.x, vThreadID.x, cb0[20].y
ieq r0.y, cb0[22].w, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].wwww, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r0.z, r0.y, cb0[20].x
iadd r0.z, r0.z, cb0[20].y
ult r0.zw, r0.xxxx, r0.zzzy
and r0.w, r0.z, r0.w
if_nz r0.w
  ld_indexable(buffer)(float,float,float,float) r0.w, r0.xxxx, t0.yzwx
  imad r1.xyzw, l(5, 6, 7, 9), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r1.x, r1.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.y, r1.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r2.x, r1.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.x, r1.wwww, t0.xyzw
  imad r4.xyzw, l(10, 11, 15, 17), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r3.y, r4.xxxx, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r3.z, r4.yyyy, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r1.z, r4.zzzz, t0.yzxw
  ishl r1.w, cb0[21].y, l(4)
  iadd r1.w, r0.x, r1.w
  ld_indexable(buffer)(float,float,float,float) r1.w, r1.wwww, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r2.w, r4.wwww, t0.yzwx
  imad r4.xyzw, l(18, 19, 20, 21), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r3.w, r4.xxxx, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r4.x, r4.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.y, r4.zzzz, t0.yxzw
  ld_indexable(buffer)(sint,sint,sint,sint) r4.z, r0.xxxx, t1.yzxw
  ld_indexable(buffer)(float,float,float,float) r5.x, r4.wwww, t0.xyzw
  imad r4.w, l(22), cb0[21].y, r0.x
  ld_indexable(buffer)(float,float,float,float) r5.y, r4.wwww, t0.yxzw
  add r0.w, r0.w, cb1[0].x
  max r4.w, r1.x, l(0.000010)
  add r5.w, r4.w, l(-0.000100)
  lt r5.w, r0.w, r5.w
  div r4.w, r0.w, r4.w
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyzw, r5.xyxx, t2.xyzw, s0, l(0.000000)
  add r7.x, r4.w, -cb0[24].w
  mul_sat r7.x, r7.x, cb0[25].y
  mul r7.y, r7.x, cb0[25].z
  round_ni r7.y, r7.y
  lt r7.z, r7.y, cb0[25].z
  add r7.w, r7.y, l(1.000000)
  movc r7.z, r7.z, r7.w, r7.y
  mad r7.x, r7.x, cb0[25].z, -r7.y
  mul r7.w, r7.y, l(4.000000)
  mul r8.x, r7.z, l(4.000000)
  ftou r7.w, r7.w
  ld_indexable(buffer)(float,float,float,float) r9.x, r7.wwww, t3.xyzw
  mad r8.yzw, r7.yyyy, l(0.000000, 4.000000, 4.000000, 4.000000), l(0.000000, 1.000000, 2.000000, 3.000000)
  ftou r8.yzw, r8.yyzw
  ld_indexable(buffer)(float,float,float,float) r9.y, r8.yyyy, t3.yxzw
  ld_indexable(buffer)(float,float,float,float) r9.z, r8.zzzz, t3.yzxw
  ld_indexable(buffer)(float,float,float,float) r9.w, r8.wwww, t3.yzwx
  ftou r7.y, r8.x
  ld_indexable(buffer)(float,float,float,float) r8.x, r7.yyyy, t3.xyzw
  mad r7.yzw, r7.zzzz, l(0.000000, 4.000000, 4.000000, 4.000000), l(0.000000, 1.000000, 2.000000, 3.000000)
  ftou r7.yzw, r7.yyzw
  ld_indexable(buffer)(float,float,float,float) r8.y, r7.yyyy, t3.yxzw
  ld_indexable(buffer)(float,float,float,float) r8.z, r7.zzzz, t3.yzxw
  ld_indexable(buffer)(float,float,float,float) r8.w, r7.wwww, t3.yzwx
  add r8.xyzw, -r9.xyzw, r8.xyzw
  mad r7.xyzw, r7.xxxx, r8.xyzw, r9.xyzw
  mul r6.xyz, r6.xyzx, r7.xyzx
  mul r7.x, r7.w, cb4[12].y
  mul r7.x, r7.x, cb4[12].z
  mov r5.z, -r5.y
  add r7.yz, r5.xxzx, l(0.000000, -0.500000, 0.500000, 0.000000)
  mul r7.w, cb4[12].w, l(0.008727)
  sincos r8.x, r9.x, r7.w
  div r7.w, r8.x, r9.x
  mul r8.xy, r7.wwww, r7.yzyy
  div r9.y, cb4[13].y, cb4[13].x
  mul r8.z, r8.y, l(2.000000)
  mov r9.x, l(2.000000)
  mul r7.yz, r8.xxzx, r9.xxyx
  min r8.xy, |r7.yzyy|, l(1.000000, 1.000000, 0.000000, 0.000000)
  max r8.zw, |r7.yyyz|, l(0.000000, 0.000000, 1.000000, 1.000000)
  div r8.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r8.zzzw
  mul r8.xy, r8.zwzz, r8.xyxx
  mul r8.zw, r8.xxxy, r8.xxxy
  mad r9.xy, r8.zwzz, l(0.020835, 0.020835, 0.000000, 0.000000), l(-0.085133, -0.085133, 0.000000, 0.000000)
  mad r9.xy, r8.zwzz, r9.xyxx, l(0.180141, 0.180141, 0.000000, 0.000000)
  mad r9.xy, r8.zwzz, r9.xyxx, l(-0.330299, -0.330299, 0.000000, 0.000000)
  mad r8.zw, r8.zzzw, r9.xxxy, l(0.000000, 0.000000, 0.999866, 0.999866)
  mul r9.xy, r8.zwzz, r8.xyxx
  lt r9.zw, l(0.000000, 0.000000, 1.000000, 1.000000), |r7.yyyz|
  mad r9.xy, r9.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(1.570796, 1.570796, 0.000000, 0.000000)
  and r9.xy, r9.zwzz, r9.xyxx
  mad r8.xy, r8.xyxx, r8.zwzz, r9.xyxx
  min r7.yz, r7.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
  lt r7.yz, r7.yyzy, -r7.yyzy
  movc r7.yz, r7.yyzy, -r8.xxyx, r8.xxyx
  sincos r8.x, r9.x, r7.y
  div r7.y, r8.x, r9.x
  sincos r8.x, r9.x, r7.z
  div r7.z, r8.x, r9.x
  mul r7.yz, r6.wwww, r7.yyzy
  mul r8.xyz, r7.zzzz, cb4[15].xyzx
  mad r7.yzw, r7.yyyy, cb4[14].xxyz, r8.xxyz
  mad r7.yzw, r6.wwww, cb4[16].xxyz, r7.yyzw
  add r7.yzw, r7.yyzw, cb2[25].xxyz
  mad r7.yzw, -cb4[19].xxyz, cb4[17].xxxx, r7.yyzw
  mul r8.xyz, r7.zzzz, cb2[21].xyzx
  mad r8.xyz, r7.yyyy, cb2[20].xyzx, r8.xyzx
  mad r7.yzw, r7.wwww, cb2[22].xxyz, r8.xxyz
  add r7.yzw, r7.yyzw, cb2[23].xxyz
  mul r6.w, cb4[17].y, l(0.017453)
  sincos r8.x, r9.x, r6.w
  div r6.w, r8.x, r9.x
  mul r6.w, r6.w, cb4[17].x
  div r7.yzw, r7.yyzw, r6.wwww
  mul r7.yzw, r7.yyzw, cb4[18].xxyz
  mul r8.xyz, r7.zzzz, cb2[17].xyzx
  mad r8.xyz, r7.yyyy, cb2[16].xyzx, r8.xyzx
  mad r7.yzw, r7.wwww, cb2[18].xxyz, r8.xxyz
  add r7.yzw, r7.yyzw, cb2[19].xxyz
  add r6.w, r4.w, -cb0[25].w
  mul_sat r6.w, r6.w, cb0[26].y
  mul r8.x, r6.w, cb0[26].z
  round_ni r8.x, r8.x
  lt r8.y, r8.x, cb0[26].z
  add r8.z, r8.x, l(1.000000)
  movc r8.y, r8.y, r8.z, r8.x
  mad r6.w, r6.w, cb0[26].z, -r8.x
  ftou r8.x, r8.x
  ld_indexable(buffer)(float,float,float,float) r8.x, r8.xxxx, t4.xyzw
  ftou r8.y, r8.y
  ld_indexable(buffer)(float,float,float,float) r8.y, r8.yyyy, t4.yxzw
  add r8.y, -r8.x, r8.y
  mad r6.w, r6.w, r8.y, r8.x
  mul r6.w, r6.w, cb4[20].x
  mul_sat r6.w, r6.w, cb1[0].x
  add r8.xyz, -r3.xyzx, r7.yzwy
  mad r3.xyz, r6.wwww, r8.xyzx, r3.xyzx
else 
  uge r6.w, r0.x, r0.y
  and r0.z, r0.z, r6.w
  if_nz r0.z
    iadd r0.x, -r0.y, r0.x
    ige r8.xyzw, r0.xxxx, cb0[10].xyzw
    and r8.xyzw, r8.xyzw, l(1, 1, 1, 1)
    iadd r0.y, r8.y, r8.x
    iadd r0.y, r8.z, r0.y
    iadd r0.y, r8.w, r0.y
    ige r8.xyzw, r0.xxxx, cb0[11].xyzw
    and r8.xyzw, r8.xyzw, l(1, 1, 1, 1)
    iadd r0.z, r8.y, r8.x
    iadd r0.z, r8.z, r0.z
    iadd r0.z, r8.w, r0.z
    iadd r0.y, r0.z, r0.y
    iadd r0.x, r0.x, -cb0[r0.y + 12].w
    iadd r4.z, r0.x, cb3[0].y
    itof r0.x, r0.x
    mad r0.x, cb0[r0.y + 12].x, r0.x, cb0[r0.y + 12].y
    add r0.w, -r0.x, cb1[0].x
    mul r0.x, r0.x, cb1[0].y
    add r8.xyz, cb2[25].xyzx, -cb5[25].xyzx
    mad r0.xyz, r0.xxxx, r8.xyzx, cb5[25].xyzx
    add r6.w, -cb4[0].x, cb4[0].y
    imul null, r8.x, vThreadID.x, l(0x0019660d)
    imul null, r8.y, cb0[9].z, l(0x0019660d)
    iadd r8.xy, r8.xyxx, l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r9.xyzw, r8.xxxx, r8.xxxx, l(0x3c3c2745, 0x3c095b2b, 0x3beff51e, 0x3bd68f11)
    imad r10.xyzw, r8.yyyy, r9.xyzw, r8.xxxx
    imad r11.xyzw, r9.xyzw, r10.xyzw, r8.yyyy
    imad r11.xyzw, r10.xyzw, r11.xyzw, r8.xxxx
    imad r9.xyzw, r10.xyzw, r11.xyzw, r9.xyzw
    ishr r9.xyzw, r9.xyzw, l(8, 8, 8, 8)
    and r9.xyzw, r9.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r9.xyzw, r9.xyzw
    mul r6.w, r6.w, r9.x
    mad r6.w, r6.w, l(0.000000), cb4[0].x
    mul r3.w, r6.w, l(360.000000)
    add r6.w, -cb4[1].z, cb4[1].w
    mul r6.w, r6.w, r9.y
    mad r1.x, r6.w, l(0.000000), cb4[1].z
    mul r2.xy, r9.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
    imad r9.xyzw, r8.xxxx, r8.xxxx, l(0x3bbd2904, 0x3b70f6dd, 0x3b5790d0, 0x3b3e2ac3)
    imad r10.xyzw, r8.yyyy, r9.xyzw, r8.xxxx
    imad r11.xyzw, r9.xyzw, r10.xyzw, r8.yyyy
    imad r11.xyzw, r10.xyzw, r11.xyzw, r8.xxxx
    imad r9.xyzw, r10.xyzw, r11.xyzw, r9.xyzw
    ishr r9.xyzw, r9.xyzw, l(8, 8, 8, 8)
    and r9.xyzw, r9.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r9.xyzw, r9.xyzw
    mul r2.z, r9.x, l(0.000000)
    add r10.zw, r2.yyyz, l(0.000000, 0.000000, 0.000000, -1.000000)
    sincos r9.x, r11.x, r10.z
    mad r2.y, -r10.w, r10.w, l(1.000000)
    sqrt r2.y, r2.y
    mul r10.x, r2.y, r11.x
    mul r10.y, r2.y, r9.x
    mad r9.xyz, r9.ywzy, l(0.000000, 0.000000, 0.000000, 0.000000), l(0.000000, 0.000000, -1.000000, 0.000000)
    mul r2.y, r9.x, l(6.283185)
    sincos r9.x, r11.x, r2.y
    eq r2.y, |r9.z|, l(1.000000)
    sqrt r2.z, r9.y
    movc r12.xy, r2.yyyy, r2.zzzz, l(1.000000,1.000000,0,0)
    mov r12.z, l(1.000000)
    mov r9.y, r11.x
    mul r9.xyz, r12.xyzx, r9.xyzx
    mov r11.x, l(1.000000)
    mov r11.z, cb4[6].w
    mul r10.xyz, r10.xywx, r11.xxzx
    mov r11.x, cb4[6].w
    mov r11.z, l(0)
    mul r10.xyz, r10.xyzx, r11.xxzx
    mad r9.xyz, cb4[6].zzyz, r9.xyzx, r10.xyzx
    add r0.xyz, r0.xyzx, cb4[7].xyzx
    mul r9.xyz, r9.xyzx, cb4[8].xyzx
    mul r10.xyz, r9.yyyy, cb2[1].xyzx
    mad r9.xyw, r9.xxxx, cb2[0].xyxz, r10.xyxz
    mad r9.xyz, r9.zzzz, cb2[2].xyzx, r9.xywx
    add r0.xyz, r0.xyzx, r9.xyzx
    add r2.yz, -cb4[10].xxyx, cb4[11].xxyx
    imad r8.zw, r8.xxxx, r8.xxxx, l(0, 0, 0x3ad8928f, 0x3abf2c82)
    imad r9.xy, r8.yyyy, r8.zwzz, r8.xxxx
    imad r9.zw, r8.zzzw, r9.xxxy, r8.yyyy
    imad r8.xy, r9.xyxx, r9.zwzz, r8.xxxx
    imad r8.xy, r9.xyxx, r8.xyxx, r8.zwzz
    ishr r8.xy, r8.xyxx, l(8, 8, 0, 0)
    and r8.xy, r8.xyxx, l(0x00ffffff, 0x00ffffff, 0, 0)
    utof r8.xy, r8.xyxx
    mul r2.yz, r2.yyzy, r8.xxyx
    mad r5.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000), cb4[10].xyxx
    max r2.y, r1.x, l(0.000010)
    add r2.z, r2.y, l(-0.000100)
    lt r5.w, r0.w, r2.z
    div r4.w, r0.w, r2.y
    sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r5.xyxx, t2.xyzw, s0, l(0.000000)
    add r2.y, r4.w, -cb0[24].w
    mul_sat r2.y, r2.y, cb0[25].y
    mul r2.z, r2.y, cb0[25].z
    round_ni r2.z, r2.z
    lt r6.w, r2.z, cb0[25].z
    add r9.x, r2.z, l(1.000000)
    movc r6.w, r6.w, r9.x, r2.z
    mad r2.y, r2.y, cb0[25].z, -r2.z
    mul r9.x, r2.z, l(4.000000)
    mul r9.y, r6.w, l(4.000000)
    ftou r9.x, r9.x
    ld_indexable(buffer)(float,float,float,float) r10.x, r9.xxxx, t3.xyzw
    mad r9.xzw, r2.zzzz, l(4.000000, 0.000000, 4.000000, 4.000000), l(1.000000, 0.000000, 2.000000, 3.000000)
    ftou r9.xzw, r9.xxzw
    ld_indexable(buffer)(float,float,float,float) r10.y, r9.xxxx, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r10.z, r9.zzzz, t3.yzxw
    ld_indexable(buffer)(float,float,float,float) r10.w, r9.wwww, t3.yzwx
    ftou r2.z, r9.y
    ld_indexable(buffer)(float,float,float,float) r9.x, r2.zzzz, t3.xyzw
    mad r11.xyz, r6.wwww, l(4.000000, 4.000000, 4.000000, 0.000000), l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r11.xyz, r11.xyzx
    ld_indexable(buffer)(float,float,float,float) r9.y, r11.xxxx, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r9.z, r11.yyyy, t3.yzxw
    ld_indexable(buffer)(float,float,float,float) r9.w, r11.zzzz, t3.yzwx
    add r9.xyzw, -r10.xyzw, r9.xyzw
    mad r9.xyzw, r2.yyyy, r9.xyzw, r10.xyzw
    mul r6.xyz, r8.xyzx, r9.xyzx
    mul r2.y, r9.w, cb4[12].y
    mul r7.x, r2.y, cb4[12].z
    mov r5.z, -r5.y
    add r2.yz, r5.xxzx, l(0.000000, -0.500000, 0.500000, 0.000000)
    mul r5.z, cb4[12].w, l(0.008727)
    sincos r8.x, r9.x, r5.z
    div r5.z, r8.x, r9.x
    mul r8.xy, r2.yzyy, r5.zzzz
    div r9.y, cb4[13].y, cb4[13].x
    mul r8.z, r8.y, l(2.000000)
    mov r9.x, l(2.000000)
    mul r2.yz, r8.xxzx, r9.xxyx
    min r8.xy, |r2.yzyy|, l(1.000000, 1.000000, 0.000000, 0.000000)
    max r9.xy, |r2.yzyy|, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r9.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r9.xyxx
    mul r8.xy, r8.xyxx, r9.xyxx
    mul r9.xy, r8.xyxx, r8.xyxx
    mad r9.zw, r9.xxxy, l(0.000000, 0.000000, 0.020835, 0.020835), l(0.000000, 0.000000, -0.085133, -0.085133)
    mad r9.zw, r9.xxxy, r9.zzzw, l(0.000000, 0.000000, 0.180141, 0.180141)
    mad r9.zw, r9.xxxy, r9.zzzw, l(0.000000, 0.000000, -0.330299, -0.330299)
    mad r9.xy, r9.xyxx, r9.zwzz, l(0.999866, 0.999866, 0.000000, 0.000000)
    mul r9.zw, r8.xxxy, r9.xxxy
    lt r10.xy, l(1.000000, 1.000000, 0.000000, 0.000000), |r2.yzyy|
    mad r9.zw, r9.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 1.570796, 1.570796)
    and r9.zw, r10.xxxy, r9.zzzw
    mad r8.xy, r8.xyxx, r9.xyxx, r9.zwzz
    min r2.yz, r2.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
    lt r2.yz, r2.yyzy, -r2.yyzy
    movc r2.yz, r2.yyzy, -r8.xxyx, r8.xxyx
    sincos r8.x, r9.x, r2.y
    div r2.y, r8.x, r9.x
    sincos r8.x, r9.x, r2.z
    div r2.z, r8.x, r9.x
    mul r2.yz, r8.wwww, r2.yyzy
    mul r8.xyz, r2.zzzz, cb4[15].xyzx
    mad r8.xyz, r2.yyyy, cb4[14].xyzx, r8.xyzx
    mad r8.xyz, r8.wwww, cb4[16].xyzx, r8.xyzx
    add r8.xyz, r8.xyzx, cb2[25].xyzx
    mad r8.xyz, -cb4[19].xyzx, cb4[17].xxxx, r8.xyzx
    mul r9.xyz, r8.yyyy, cb2[21].xyzx
    mad r8.xyw, r8.xxxx, cb2[20].xyxz, r9.xyxz
    mad r8.xyz, r8.zzzz, cb2[22].xyzx, r8.xywx
    add r8.xyz, r8.xyzx, cb2[23].xyzx
    mul r2.y, cb4[17].y, l(0.017453)
    sincos r9.x, r10.x, r2.y
    div r2.y, r9.x, r10.x
    mul r2.y, r2.y, cb4[17].x
    div r8.xyz, r8.xyzx, r2.yyyy
    mul r8.xyz, r8.xyzx, cb4[18].xyzx
    mul r9.xyz, r8.yyyy, cb2[17].xyzx
    mad r8.xyw, r8.xxxx, cb2[16].xyxz, r9.xyxz
    mad r8.xyz, r8.zzzz, cb2[18].xyzx, r8.xywx
    add r7.yzw, r8.xxyz, cb2[19].xxyz
    add r2.y, r4.w, -cb0[25].w
    mul_sat r2.y, r2.y, cb0[26].y
    mul r2.z, r2.y, cb0[26].z
    round_ni r2.z, r2.z
    lt r5.z, r2.z, cb0[26].z
    add r6.w, r2.z, l(1.000000)
    movc r5.z, r5.z, r6.w, r2.z
    mad r2.y, r2.y, cb0[26].z, -r2.z
    ftou r2.z, r2.z
    ld_indexable(buffer)(float,float,float,float) r2.z, r2.zzzz, t4.yzxw
    ftou r5.z, r5.z
    ld_indexable(buffer)(float,float,float,float) r5.z, r5.zzzz, t4.yzxw
    add r5.z, -r2.z, r5.z
    mad r2.y, r2.y, r5.z, r2.z
    mul r2.y, r2.y, cb4[20].x
    mul_sat r2.y, r0.w, r2.y
    add r8.xyz, -r0.xyzx, r7.yzwy
    mad r3.xyz, r2.yyyy, r8.xyzx, r0.xyzx
    mov r1.yzw, l(0,1.000000,1.000000,1.000000)
    mov r2.w, l(1.000000)
    mov r4.xy, cb4[4].xyxx
  else 
    mov r0.w, l(0)
    mov r6.xyz, l(0,0,0,0)
    mov r7.xyzw, l(0,0,0,0)
    mov r1.xyzw, l(0,0,0,0)
    mov r2.xw, l(0,0,0,0)
    mov r3.xyzw, l(0,0,0,0)
    mov r4.xyzw, l(0,0,0,0)
    mov r5.xyw, l(0,0,0,0)
  endif 
endif 
and r0.x, r5.w, l(1)
store_structured g0.x, vThreadIDInGroup.x, l(0), r0.x
sync_g_t
and r0.yz, vThreadIDInGroup.xxxx, l(0, 3, 15, 0)
if_z r0.y
  iadd r8.xyz, vThreadIDInGroup.xxxx, l(1, 2, 3, 0)
  ld_structured r0.y, r8.x, l(0), g0.xxxx
  iadd r0.y, r0.y, r0.x
  ld_structured r2.y, r8.y, l(0), g0.xxxx
  iadd r2.y, r0.y, r2.y
  ld_structured r2.z, r8.z, l(0), g0.xxxx
  iadd r2.z, r2.z, r2.y
  store_structured g0.x, vThreadIDInGroup.x, l(0), l(0)
  store_structured g0.x, r8.x, l(0), r0.x
  store_structured g0.x, r8.y, l(0), r0.y
  store_structured g0.x, r8.z, l(0), r2.y
  ushr r0.x, vThreadIDInGroup.x, l(2)
  store_structured g1.x, r0.x, l(0), r2.z
endif 
sync_g_t
if_z r0.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  ld_structured r0.y, r0.x, l(0), g1.xxxx
  iadd r8.xyz, r0.xxxx, l(1, 2, 3, 0)
  ld_structured r0.z, r8.x, l(0), g1.xxxx
  iadd r0.z, r0.z, r0.y
  ld_structured r2.y, r8.y, l(0), g1.xxxx
  iadd r2.y, r0.z, r2.y
  ld_structured r2.z, r8.z, l(0), g1.xxxx
  iadd r2.z, r2.z, r2.y
  store_structured g1.x, r0.x, l(0), l(0)
  store_structured g1.x, r8.x, l(0), r0.y
  store_structured g1.x, r8.y, l(0), r0.z
  store_structured g1.x, r8.z, l(0), r2.y
  ushr r0.x, r0.x, l(2)
  store_structured g2.x, r0.x, l(0), r2.z
endif 
sync_g_t
if_z vThreadIDInGroup.x
  ld_structured r0.x, l(0), l(0), g2.xxxx
  ld_structured r0.y, l(1), l(0), g2.xxxx
  iadd r0.y, r0.y, r0.x
  store_structured g2.x, l(0), l(0), l(0)
  store_structured g2.x, l(1), l(0), r0.x
  imm_atomic_iadd r8.x, u2, cb0[23].x, r0.y
  store_raw g3.x, l(0), r8.x
endif 
sync_g_t
if_nz r5.w
  ld_raw r0.x, l(0), g3.xxxx
  ushr r0.yz, vThreadIDInGroup.xxxx, l(0, 4, 2, 0)
  ld_structured r0.y, r0.y, l(0), g2.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, r0.z, l(0), g1.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, vThreadIDInGroup.x, l(0), g0.xxxx
  iadd r0.x, r0.y, r0.x
  iadd r0.y, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r0.wwww
  iadd r0.z, r0.x, cb0[21].z
  iadd r0.z, r0.z, cb0[20].y
  store_uav_typed u1.xyzw, r0.zzzz, r6.xxxx
  ishl r8.xyzw, cb0[21].zzzz, l(1, 2, 3, 4)
  iadd r8.xyzw, r0.xxxx, r8.xyzw
  iadd r8.xyzw, r8.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r8.xxxx, r6.yyyy
  imad r9.xyzw, l(3, 5, 6, 7), cb0[21].zzzz, r0.xxxx
  iadd r9.xyzw, r9.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r9.xxxx, r6.zzzz
  store_uav_typed u1.xyzw, r8.yyyy, r7.xxxx
  store_uav_typed u1.xyzw, r9.yyyy, r1.xxxx
  store_uav_typed u1.xyzw, r9.zzzz, r1.yyyy
  store_uav_typed u1.xyzw, r9.wwww, r2.xxxx
  store_uav_typed u1.xyzw, r8.zzzz, r4.wwww
  imad r6.xyzw, l(9, 10, 11, 12), cb0[21].zzzz, r0.xxxx
  iadd r6.xyzw, r6.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r6.xxxx, r3.xxxx
  store_uav_typed u1.xyzw, r6.yyyy, r3.yyyy
  store_uav_typed u1.xyzw, r6.zzzz, r3.zzzz
  store_uav_typed u1.xyzw, r6.wwww, r7.yyyy
  imad r6.xyzw, l(13, 14, 15, 17), cb0[21].zzzz, r0.xxxx
  iadd r6.xyzw, r6.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r6.xxxx, r7.zzzz
  store_uav_typed u1.xyzw, r6.yyyy, r7.wwww
  store_uav_typed u1.xyzw, r6.zzzz, r1.zzzz
  store_uav_typed u1.xyzw, r8.wwww, r1.wwww
  store_uav_typed u1.xyzw, r6.wwww, r2.wwww
  imad r1.xyzw, l(18, 19, 20, 21), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r3.wwww
  store_uav_typed u1.xyzw, r1.yyyy, r4.xxxx
  store_uav_typed u1.xyzw, r1.zzzz, r4.yyyy
  store_uav_typed u0.xyzw, r0.yyyy, r4.zzzz
  store_uav_typed u1.xyzw, r1.wwww, r5.xxxx
  imad r0.x, l(22), cb0[21].z, r0.x
  iadd r0.x, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.xxxx, r5.yyyy
endif 
ret 
// Approximately 442 instruction slots used
