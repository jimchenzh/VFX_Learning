//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   float4 EmitterSpawnInfoOffsets[2]; // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint UpdateStartInstance;          // Offset:  320 Size:     4
//   uint ShaderStageIndex;             // Offset:  324 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  328 Size:     4 [unused]
//   uint SpawnedInstances;             // Offset:  332 Size:     4
//   uint ComponentBufferSizeRead;      // Offset:  336 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  340 Size:     4
//   int NumEventsPerParticle;          // Offset:  344 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  348 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  352 Size:     4 [unused]
//   uint SimStart;                     // Offset:  356 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  360 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  364 Size:     4
//   float2 Dimensions_TEXTURE_VAR;     // Offset:  368 Size:     8 [unused]
//   float MinTime_Color_ColorCurve;    // Offset:  376 Size:     4
//   float MaxTime_Color_ColorCurve;    // Offset:  380 Size:     4 [unused]
//   float InvTimeRange_Color_ColorCurve;// Offset:  384 Size:     4
//   float MinTime_ConvergenceRate_Particles_Position_FloatCurve;// Offset:  388 Size:     4
//   float MaxTime_ConvergenceRate_Particles_Position_FloatCurve;// Offset:  392 Size:     4 [unused]
//   float InvTimeRange_ConvergenceRate_Particles_Position_FloatCurve;// Offset:  396 Size:     4
//
// }
//
// cbuffer FEmitterParameters
// {
//
//   float Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:    0 Size:     4
//   float Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:    4 Size:     4
//   int Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:    8 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   12 Size:     4 [unused]
//   int Engine_System_TickCount;       // Offset:   16 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:   20 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:   24 Size:     4 [unused]
//   int Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:   28 Size:     4 [unused]
//   float4 Engine_Owner_Position;      // Offset:   32 Size:    16
//   float Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:   48 Size:     4
//   float Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:   52 Size:     4
//   int Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:   56 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   64 Size:    16 [unused]
//   float4 Constants_Emitter_InitializeParticle_SpriteSize;// Offset:   80 Size:    16
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   96 Size:    16 [unused]
//   float4 Constants_Emitter_UniformRangedVector2D_Minimum;// Offset:  112 Size:    16
//   float4 Constants_Emitter_UniformRangedVector2D_Maximum;// Offset:  128 Size:    16
//   int Constants_Emitter_UniformRangedVector2D_RandomSeed;// Offset:  144 Size:     4 [unused]
//   float Engine_DeltaTime;            // Offset:  148 Size:     4
//   float Constants_Emitter_Color_ScaleAlpha;// Offset:  152 Size:     4
//   float Emitter_AlphaScale;          // Offset:  156 Size:     4
//   float Constants_Emitter_RecreateCameraProjection_Fov;// Offset:  160 Size:     4
//   float4 Constants_Emitter_RecreateCameraProjection_RightVector;// Offset:  176 Size:    16
//   float4 Constants_Emitter_RecreateCameraProjection_UpVector;// Offset:  192 Size:    16
//   float4 Constants_Emitter_RecreateCameraProjection_ForwardVector;// Offset:  208 Size:    16
//   float Constants_Emitter_AdjustCameraProjection_OffsetDistance;// Offset:  224 Size:     4
//   float Constants_Emitter_AdjustCameraProjection_Angle;// Offset:  228 Size:     4
//   float4 Constants_Emitter_AdjustCameraProjection_Scale;// Offset:  240 Size:    16
//   float4 Constants_Emitter_AdjustCameraProjection_OffsetDirection;// Offset:  256 Size:    16
//   row_major float4x4 Engine_Owner_SystemLocalToWorld;// Offset:  272 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocal;// Offset:  336 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  400 Size:    64
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  464 Size:    64
//   float Constants_Emitter_FloatFromCurve001_ScaleCurve;// Offset:  528 Size:     4
//   float Engine_Time;                 // Offset:  532 Size:     4 [unused]
//   float Engine_InverseDeltaTime;     // Offset:  536 Size:     4
//   int Engine_ExecutionCount;         // Offset:  540 Size:     4 [unused]
//   float Emitter_SpawnRate;           // Offset:  544 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:  548 Size:     4
//   float PREV_Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:  552 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:  556 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:  560 Size:     4 [unused]
//   int PREV_Emitter_RandomSeed;       // Offset:  564 Size:     4 [unused]
//   int PREV_Engine_System_TickCount;  // Offset:  568 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:  572 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:  576 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:  580 Size:     4 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  592 Size:    16
//   float PREV_Constants_Emitter_UniformRangedFloat003_Minimum;// Offset:  608 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat003_Maximum;// Offset:  612 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat003_RandomSeed;// Offset:  616 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_Color;// Offset:  624 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_SpriteSize;// Offset:  640 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_InitializeParticle_MeshScale;// Offset:  656 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_UniformRangedVector2D_Minimum;// Offset:  672 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_UniformRangedVector2D_Maximum;// Offset:  688 Size:    16 [unused]
//   int PREV_Constants_Emitter_UniformRangedVector2D_RandomSeed;// Offset:  704 Size:     4 [unused]
//   float PREV_Engine_DeltaTime;       // Offset:  708 Size:     4 [unused]
//   float PREV_Constants_Emitter_Color_ScaleAlpha;// Offset:  712 Size:     4 [unused]
//   float PREV_Emitter_AlphaScale;     // Offset:  716 Size:     4 [unused]
//   float PREV_Constants_Emitter_RecreateCameraProjection_Fov;// Offset:  720 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_RecreateCameraProjection_RightVector;// Offset:  736 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_RecreateCameraProjection_UpVector;// Offset:  752 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_RecreateCameraProjection_ForwardVector;// Offset:  768 Size:    16 [unused]
//   float PREV_Constants_Emitter_AdjustCameraProjection_OffsetDistance;// Offset:  784 Size:     4 [unused]
//   float PREV_Constants_Emitter_AdjustCameraProjection_Angle;// Offset:  788 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_AdjustCameraProjection_Scale;// Offset:  800 Size:    16 [unused]
//   float4 PREV_Constants_Emitter_AdjustCameraProjection_OffsetDirection;// Offset:  816 Size:    16 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorld;// Offset:  832 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocal;// Offset:  896 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset:  960 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset: 1024 Size:    64 [unused]
//   float PREV_Constants_Emitter_FloatFromCurve001_ScaleCurve;// Offset: 1088 Size:     4 [unused]
//   float PREV_Engine_Time;            // Offset: 1092 Size:     4 [unused]
//   float PREV_Engine_InverseDeltaTime;// Offset: 1096 Size:     4 [unused]
//   int PREV_Engine_ExecutionCount;    // Offset: 1100 Size:     4 [unused]
//   float PREV_Emitter_SpawnRate;      // Offset: 1104 Size:     4 [unused]
//   int PREV_Engine_Emitter_TotalSpawnedParticles;// Offset: 1108 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Sampler_TEXTURE_VAR               sampler      NA          NA             s0      1 
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// Texture_TEXTURE_VAR               texture  float4          2d             t2      1 
// CurveLUT_Color_ColorCurve         texture   float         buf             t3      1 
// CurveLUT_ConvergenceRate_Particles_Position_FloatCurve    texture   float         buf             t4      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FEmitterParameters                cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[25], dynamicIndexed
dcl_constantbuffer CB1[38], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_resource_buffer (float,float,float,float) t4
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadID.x
dcl_temps 11
dcl_thread_group 64, 1, 1
iadd r0.x, vThreadID.x, cb0[20].x
ieq r0.y, cb0[22].z, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].zzzz, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r1.x, r0.y, cb0[20].w
iadd r0.z, r1.x, cb0[20].x
ult r0.z, r0.x, r0.z
if_nz r0.z
  ult r0.z, r0.x, r0.y
  if_nz r0.z
    ld_indexable(buffer)(float,float,float,float) r0.z, r0.xxxx, t0.yzxw
    imad r2.xyzw, l(5, 6, 7, 9), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r0.w, r2.xxxx, t0.yzwx
    ld_indexable(buffer)(float,float,float,float) r1.y, r2.yyyy, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r1.z, r2.zzzz, t0.yzxw
    ld_indexable(buffer)(float,float,float,float) r2.x, r2.wwww, t0.xyzw
    imad r3.xyzw, l(10, 11, 15, 17), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r2.y, r3.xxxx, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r2.z, r3.yyyy, t0.yzxw
    ld_indexable(buffer)(float,float,float,float) r1.w, r3.zzzz, t0.yzwx
    ishl r4.xyzw, cb0[21].xyyy, l(4, 1, 2, 3)
    iadd r2.w, r0.x, r4.x
    ld_indexable(buffer)(float,float,float,float) r2.w, r2.wwww, t0.yzwx
    ld_indexable(buffer)(float,float,float,float) r3.x, r3.wwww, t0.xyzw
    imad r5.xyzw, l(18, 19, 20, 21), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r3.y, r5.xxxx, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r3.z, r5.yyyy, t0.yzxw
    ld_indexable(buffer)(float,float,float,float) r3.w, r5.zzzz, t0.yzwx
    ld_indexable(buffer)(sint,sint,sint,sint) r4.x, r0.xxxx, t1.xyzw
    ld_indexable(buffer)(float,float,float,float) r5.x, r5.wwww, t0.xyzw
    imad r5.w, l(22), cb0[21].x, r0.x
    ld_indexable(buffer)(float,float,float,float) r5.y, r5.wwww, t0.yxzw
    add r0.z, r0.z, cb1[9].y
    max r5.w, r0.w, l(0.000010)
    add r6.x, r5.w, l(-0.000100)
    lt r6.x, r0.z, r6.x
    div r5.w, r0.z, r5.w
    sample_l_indexable(texture2d)(float,float,float,float) r7.xyzw, r5.xyxx, t2.xyzw, s0, l(0.000000)
    add r6.y, r5.w, -cb0[23].z
    mul_sat r6.y, r6.y, cb0[24].x
    mul r6.z, r6.y, l(127.000000)
    round_ni r6.z, r6.z
    lt r6.w, r6.z, l(127.000000)
    add r8.x, r6.z, l(1.000000)
    mad r6.y, r6.y, l(127.000000), -r6.z
    mul r8.y, r6.z, l(4.000000)
    mul r8.x, r8.x, l(4.000000)
    movc r6.w, r6.w, r8.x, l(508.000000)
    ftou r8.x, r8.y
    ld_indexable(buffer)(float,float,float,float) r8.x, r8.xxxx, t3.xyzw
    mad r9.xyz, r6.zzzz, l(4.000000, 4.000000, 4.000000, 0.000000), l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r9.xyz, r9.xyzx
    ld_indexable(buffer)(float,float,float,float) r8.y, r9.xxxx, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r8.z, r9.yyyy, t3.yzxw
    ld_indexable(buffer)(float,float,float,float) r8.w, r9.zzzz, t3.yzwx
    ftou r6.z, r6.w
    ld_indexable(buffer)(float,float,float,float) r9.x, r6.zzzz, t3.xyzw
    add r10.xyz, r6.wwww, l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r10.xyz, r10.xyzx
    ld_indexable(buffer)(float,float,float,float) r9.y, r10.xxxx, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r9.z, r10.yyyy, t3.yzxw
    ld_indexable(buffer)(float,float,float,float) r9.w, r10.zzzz, t3.yzwx
    add r9.xyzw, -r8.xyzw, r9.xyzw
    mad r8.xyzw, r6.yyyy, r9.xyzw, r8.xyzw
    mul r6.yzw, r7.xxyz, r8.xxyz
    mul r7.x, r8.w, cb1[9].z
    mul r7.x, r7.x, cb1[9].w
    mov r5.z, -r5.y
    add r7.yz, r5.xxzx, l(0.000000, -0.500000, 0.500000, 0.000000)
    mul r5.z, cb1[10].x, l(0.008727)
    sincos r8.x, r9.x, r5.z
    div r5.z, r8.x, r9.x
    mul r7.yz, r5.zzzz, r7.yyzy
    add r7.yz, r7.yyzy, r7.yyzy
    min r8.xy, |r7.yzyy|, l(1.000000, 1.000000, 0.000000, 0.000000)
    max r8.zw, |r7.yyyz|, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r8.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r8.zzzw
    mul r8.xy, r8.zwzz, r8.xyxx
    mul r8.zw, r8.xxxy, r8.xxxy
    mad r9.xy, r8.zwzz, l(0.020835, 0.020835, 0.000000, 0.000000), l(-0.085133, -0.085133, 0.000000, 0.000000)
    mad r9.xy, r8.zwzz, r9.xyxx, l(0.180141, 0.180141, 0.000000, 0.000000)
    mad r9.xy, r8.zwzz, r9.xyxx, l(-0.330299, -0.330299, 0.000000, 0.000000)
    mad r8.zw, r8.zzzw, r9.xxxy, l(0.000000, 0.000000, 0.999866, 0.999866)
    mul r9.xy, r8.zwzz, r8.xyxx
    lt r9.zw, l(0.000000, 0.000000, 1.000000, 1.000000), |r7.yyyz|
    mad r9.xy, r9.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(1.570796, 1.570796, 0.000000, 0.000000)
    and r9.xy, r9.zwzz, r9.xyxx
    mad r8.xy, r8.xyxx, r8.zwzz, r9.xyxx
    min r7.yz, r7.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
    lt r7.yz, r7.yyzy, -r7.yyzy
    movc r7.yz, r7.yyzy, -r8.xxyx, r8.xxyx
    mul r7.yz, r7.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
    sincos r8.x, r9.x, r7.y
    div r5.z, r8.x, r9.x
    mul r5.z, r7.w, r5.z
    sincos r8.x, r9.x, r7.z
    div r7.y, r8.x, r9.x
    mul r7.y, r7.w, r7.y
    mul r8.xyz, r7.yyyy, cb1[12].xyzx
    mad r8.xyz, r5.zzzz, cb1[11].xyzx, r8.xyzx
    mad r7.yzw, r7.wwww, cb1[13].xxyz, r8.xxyz
    add r7.yzw, r7.yyzw, cb1[2].xxyz
    mad r7.yzw, -cb1[16].xxyz, cb1[14].xxxx, r7.yyzw
    mul r8.xyz, r7.zzzz, cb1[30].xyzx
    mad r8.xyz, r7.yyyy, cb1[29].xyzx, r8.xyzx
    mad r7.yzw, r7.wwww, cb1[31].xxyz, r8.xxyz
    add r7.yzw, r7.yyzw, cb1[32].xxyz
    mul r5.z, cb1[14].y, l(0.017453)
    sincos r8.x, r9.x, r5.z
    div r5.z, r8.x, r9.x
    mul r5.z, r5.z, cb1[14].x
    div r7.yzw, r7.yyzw, r5.zzzz
    mul r7.yzw, r7.yyzw, cb1[15].xxyz
    mul r8.xyz, r7.zzzz, cb1[26].xyzx
    mad r8.xyz, r7.yyyy, cb1[25].xyzx, r8.xyzx
    mad r7.yzw, r7.wwww, cb1[27].xxyz, r8.xxyz
    add r7.yzw, r7.yyzw, cb1[28].xxyz
    add r5.z, r5.w, -cb0[24].y
    mul_sat r5.z, r5.z, cb0[24].w
    mul r8.x, r5.z, l(127.000000)
    round_ni r8.x, r8.x
    lt r8.y, r8.x, l(127.000000)
    add r8.z, r8.x, l(1.000000)
    mad r5.z, r5.z, l(127.000000), -r8.x
    ftou r8.x, r8.x
    ld_indexable(buffer)(float,float,float,float) r8.x, r8.xxxx, t4.xyzw
    ftou r8.z, r8.z
    movc r8.y, r8.y, r8.z, l(127)
    ld_indexable(buffer)(float,float,float,float) r8.y, r8.yyyy, t4.yxzw
    add r8.y, -r8.x, r8.y
    mad r5.z, r5.z, r8.y, r8.x
    mul r5.z, r5.z, cb1[33].x
    mul_sat r5.z, r5.z, cb1[9].y
    add r8.xyz, -r2.xyzx, r7.yzwy
    mad r2.xyz, r5.zzzz, r8.xyzx, r2.xyzx
    ieq r5.z, r6.x, l(-1)
    if_nz r5.z
      imm_atomic_iadd r1.x, u2, cb0[22].w, l(1)
    endif 
    iadd r5.z, r1.x, cb0[20].x
    store_uav_typed u1.xyzw, r5.zzzz, r0.zzzz
    iadd r0.z, r1.x, cb0[21].y
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r6.yyyy
    iadd r4.yzw, r1.xxxx, r4.yyzw
    iadd r4.yzw, r4.yyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r4.yyyy, r6.zzzz
    imad r6.xyz, l(3, 5, 6, 0), cb0[21].yyyy, r1.xxxx
    iadd r6.xyz, r6.xyzx, cb0[20].xxxx
    store_uav_typed u1.xyzw, r6.xxxx, r6.wwww
    store_uav_typed u1.xyzw, r4.zzzz, r7.xxxx
    store_uav_typed u1.xyzw, r6.yyyy, r0.wwww
    store_uav_typed u1.xyzw, r6.zzzz, r1.yyyy
    imad r6.xyzw, l(7, 9, 10, 11), cb0[21].yyyy, r1.xxxx
    iadd r6.xyzw, r6.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r6.xxxx, r1.zzzz
    store_uav_typed u1.xyzw, r4.wwww, r5.wwww
    store_uav_typed u1.xyzw, r6.yyyy, r2.xxxx
    store_uav_typed u1.xyzw, r6.zzzz, r2.yyyy
    store_uav_typed u1.xyzw, r6.wwww, r2.zzzz
    imad r6.xyzw, l(12, 13, 14, 15), cb0[21].yyyy, r1.xxxx
    iadd r6.xyzw, r6.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r6.xxxx, r7.yyyy
    store_uav_typed u1.xyzw, r6.yyyy, r7.zzzz
    store_uav_typed u1.xyzw, r6.zzzz, r7.wwww
    store_uav_typed u1.xyzw, r6.wwww, r1.wwww
    ishl r0.z, cb0[21].y, l(4)
    iadd r0.z, r1.x, r0.z
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r2.wwww
    imad r2.xyzw, l(17, 18, 19, 20), cb0[21].yyyy, r1.xxxx
    iadd r2.xyzw, r2.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r2.xxxx, r3.xxxx
    store_uav_typed u1.xyzw, r2.yyyy, r3.yyyy
    store_uav_typed u1.xyzw, r2.zzzz, r3.zzzz
    store_uav_typed u1.xyzw, r2.wwww, r3.wwww
    store_uav_typed u0.xyzw, r5.zzzz, r4.xxxx
    imad r0.zw, l(0, 0, 21, 22), cb0[21].yyyy, r1.xxxx
    iadd r0.zw, r0.zzzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r0.zzzz, r5.xxxx
    store_uav_typed u1.xyzw, r0.wwww, r5.yyyy
  else 
    iadd r0.x, -r0.y, r0.x
    itof r0.y, r0.x
    ge r2.xyzw, r0.yyyy, cb0[10].xyzw
    and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
    dp4 r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
    ge r2.xyzw, r0.yyyy, cb0[11].xyzw
    and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
    dp4 r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
    ftoi r0.yz, r0.yyzy
    iadd r0.y, r0.y, r0.z
    iadd r0.z, r0.x, -cb0[r0.y + 12].w
    iadd r0.x, r0.x, cb1[34].y
    itof r0.z, r0.z
    mad r0.y, cb0[r0.y + 12].x, r0.z, cb0[r0.y + 12].y
    add r0.z, -r0.y, cb1[9].y
    mul r0.y, r0.y, cb1[33].z
    add r1.yzw, cb1[2].xxyz, -cb1[37].xxyz
    mad r1.yzw, r0.yyyy, r1.yyzw, cb1[37].xxyz
    add r0.y, -cb1[0].x, cb1[0].y
    imul null, r2.x, vThreadID.x, l(0x0019660d)
    imul null, r2.y, cb0[9].z, l(0x0019660d)
    iadd r2.xy, r2.xyxx, l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r3.xyzw, r2.xxxx, r2.xxxx, l(0x3c3c2745, 0x3c095b2b, 0x3beff51e, 0x3bd68f11)
    imad r4.xyzw, r2.yyyy, r3.xyzw, r2.xxxx
    imad r5.xyzw, r3.xyzw, r4.xyzw, r2.yyyy
    imad r2.xyzw, r4.xyzw, r5.xyzw, r2.xxxx
    imad r2.xyzw, r4.wxyz, r2.wxyz, r3.wxyz
    ishr r3.xyz, r2.yzwy, l(8, 8, 8, 0)
    and r3.xyz, r3.xyzx, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0)
    utof r3.xyz, r3.xyzx
    mul r0.y, r0.y, r3.x
    mad r0.y, r0.y, l(0.000000), cb1[0].x
    mul r0.y, r0.y, l(360.000000)
    add r0.w, -cb1[3].x, cb1[3].y
    mul r0.w, r0.w, r3.y
    mad r0.w, r0.w, l(0.000000), cb1[3].x
    mul r2.z, r3.z, l(0.000000)
    add r3.xy, -cb1[7].xyxx, cb1[8].xyxx
    imad r2.y, r5.w, r2.x, r4.w
    ishr r2.xy, r2.xyxx, l(8, 8, 0, 0)
    and r2.xy, r2.xyxx, l(0x00ffffff, 0x00ffffff, 0, 0)
    utof r2.xy, r2.xyxx
    mul r2.xy, r3.xyxx, r2.xyxx
    mad r3.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000), cb1[7].xyxx
    max r2.x, r0.w, l(0.000010)
    add r2.y, r2.x, l(-0.000100)
    lt r2.y, r0.z, r2.y
    div r2.x, r0.z, r2.x
    sample_l_indexable(texture2d)(float,float,float,float) r4.xyzw, r3.xyxx, t2.xyzw, s0, l(0.000000)
    add r2.w, r2.x, -cb0[23].z
    mul_sat r2.w, r2.w, cb0[24].x
    mul r3.w, r2.w, l(127.000000)
    round_ni r3.w, r3.w
    lt r5.x, r3.w, l(127.000000)
    add r5.y, r3.w, l(1.000000)
    mad r2.w, r2.w, l(127.000000), -r3.w
    mul r5.z, r3.w, l(4.000000)
    mul r5.y, r5.y, l(4.000000)
    movc r5.x, r5.x, r5.y, l(508.000000)
    ftou r5.y, r5.z
    ld_indexable(buffer)(float,float,float,float) r6.x, r5.yyyy, t3.xyzw
    mad r5.yzw, r3.wwww, l(0.000000, 4.000000, 4.000000, 4.000000), l(0.000000, 1.000000, 2.000000, 3.000000)
    ftou r5.yzw, r5.yyzw
    ld_indexable(buffer)(float,float,float,float) r6.y, r5.yyyy, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r6.z, r5.zzzz, t3.yzxw
    ld_indexable(buffer)(float,float,float,float) r6.w, r5.wwww, t3.yzwx
    ftou r3.w, r5.x
    ld_indexable(buffer)(float,float,float,float) r7.x, r3.wwww, t3.xyzw
    add r5.xyz, r5.xxxx, l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r5.xyz, r5.xyzx
    ld_indexable(buffer)(float,float,float,float) r7.y, r5.xxxx, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r7.z, r5.yyyy, t3.yzxw
    ld_indexable(buffer)(float,float,float,float) r7.w, r5.zzzz, t3.yzwx
    add r5.xyzw, -r6.xyzw, r7.xyzw
    mad r5.xyzw, r2.wwww, r5.xyzw, r6.xyzw
    mul r4.xyz, r4.xyzx, r5.xyzx
    mul r2.w, r5.w, cb1[9].z
    mul r2.w, r2.w, cb1[9].w
    mov r3.z, -r3.y
    add r3.zw, r3.xxxz, l(0.000000, 0.000000, -0.500000, 0.500000)
    mul r5.x, cb1[10].x, l(0.008727)
    sincos r5.x, r6.x, r5.x
    div r5.x, r5.x, r6.x
    mul r3.zw, r3.zzzw, r5.xxxx
    add r3.zw, r3.zzzw, r3.zzzw
    min r5.xy, |r3.zwzz|, l(1.000000, 1.000000, 0.000000, 0.000000)
    max r5.zw, |r3.zzzw|, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r5.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r5.zzzw
    mul r5.xy, r5.zwzz, r5.xyxx
    mul r5.zw, r5.xxxy, r5.xxxy
    mad r6.xy, r5.zwzz, l(0.020835, 0.020835, 0.000000, 0.000000), l(-0.085133, -0.085133, 0.000000, 0.000000)
    mad r6.xy, r5.zwzz, r6.xyxx, l(0.180141, 0.180141, 0.000000, 0.000000)
    mad r6.xy, r5.zwzz, r6.xyxx, l(-0.330299, -0.330299, 0.000000, 0.000000)
    mad r5.zw, r5.zzzw, r6.xxxy, l(0.000000, 0.000000, 0.999866, 0.999866)
    mul r6.xy, r5.zwzz, r5.xyxx
    lt r6.zw, l(0.000000, 0.000000, 1.000000, 1.000000), |r3.zzzw|
    mad r6.xy, r6.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(1.570796, 1.570796, 0.000000, 0.000000)
    and r6.xy, r6.zwzz, r6.xyxx
    mad r5.xy, r5.xyxx, r5.zwzz, r6.xyxx
    min r3.zw, r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    lt r3.zw, r3.zzzw, -r3.zzzw
    movc r3.zw, r3.zzzw, -r5.xxxy, r5.xxxy
    mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    sincos r5.x, r6.x, r3.z
    div r3.z, r5.x, r6.x
    sincos r5.x, r6.x, r3.w
    div r3.w, r5.x, r6.x
    mul r3.zw, r4.wwww, r3.zzzw
    mul r5.xyz, r3.wwww, cb1[12].xyzx
    mad r5.xyz, r3.zzzz, cb1[11].xyzx, r5.xyzx
    mad r5.xyz, r4.wwww, cb1[13].xyzx, r5.xyzx
    add r5.xyz, r5.xyzx, cb1[2].xyzx
    mad r5.xyz, -cb1[16].xyzx, cb1[14].xxxx, r5.xyzx
    mul r6.xyz, r5.yyyy, cb1[30].xyzx
    mad r5.xyw, r5.xxxx, cb1[29].xyxz, r6.xyxz
    mad r5.xyz, r5.zzzz, cb1[31].xyzx, r5.xywx
    add r5.xyz, r5.xyzx, cb1[32].xyzx
    mul r3.z, cb1[14].y, l(0.017453)
    sincos r6.x, r7.x, r3.z
    div r3.z, r6.x, r7.x
    mul r3.z, r3.z, cb1[14].x
    div r5.xyz, r5.xyzx, r3.zzzz
    mul r5.xyz, r5.xyzx, cb1[15].xyzx
    mul r6.xyz, r5.yyyy, cb1[26].xyzx
    mad r5.xyw, r5.xxxx, cb1[25].xyxz, r6.xyxz
    mad r5.xyz, r5.zzzz, cb1[27].xyzx, r5.xywx
    add r5.xyz, r5.xyzx, cb1[28].xyzx
    add r3.z, r2.x, -cb0[24].y
    mul_sat r3.z, r3.z, cb0[24].w
    mul r3.w, r3.z, l(127.000000)
    round_ni r3.w, r3.w
    lt r4.w, r3.w, l(127.000000)
    add r5.w, r3.w, l(1.000000)
    mad r3.z, r3.z, l(127.000000), -r3.w
    ftou r3.w, r3.w
    ld_indexable(buffer)(float,float,float,float) r3.w, r3.wwww, t4.yzwx
    ftou r5.w, r5.w
    movc r4.w, r4.w, r5.w, l(127)
    ld_indexable(buffer)(float,float,float,float) r4.w, r4.wwww, t4.yzwx
    add r4.w, -r3.w, r4.w
    mad r3.z, r3.z, r4.w, r3.w
    mul r3.z, r3.z, cb1[33].x
    mul_sat r3.z, r0.z, r3.z
    add r6.xyz, -r1.yzwy, r5.xyzx
    mad r1.yzw, r3.zzzz, r6.xxyz, r1.yyzw
    ieq r2.y, r2.y, l(-1)
    if_nz r2.y
      imm_atomic_iadd r1.x, u2, cb0[22].w, l(1)
    endif 
    iadd r2.y, r1.x, cb0[20].x
    store_uav_typed u1.xyzw, r2.yyyy, r0.zzzz
    iadd r0.z, r1.x, cb0[21].y
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r4.xxxx
    ishl r6.xyzw, cb0[21].yyyy, l(1, 2, 3, 4)
    iadd r6.xyzw, r1.xxxx, r6.xyzw
    iadd r6.xyzw, r6.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r6.xxxx, r4.yyyy
    imad r7.xyzw, l(3, 5, 6, 7), cb0[21].yyyy, r1.xxxx
    iadd r7.xyzw, r7.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r7.xxxx, r4.zzzz
    store_uav_typed u1.xyzw, r6.yyyy, r2.wwww
    store_uav_typed u1.xyzw, r7.yyyy, r0.wwww
    store_uav_typed u1.xyzw, r7.zzzz, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r7.wwww, r2.zzzz
    store_uav_typed u1.xyzw, r6.zzzz, r2.xxxx
    imad r4.xyzw, l(9, 10, 11, 12), cb0[21].yyyy, r1.xxxx
    iadd r4.xyzw, r4.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r4.xxxx, r1.yyyy
    store_uav_typed u1.xyzw, r4.yyyy, r1.zzzz
    store_uav_typed u1.xyzw, r4.zzzz, r1.wwww
    store_uav_typed u1.xyzw, r4.wwww, r5.xxxx
    imad r4.xyzw, l(13, 14, 15, 17), cb0[21].yyyy, r1.xxxx
    iadd r4.xyzw, r4.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r4.xxxx, r5.yyyy
    store_uav_typed u1.xyzw, r4.yyyy, r5.zzzz
    store_uav_typed u1.xyzw, r4.zzzz, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r6.wwww, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r4.wwww, l(1.000000,1.000000,1.000000,1.000000)
    imad r4.xyzw, l(18, 19, 20, 21), cb0[21].yyyy, r1.xxxx
    iadd r4.xyzw, r4.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r4.xxxx, r0.yyyy
    store_uav_typed u1.xyzw, r4.yyyy, cb1[5].xxxx
    store_uav_typed u1.xyzw, r4.zzzz, cb1[5].yyyy
    store_uav_typed u0.xyzw, r2.yyyy, r0.xxxx
    store_uav_typed u1.xyzw, r4.wwww, r3.xxxx
    imad r0.x, l(22), cb0[21].y, r1.x
    iadd r0.x, r0.x, cb0[20].x
    store_uav_typed u1.xyzw, r0.xxxx, r3.yyyy
  endif 
endif 
ret 
// Approximately 374 instruction slots used
